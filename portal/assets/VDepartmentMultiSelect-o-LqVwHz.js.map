{"version":3,"file":"VDepartmentMultiSelect-o-LqVwHz.js","sources":["../../src/shared/ui/inputs/VDepartmentMultiSelect.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { onMounted, ref, watch } from 'vue'\nimport { useDepartment } from '@/shared/api/departments/useDepartment'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IUserDepartment } from '@/shared/types/user/IUser'\nimport { useOperationalBase } from '@/shared/api/operational-bases/useOperationalBase'\nimport type { IOperationalBase } from '@/shared/types/operational-bases/IOperationalBase'\n\nconst { apiGetOperationalBasesByDepartments } = useOperationalBase()\n\nconst selectedDepartments = defineModel<IDepartment[]>('selectedDepartments', {\n  default: () => [],\n})\nconst selectedOperationalBases = defineModel<IOperationalBase[]>('selectedOperationalBases', {\n  default: () => [],\n})\nconst allOperationalBases = ref<IOperationalBase[]>([])\n\nconst {\n  departmentActions,\n  apiGetDepartments,\n} = useDepartment()\n\nconst { actionIsInProgress } = useUi()\n\nconst { operationalBaseActions } = useOperationalBase()\n\nconst loading = ref<boolean>(true)\nconst allDepartments = ref<IUserDepartment[]>()\n\nonMounted(async () => {\n  try {\n    allDepartments.value = await apiGetDepartments()\n  }\n  catch (e: any) {\n    console.log(e)\n  }\n  finally {\n    loading.value = false\n  }\n})\n\n/**\n * TODO\n * Make an actual modal. This is just a quick and dirty solution.\n * - Nick 18/01/2024\n */\nconst confirmDepartmentRemoval = () => {\n  return new Promise((resolve) => {\n    /* eslint-disable-next-line no-alert */\n    const userConfirmed = window.confirm('Deselecting this department will remove all department-specific changes you\\'ve made. Are you sure?')\n    resolve(userConfirmed)\n  })\n}\nconst toggleDepartment = async (department: IUserDepartment) => {\n  department.primary = false\n  let i = -1\n  if (selectedDepartments.value?.length) {\n    i = selectedDepartments.value.findIndex((d) => d.id === department.id)\n  }\n  if (i >= 0) {\n    const userConfirmed = await confirmDepartmentRemoval()\n    if (userConfirmed) {\n      selectedDepartments.value?.splice(i, 1)\n      selectedOperationalBases.value = selectedOperationalBases.value.filter((ob) => ob.department.id !== department.id)\n    }\n  }\n  else {\n    selectedDepartments.value?.push(department)\n  }\n}\n\nconst departmentIsSelected = (department: IDepartment) => {\n  if (selectedDepartments.value?.length === 0) {\n    return false\n  }\n  return selectedDepartments.value?.findIndex((d) => d.id === department.id) >= 0\n}\n\nconst operationalBaseIsSelected = (operationalBase: IOperationalBase) => {\n  return selectedOperationalBases.value!.findIndex((d) => d.id === operationalBase.id) >= 0\n}\n\nconst fetchOperationalBases = async () => {\n  try {\n    const rsp = await apiGetOperationalBasesByDepartments(selectedDepartments.value)\n    if (rsp) {\n      allOperationalBases.value = rsp\n    }\n  }\n  catch (e: any) {\n    console.log(e)\n  }\n  finally {\n    loading.value = false\n  }\n}\n\nconst toggleOperationalBase = (base: IOperationalBase) => {\n  let i = -1\n  if (selectedOperationalBases.value?.length) {\n    i = selectedOperationalBases.value.findIndex((d) => d.id === base.id)\n  }\n  if (i >= 0) {\n    selectedOperationalBases.value?.splice(i, 1)\n  }\n  else {\n    selectedOperationalBases.value?.push(base)\n  }\n}\n\nwatch (() => selectedDepartments.value, async () => {\n  await fetchOperationalBases()\n\n  if (selectedDepartments.value.length > 0) {\n    selectedDepartments.value.forEach((department) => {\n      const operationalBasesForDepartment = allOperationalBases.value.filter((ob) => ob.department.id === department.id)\n      if (operationalBasesForDepartment.length > 0) {\n        const selectedOperationalBasesForDepartment = selectedOperationalBases.value.filter((ob) => ob.department.id === department.id)\n        if (selectedOperationalBasesForDepartment.length === 0) {\n          selectedOperationalBases.value.push(operationalBasesForDepartment[0])\n        }\n      }\n    })\n  }\n}, {\n  deep: true,\n  immediate: true,\n})\n</script>\n\n<template>\n  <div class=\"space-y-4\">\n    <div class=\"flex w-full items-center justify-between\">\n      <p class=\"text-sm font-medium text-gray-700\">\n        Departments\n      </p>\n      <ProgressSpinner\n        v-if=\"actionIsInProgress(departmentActions.getDepartments)\"\n        class=\"h-3 w-3 text-blue-500\"\n      />\n    </div>\n    <div class=\"relative grid grid-cols-1 gap-3\">\n      <div\n        v-for=\"department in allDepartments\"\n        :key=\"department.id\"\n        class=\"flex items-start\"\n      >\n        <div class=\"flex h-5 items-center\">\n          <input\n            :id=\"department.id.toString()\"\n            type=\"checkbox\"\n            :checked=\"departmentIsSelected(department)\"\n            class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            @change=\"toggleDepartment(department)\"\n          >\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <button\n            class=\"flex items-center gap-1 font-medium text-gray-700\"\n            @click.prevent=\"toggleDepartment(department)\"\n          >\n            {{ department.name }}\n            <ProgressSpinner\n              v-if=\"actionIsInProgress(operationalBaseActions.getOperationalBasesByDepartments)\"\n              class=\"h-3 w-3 text-blue-500\"\n            />\n          </button>\n          <div\n            v-if=\"allOperationalBases.filter(ob => ob.department.id === department.id).length > 1\"\n            class=\"flex gap-3\"\n          >\n            <span class=\"text-gray-500\">\n              Operational Base:\n            </span>\n            <ul class=\"flex flex-wrap gap-3\">\n              <li\n                v-for=\"base in allOperationalBases.filter(ob => ob.department.id === department.id)\"\n                :key=\"base.id\"\n                class=\"flex items-center gap-2\"\n              >\n                <div class=\"flex h-5 items-center gap-2\">\n                  <input\n                    :id=\"base.id.toString()\"\n                    type=\"checkbox\"\n                    :checked=\"operationalBaseIsSelected(base)\"\n                    class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    @change=\"toggleOperationalBase(base)\"\n                  >\n                  <button\n                    class=\"flex items-start text-gray-700\"\n                    @click.prevent=\"toggleOperationalBase(base)\"\n                  >\n                    <span class=\"text-sm leading-none\">{{ base.name }}</span>\n                  </button>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"],"names":["apiGetOperationalBasesByDepartments","useOperationalBase","selectedDepartments","_useModel","__props","selectedOperationalBases","allOperationalBases","ref","departmentActions","apiGetDepartments","useDepartment","actionIsInProgress","useUi","operationalBaseActions","loading","allDepartments","onMounted","confirmDepartmentRemoval","resolve","userConfirmed","toggleDepartment","department","i","_a","d","_b","ob","_c","departmentIsSelected","operationalBaseIsSelected","operationalBase","fetchOperationalBases","rsp","toggleOperationalBase","base","watch","operationalBasesForDepartment"],"mappings":"0oCAUM,KAAA,CAAE,oCAAAA,GAAwCC,IAE1CC,EAAsBC,EAA0BC,EAAC,qBAEtD,EACKC,EAA2BF,EAAgCC,EAAA,0BAEhE,EACKE,EAAsBC,EAAwB,CAAA,CAAE,EAEhD,CACJ,kBAAAC,EACA,kBAAAC,GACEC,EAAc,EAEZ,CAAE,mBAAAC,GAAuBC,IAEzB,CAAE,uBAAAC,GAA2BZ,IAE7Ba,EAAUP,EAAa,EAAI,EAC3BQ,EAAiBR,IAEvBS,EAAU,SAAY,CAChB,GAAA,CACaD,EAAA,MAAQ,MAAMN,UAExB,EAAQ,CACb,QAAQ,IAAI,CAAC,CAAA,QAEf,CACEK,EAAQ,MAAQ,EAClB,CAAA,CACD,EAOD,MAAMG,EAA2B,IACxB,IAAI,QAASC,GAAY,CAExB,MAAAC,EAAgB,OAAO,QAAQ,oGAAqG,EAC1ID,EAAQC,CAAa,CAAA,CACtB,EAEGC,EAAmB,MAAOC,GAAgC,WAC9DA,EAAW,QAAU,GACrB,IAAIC,EAAI,IACJC,EAAArB,EAAoB,QAApB,MAAAqB,EAA2B,SACzBD,EAAApB,EAAoB,MAAM,UAAWsB,GAAMA,EAAE,KAAOH,EAAW,EAAE,GAEnEC,GAAK,EACe,MAAML,OAENQ,EAAAvB,EAAA,QAAA,MAAAuB,EAAO,OAAOH,EAAG,GACZjB,EAAA,MAAQA,EAAyB,MAAM,OAAQqB,GAAOA,EAAG,WAAW,KAAOL,EAAW,EAAE,IAI/FM,EAAAzB,EAAA,QAAA,MAAAyB,EAAO,KAAKN,EAClC,EAGIO,EAAwBP,GAA4B,SACpD,QAAAE,EAAArB,EAAoB,QAApB,YAAAqB,EAA2B,UAAW,EACjC,KAEFE,EAAAvB,EAAoB,QAApB,YAAAuB,EAA2B,UAAWD,GAAMA,EAAE,KAAOH,EAAW,MAAO,CAAA,EAG1EQ,EAA6BC,GAC1BzB,EAAyB,MAAO,UAAWmB,GAAMA,EAAE,KAAOM,EAAgB,EAAE,GAAK,EAGpFC,EAAwB,SAAY,CACpC,GAAA,CACF,MAAMC,EAAM,MAAMhC,EAAoCE,EAAoB,KAAK,EAC3E8B,IACF1B,EAAoB,MAAQ0B,SAGzB,EAAQ,CACb,QAAQ,IAAI,CAAC,CAAA,QAEf,CACElB,EAAQ,MAAQ,EAClB,CAAA,EAGImB,EAAyBC,GAA2B,WACxD,IAAIZ,EAAI,IACJC,EAAAlB,EAAyB,QAAzB,MAAAkB,EAAgC,SAC9BD,EAAAjB,EAAyB,MAAM,UAAWmB,GAAMA,EAAE,KAAOU,EAAK,EAAE,GAElEZ,GAAK,GACkBG,EAAApB,EAAA,QAAA,MAAAoB,EAAO,OAAOH,EAAG,IAGjBK,EAAAtB,EAAA,QAAA,MAAAsB,EAAO,KAAKO,EACvC,EAGK,OAAAC,EAAA,IAAMjC,EAAoB,MAAO,SAAY,CAClD,MAAM6B,EAAsB,EAExB7B,EAAoB,MAAM,OAAS,GACjBA,EAAA,MAAM,QAASmB,GAAe,CAC1C,MAAAe,EAAgC9B,EAAoB,MAAM,OAAQoB,GAAOA,EAAG,WAAW,KAAOL,EAAW,EAAE,EAC7Ge,EAA8B,OAAS,GACK/B,EAAyB,MAAM,OAAQqB,GAAOA,EAAG,WAAW,KAAOL,EAAW,EAAE,EACpF,SAAW,GACnDhB,EAAyB,MAAM,KAAK+B,EAA8B,CAAC,CAAC,CAExE,CACD,CACH,EACC,CACD,KAAM,GACN,UAAW,EAAA,CACZ"}