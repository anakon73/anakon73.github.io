{"version":3,"file":"models-qWR1FMGP.js","sources":["../../src/shared/types/models.ts"],"sourcesContent":["import type { Component } from 'vue'\nimport type { Brand, ObjectToUnion } from '@/shared/lib/utils'\n\nexport const ExperienceDifficulty = {\n  Easy: 'Easy',\n  Moderate: 'Moderate',\n  Difficult: 'Difficult',\n} as const\nexport type ExperienceDifficulty = ObjectToUnion<typeof ExperienceDifficulty>\n\nexport interface Department {\n  id: Brand<number, 'departmentId'>\n  organizationId: number\n  name: string\n  code: number | string\n  description: string | null\n  logo: string | null\n}\n\nexport interface Role {\n  id: Brand<number, 'roleId'>\n  description: string | null\n  name: string\n  slug: string\n}\n\nexport interface Ability {\n  id: Brand<number, 'abilityId'>\n  description: string | null\n  displayOrder: number\n  iconUrl: string\n  name: string\n  slug: string\n}\n\nexport interface Permission {\n  department: Department\n  permission: {\n    id: Brand<number, 'permissionId'>\n    label: string\n    description: string | null\n    slug: string\n  }\n}\n\nexport interface EmploymentLog {\n  id: Brand<number, 'employmentLogId'>\n  userId: number\n  startDate: string\n  endDate: string | null\n}\n\nexport interface Staff {\n  id: Brand<number, 'staffId'>\n  firstName: string\n  lastName: string\n  fullName: string\n  initials: string\n  email: string\n  profilePhotoSrc: string | null\n  profilePhotoDbPath: string | null\n  contactNumber: string | null\n  kennitala: string | null\n  bankAccountNumber: string | null\n  operationalBases: OperationalBase[]\n  roles: Role[]\n  permissions: Permission[]\n  abilities: Ability[]\n  allAbilities: Ability[]\n  employmentLogs: EmploymentLog[]\n  nextOfKinName: string | null\n  nextOfKinContactNumber: string | null\n  startDate: string | null\n  departments: (Department & { primary: boolean })[]\n  currentlyEmployed: boolean\n}\n\nexport interface OperationalBase {\n  id: Brand<number, 'operationBaseId'>\n  name: string\n  latitude: number\n  longitude: number\n  department: Department\n}\n\nexport interface ExperienceLocation {\n  id: Brand<number, 'experienceLocationId'>\n  operationalBaseId: OperationalBase['id']\n  name: string\n  latitude: number\n  longitude: number\n}\n\nexport interface Experience {\n  id: Brand<number, 'experienceId'>\n  externalId: number\n  department: Department\n  operationalBase: OperationalBase\n  externalProductCode: string\n  experienceLocation: ExperienceLocation\n  title: string\n  description: string | null\n  durationInMinutes: number\n  minAge: number\n  difficulty: ExperienceDifficulty\n  distanceHikedInMeters: number\n  distanceDrivenInMeters: number\n  customizedStartTime: boolean\n  allowVehicles: boolean\n}\n\nexport interface BookedExtras {\n  bookingExternalId: string\n  externalQuantity: number\n  quantity: number\n  name: string\n  question: string | null\n  answer: string | null\n}\n\nexport const BookingStatus = {\n  Cancelled: 'noshow',\n  Confirmed: 'confirmed',\n  Arrived: 'arrived',\n  Other: 'other',\n  DroppedOff: 'droppedoff',\n} as const\nexport type BookingStatus = ObjectToUnion<typeof BookingStatus>\n\nexport const BookingPaymentStatus = {\n  PaidInFull: 'PAID_IN_FULL',\n  Invoiced: 'INVOICED',\n  Free: 'FREE',\n  NotPaid: 'NOT_PAID',\n  Arrived: 'DEPOSIT',\n} as const\nexport type BookingPaymentStatus = ObjectToUnion<typeof BookingPaymentStatus>\n\n// export interface Waiver {\n//   experienceBookingCode: string\n//   documentCount: number\n//   allOk: boolean\n//   name: string\n// }\n\n// export interface Booking {\n//   status: BookingStatus\n//   totalPassengerCount: number\n//   isCheckedIn: boolean\n//   external: {\n//     id: Brand<string, 'bookingExternalId'>\n//     reference: string\n//     status: BookingStatus\n//     paymentStatus: BookingPaymentStatus\n//     totalPassengerCount: number\n//     customerEmailAddress: string | null\n//     customerFirstName: string\n//     customerLastName: string\n//     customerPhoneNumber: string | null\n//   }\n//   bookedExtras: BookedExtras[]\n// }\n\nexport interface VehicleAndDriver {\n  id: Brand<number, 'vehicleAndDriverId'>\n  name: string\n  registrationNumber: string\n  maxCapacity: number\n  isAssigned: boolean\n  driverId: number | null\n  driverName: string | null\n}\n\nexport const ScheduledExperienceStatus = {\n  SoldOut: 'SOLD_OUT',\n  Available: 'AVAILABLE',\n  Cancelled: 'CANCELLED',\n} as const\nexport type ScheduledExperienceStatus = ObjectToUnion<\n  typeof ScheduledExperienceStatus\n>\n\nexport interface User {\n  id: Brand<number, 'userId'>\n  name: string\n  email: string\n  phone: string | null\n  avatar: string | null\n}\n\nexport interface Vehicle {\n  id: Brand<number, 'vehicleId'>\n  title: string\n  registrationNumber: string\n  maxCapacity: number\n}\n\nexport interface Tour {\n  id: Brand<number, 'tourId'>\n  code: string\n  name: string\n  thumbnailUrl: string | null\n}\n\nexport interface Departure {\n  id: Brand<number, 'departureId'>\n  /**  @description hours:minutes */\n  time: string\n  /**\n   * @description The duration of the departure in seconds\n   */\n  durationSeconds: number | null\n}\n\nexport interface Passenger {\n  id: Brand<number, 'mainBookingPassengerId'>\n  name: string\n  email: string | null\n  phone: string | null\n}\n\nexport interface Booking {\n  id: Brand<number, 'bookingId'>\n  code: string\n  externalReference: string\n  mainPassenger: Passenger | null\n  // paymentStatus: BookingPaymentStatus | null\n}\n\nexport interface PickupPlace {\n  id: number\n  name: string\n}\n\nexport interface Extra {\n  id: number\n  code: string\n  description: string\n  externalId: string\n  name: string\n}\n\nexport interface Question {\n  id: number\n  answer: string\n  externalId: string\n  label: string\n}\n\nexport interface ExtraBooking {\n  id: number\n  quantity: number\n  extra?: Extra\n  questions?: Question[]\n}\nexport interface PassengerBooking {\n  extraBookings?: ExtraBooking[]\n}\nexport interface TourBooking {\n  id: Brand<number, 'tourBookingId'>\n  externalId: string\n  code: string\n  date: Date\n  status: BookingStatus\n  booking: Booking\n  arrivedPassengerCount: number | null\n  totalPassengerCount: number\n  link: string | null\n  waiverStatus: boolean | null\n  pickupPlace: PickupPlace | null\n  passengerBookings?: PassengerBooking[]\n}\n\nexport const ScheduledDepartureStatus = {\n  Cancelled: 'cancelled',\n  Ongoing: 'ongoing',\n} as const\nexport type ScheduledDepartureStatus = ObjectToUnion<\n  typeof ScheduledDepartureStatus\n>\n\nexport interface ScheduledDeparture {\n  id: Brand<number, 'scheduledDepartureId'>\n  bookingSystemAvailability: number | null\n  comment: string | null\n  totalPassengerCount: number\n  status: ScheduledDepartureStatus\n  tour: Tour\n  departure: Departure\n  tourBookings: TourBooking[]\n  start: Date\n  end: Date\n  scheduledUsers: {\n    userId: User['id']\n    vehicleId: Vehicle['id'] | null\n  }[]\n}\n\nexport type RatioItem = {\n  key: string\n  // TODO: CssClasses - Create env.d.ts inside the shared folder\n  color: string | string[] | Record<string, boolean>\n  value: number\n  icon: Component | string\n  barPosition: number\n  isDisplayedInEditMode?: boolean\n}\n\nexport const DepartureProgressType = {\n  Seats: 'seats',\n  Passengers: 'passengers',\n  Availability: 'availability',\n} as const\nexport type DepartureProgressType = typeof DepartureProgressType[\n  keyof typeof DepartureProgressType\n]\n\nexport const DepartureMessageType = {\n  Primary: 'primary',\n  Secondary: 'secondary',\n  Success: 'success',\n  Danger: 'danger',\n  Warning: 'warning',\n  Info: 'info',\n} as const\nexport type DepartureMessageType = typeof DepartureMessageType[\n  keyof typeof DepartureMessageType\n]\n\nexport const Status = {\n  Prepare: 'Prepare',\n  CheckIn: 'Check in',\n  OnTour: 'On tour',\n} as const\nexport type Status = ObjectToUnion<typeof Status>\n\nexport const BookingListStep = {\n  Pickup: 'pickup',\n  Passengers: 'passengers',\n} as const\nexport type BookingListStep = ObjectToUnion<\n  typeof BookingListStep\n>\n"],"names":["BookingStatus","ScheduledDepartureStatus","BookingListStep"],"mappings":"AAwHO,MAAMA,EAAgB,CAC3B,UAAW,SACX,UAAW,YACX,QAAS,UACT,MAAO,QACP,WAAY,YACd,EAmJaC,EAA2B,CACtC,UAAW,YACX,QAAS,SACX,EA4DaC,EAAkB,CAC7B,OAAQ,SACR,WAAY,YACd"}