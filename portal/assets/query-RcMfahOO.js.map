{"version":3,"file":"query-RcMfahOO.js","sources":["../../src/shared/api/booking/query.ts"],"sourcesContent":["import { useMutation, useQueryClient } from '@tanstack/vue-query'\nimport { useDepartureQuery } from '../scheduled-departure'\nimport { updateTourBooking } from './api'\n\nconst entity = 'booking'\nconst Scopes = {}\n\nconst keys = {}\n\nexport {\n  keys as bookingKeys,\n  entity as bookingEntities,\n  Scopes as bookingScopes,\n}\n\nexport function useTourBookingUpdate() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: updateTourBooking,\n    onSuccess(tourBooking, { tourBookingId }) {\n      queryClient.setQueryData(\n        useDepartureQuery({\n          scheduledDepartureId: tourBooking.scheduledDepartureId,\n        }).queryKey,\n        (scheduledDeparture) => {\n          if (scheduledDeparture) {\n            return {\n              ...scheduledDeparture,\n              tourBookings: scheduledDeparture.tourBookings.map((tb) => {\n                if (tb.id === tourBookingId) {\n                  return {\n                    ...tb,\n                    status: tourBooking.status,\n                    arrivedPassengerCount: tourBooking.arrivedPassengerCount,\n                  }\n                }\n\n                return tb\n              }),\n            }\n          }\n        },\n      )\n    },\n  })\n}\n"],"names":["useTourBookingUpdate","queryClient","useQueryClient","useMutation","updateTourBooking","tourBooking","tourBookingId","useDepartureQuery","scheduledDeparture","tb"],"mappings":"6DAeO,SAASA,GAAuB,CACrC,MAAMC,EAAcC,IAEpB,OAAOC,EAAY,CACjB,WAAYC,EACZ,UAAUC,EAAa,CAAE,cAAAC,GAAiB,CAC5BL,EAAA,aACVM,EAAkB,CAChB,qBAAsBF,EAAY,oBACnC,CAAA,EAAE,SACFG,GAAuB,CACtB,GAAIA,EACK,MAAA,CACL,GAAGA,EACH,aAAcA,EAAmB,aAAa,IAAKC,GAC7CA,EAAG,KAAOH,EACL,CACL,GAAGG,EACH,OAAQJ,EAAY,OACpB,sBAAuBA,EAAY,qBAAA,EAIhCI,CACR,CAAA,CAGP,CAAA,CAEJ,CAAA,CACD,CACH"}