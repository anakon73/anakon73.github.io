{"version":3,"file":"useAssessment-iBONDyw0.js","sources":["../../src/shared/api/stores/assessment.ts","../../src/shared/api/useAssessment.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { defineStore } from 'pinia'\nimport type { IAssessment } from '@/shared/types/assessments/IAssessment'\n\nexport const useAssessmentStore = defineStore('assessment', () => {\n  const storeAssessments = ref<IAssessment[]>([])\n\n  function storeSetAssessments(i: IAssessment[]) {\n    storeAssessments.value = i\n  }\n\n  function storeAddAssessment(i: IAssessment) {\n    storeAssessments.value.push(i)\n  }\n\n  function storeRemoveAssessment(i: IAssessment) {\n    const index = storeAssessments.value.findIndex((assessment) => assessment.id === i.id)\n    if (index !== -1) {\n      storeAssessments.value.splice(index, 1)\n    }\n  }\n\n  function storeUpdateAssessment(i: IAssessment) {\n    const index = storeAssessments.value.findIndex((assessment) => assessment.id === i.id)\n    storeAssessments.value[index] = i\n  }\n\n  function storeClearAssessments() {\n    storeAssessments.value = []\n  }\n\n  return {\n    storeSetAssessments,\n    storeAssessments,\n    storeAddAssessment,\n    storeRemoveAssessment,\n    storeUpdateAssessment,\n    storeClearAssessments,\n  }\n})\n","import { storeToRefs } from 'pinia'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport type { IAssessUserFormData } from '@/shared/types/user/IAssessUserFormData'\nimport { useAssessmentStore } from '@/shared/api/stores/assessment'\nimport type { IAssessment, IAssessmentCriteria } from '@/shared/types/assessments/IAssessment'\nimport type { CreateAssessmentDTO, EditAssessmentDTO } from '@/shared/types/assessments/AssessmentDTOs'\n\nexport function useAssessment() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    resetActionsInError,\n    processActionSuccess,\n    resetActionsInSuccess,\n  } = useUi()\n\n  const {\n    storeUpdateAssessment,\n  } = useAssessmentStore()\n  const {\n    storeAssessments,\n  } = storeToRefs(useAssessmentStore())\n\n  const assessmentActions = {\n    getAssessmentsByDepartmentId: {\n      id: 'getAssessmentsByDepartmentId',\n      successMessage: 'Assessments retrieved successfully.',\n      errorMessage: 'There was a problem retrieving assessments.',\n    } as IAction,\n    getAllAssessmentsByUserAbility: {\n      id: 'getAllAssessmentsByUserAbility',\n      successMessage: 'Assessments retrieved successfully.',\n      errorMessage: 'There was a problem retrieving assessments.',\n    } as IAction,\n    getAllAssessmentLogsByUserId: {\n      id: 'getAllAssessmentLogsByUserId',\n      successMessage: 'Assessment logs retrieved successfully.',\n      errorMessage: 'There was a problem retrieving the assessment logs.',\n    } as IAction,\n    assessUser: {\n      id: 'assessUser',\n      successMessage: 'Assessment successfully logged.',\n      errorMessage: 'There was a problem logging the assessment.',\n    } as IAction,\n    getAssessmentById: {\n      id: 'getAssessmentById',\n      successMessage: 'Assessment retrieved successfully.',\n      errorMessage: 'There was a problem retrieving the assessment.',\n    },\n    editAssessment: {\n      id: 'editAssessment',\n      successMessage: 'Assessment edited successfully.',\n      errorMessage: 'There was a problem editing the assessment.',\n    },\n    deleteAssessmentLog: {\n      id: 'deleteAssessmentLog',\n      successMessage: 'Assessment deleted successfully.',\n      errorMessage: 'There was a problem deleting the assessment.',\n    },\n    createAssessment: {\n      id: 'createAssessment',\n      successMessage: 'Assessment created successfully.',\n      errorMessage: 'There was a problem creating the assessment.',\n    },\n  }\n\n  const apiGetAssessmentsByDepartmentId = async (departmentId: number): Promise<IAssessment[] | void> => {\n    resetActionsInError()\n    addToActionsInProgress(assessmentActions.getAssessmentsByDepartmentId)\n\n    try {\n      const rsp = await apiClient.get('/api/assessments', {\n        params: {\n          selectedDepartmentId: departmentId,\n        },\n      })\n\n      removeFromActionsInProgress(assessmentActions.getAssessmentsByDepartmentId)\n      return rsp.data.assessments\n    }\n    catch (e: unknown) {\n      processActionError(assessmentActions.getAssessmentsByDepartmentId, e)\n    }\n  }\n\n  const getAllAssessmentsByUserAbility = async (): Promise<IAssessment[] | void> => {\n    resetActionsInError()\n    addToActionsInProgress(assessmentActions.getAllAssessmentsByUserAbility)\n\n    try {\n      const rsp = await apiClient.get('/api/assessments-by-user-ability')\n\n      removeFromActionsInProgress(assessmentActions.getAllAssessmentsByUserAbility)\n      return rsp.data.assessments\n    }\n    catch (e: any) {\n      processActionError(assessmentActions.getAllAssessmentsByUserAbility, e)\n    }\n  }\n\n  const getAllAssessmentLogsByUserId = async (userId: number) => {\n    resetActionsInError()\n    addToActionsInProgress(assessmentActions.getAllAssessmentLogsByUserId)\n\n    try {\n      const rsp = await apiClient.get(`/api/user/${userId}/assessment-logs`)\n\n      removeFromActionsInProgress(assessmentActions.getAllAssessmentLogsByUserId)\n      return rsp.data\n    }\n    catch (e: any) {\n      processActionError(assessmentActions.getAllAssessmentLogsByUserId, e)\n    }\n  }\n\n  const assessUser = async (assessUserData: IAssessUserFormData) => {\n    /**\n     * We clear the actions in error so that any error response from\n     * a previous attempt to create a user is cleared.\n     */\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(assessmentActions.assessUser)\n\n    try {\n      await apiClient.post(`/api/user/${assessUserData.user.id}/assess`, assessUserData)\n      processActionSuccess(assessmentActions.assessUser)\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(assessmentActions.assessUser, e)\n      return false\n    }\n  }\n\n  const getAllAssessmentsFromStore = () => {\n    return storeAssessments.value\n  }\n\n  const getAssessmentById = async (assessmentId: string): Promise<IAssessment | void> => {\n    resetActionsInError()\n    addToActionsInProgress(assessmentActions.getAssessmentById)\n\n    try {\n      const rsp = await apiClient.get(`/api/assessment/${assessmentId}`)\n      removeFromActionsInProgress(assessmentActions.getAssessmentById)\n      return rsp.data.assessment\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(assessmentActions.getAssessmentById, e)\n    }\n  }\n\n  const editAssessment = async (\n    assessmentData: EditAssessmentDTO,\n    newCriteria: IAssessmentCriteria[],\n  ) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(assessmentActions.editAssessment)\n\n    try {\n      const rsp = await apiClient.put(`/api/assessment/${assessmentData.id}`, {\n        assessmentData,\n        newCriteria,\n      })\n      storeUpdateAssessment(rsp.data.assessment)\n      processActionSuccess(assessmentActions.editAssessment)\n      return rsp.data.assessment\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(assessmentActions.editAssessment, e)\n    }\n  }\n\n  const deleteAssessmentLog = async (assessmentLogId: number) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    const action = { ...assessmentActions.deleteAssessmentLog }\n    action.id = `${action.id}-${assessmentLogId}`\n    addToActionsInProgress(action)\n\n    try {\n      await apiClient.delete(`/api/assessment-log/${assessmentLogId}`)\n      processActionSuccess(action)\n    }\n    catch (e: any) {\n      processActionError(action, e)\n      return false\n    }\n  }\n\n  const createAssessment = async (assessmentData: CreateAssessmentDTO): Promise<IAssessment | void> => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(assessmentActions.createAssessment)\n\n    try {\n      const rsp = await apiClient.post('/api/assessment', assessmentData)\n      processActionSuccess(assessmentActions.createAssessment)\n      return rsp.data.assessment\n    }\n    catch (e: unknown) {\n      console.log(e)\n      processActionError(assessmentActions.createAssessment, e)\n    }\n  }\n\n  return {\n    assessmentActions,\n    getAllAssessmentsByUserAbility,\n    getAllAssessmentLogsByUserId,\n    assessUser,\n    apiGetAssessmentsByDepartmentId,\n    getAllAssessmentsFromStore,\n    getAssessmentById,\n    editAssessment,\n    deleteAssessmentLog,\n    createAssessment,\n  }\n}\n"],"names":["useAssessmentStore","defineStore","storeAssessments","ref","storeSetAssessments","i","storeAddAssessment","storeRemoveAssessment","index","assessment","storeUpdateAssessment","storeClearAssessments","useAssessment","apiClient","useApiClient","addToActionsInProgress","removeFromActionsInProgress","processActionError","resetActionsInError","processActionSuccess","resetActionsInSuccess","useUi","storeToRefs","assessmentActions","rsp","e","userId","assessUserData","departmentId","assessmentId","assessmentData","newCriteria","assessmentLogId","action"],"mappings":"oJAIa,MAAAA,EAAqBC,EAAY,aAAc,IAAM,CAC1D,MAAAC,EAAmBC,EAAmB,CAAA,CAAE,EAE9C,SAASC,EAAoBC,EAAkB,CAC7CH,EAAiB,MAAQG,CAC3B,CAEA,SAASC,EAAmBD,EAAgB,CACzBH,EAAA,MAAM,KAAKG,CAAC,CAC/B,CAEA,SAASE,EAAsBF,EAAgB,CACvC,MAAAG,EAAQN,EAAiB,MAAM,UAAWO,GAAeA,EAAW,KAAOJ,EAAE,EAAE,EACjFG,IAAU,IACKN,EAAA,MAAM,OAAOM,EAAO,CAAC,CAE1C,CAEA,SAASE,EAAsBL,EAAgB,CACvC,MAAAG,EAAQN,EAAiB,MAAM,UAAWO,GAAeA,EAAW,KAAOJ,EAAE,EAAE,EACpEH,EAAA,MAAMM,CAAK,EAAIH,CAClC,CAEA,SAASM,GAAwB,CAC/BT,EAAiB,MAAQ,EAC3B,CAEO,MAAA,CACL,oBAAAE,EACA,iBAAAF,EACA,mBAAAI,EACA,sBAAAC,EACA,sBAAAG,EACA,sBAAAC,CAAA,CAEJ,CAAC,EC9BM,SAASC,GAAgB,CACxB,KAAA,CAAE,UAAAC,GAAcC,IAChB,CACJ,uBAAAC,EACA,4BAAAC,EACA,mBAAAC,EACA,oBAAAC,EACA,qBAAAC,EACA,sBAAAC,GACEC,EAAM,EAEJ,CACJ,sBAAAX,GACEV,EAAmB,EACjB,CACJ,iBAAAE,CAAA,EACEoB,EAAYtB,EAAA,CAAoB,EAE9BuB,EAAoB,CACxB,6BAA8B,CAC5B,GAAI,+BACJ,eAAgB,sCAChB,aAAc,6CAChB,EACA,+BAAgC,CAC9B,GAAI,iCACJ,eAAgB,sCAChB,aAAc,6CAChB,EACA,6BAA8B,CAC5B,GAAI,+BACJ,eAAgB,0CAChB,aAAc,qDAChB,EACA,WAAY,CACV,GAAI,aACJ,eAAgB,kCAChB,aAAc,6CAChB,EACA,kBAAmB,CACjB,GAAI,oBACJ,eAAgB,qCAChB,aAAc,gDAChB,EACA,eAAgB,CACd,GAAI,iBACJ,eAAgB,kCAChB,aAAc,6CAChB,EACA,oBAAqB,CACnB,GAAI,sBACJ,eAAgB,mCAChB,aAAc,8CAChB,EACA,iBAAkB,CAChB,GAAI,mBACJ,eAAgB,mCAChB,aAAc,8CAChB,CAAA,EAmJK,MAAA,CACL,kBAAAA,EACA,+BA/HqC,SAA2C,CAC5DL,IACpBH,EAAuBQ,EAAkB,8BAA8B,EAEnE,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,kCAAkC,EAElE,OAAAG,EAA4BO,EAAkB,8BAA8B,EACrEC,EAAI,KAAK,kBAEXC,EAAQ,CACMR,EAAAM,EAAkB,+BAAgCE,CAAC,CACxE,CAAA,EAoHA,6BAjHmC,MAAOC,GAAmB,CACzCR,IACpBH,EAAuBQ,EAAkB,4BAA4B,EAEjE,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,aAAaa,CAAM,kBAAkB,EAErE,OAAAV,EAA4BO,EAAkB,4BAA4B,EACnEC,EAAI,WAENC,EAAQ,CACMR,EAAAM,EAAkB,6BAA8BE,CAAC,CACtE,CAAA,EAsGA,WAnGiB,MAAOE,GAAwC,CAK5CT,IACEE,IACtBL,EAAuBQ,EAAkB,UAAU,EAE/C,GAAA,CACF,MAAMV,EAAU,KAAK,aAAac,EAAe,KAAK,EAAE,UAAWA,CAAc,EACjFR,EAAqBI,EAAkB,UAAU,QAE5CE,EAAQ,CACb,eAAQ,IAAIA,CAAC,EACMR,EAAAM,EAAkB,WAAYE,CAAC,EAC3C,EACT,CAAA,EAmFA,gCArJsC,MAAOG,GAAwD,CACjFV,IACpBH,EAAuBQ,EAAkB,4BAA4B,EAEjE,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,mBAAoB,CAClD,OAAQ,CACN,qBAAsBe,CACxB,CAAA,CACD,EAED,OAAAZ,EAA4BO,EAAkB,4BAA4B,EACnEC,EAAI,KAAK,kBAEXC,EAAY,CACER,EAAAM,EAAkB,6BAA8BE,CAAC,CACtE,CAAA,EAsIA,2BAjFiC,IAC1BvB,EAAiB,MAiFxB,kBA9EwB,MAAO2B,GAAsD,CACjEX,IACpBH,EAAuBQ,EAAkB,iBAAiB,EAEtD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,mBAAmBgB,CAAY,EAAE,EACjE,OAAAb,EAA4BO,EAAkB,iBAAiB,EACxDC,EAAI,KAAK,iBAEXC,EAAQ,CACb,QAAQ,IAAIA,CAAC,EACMR,EAAAM,EAAkB,kBAAmBE,CAAC,CAC3D,CAAA,EAmEA,eAhEqB,MACrBK,EACAC,IACG,CACiBb,IACEE,IACtBL,EAAuBQ,EAAkB,cAAc,EAEnD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,mBAAmBiB,EAAe,EAAE,GAAI,CACtE,eAAAA,EACA,YAAAC,CAAA,CACD,EACqB,OAAArB,EAAAc,EAAI,KAAK,UAAU,EACzCL,EAAqBI,EAAkB,cAAc,EAC9CC,EAAI,KAAK,iBAEXC,EAAQ,CACb,QAAQ,IAAIA,CAAC,EACMR,EAAAM,EAAkB,eAAgBE,CAAC,CACxD,CAAA,EA6CA,oBA1C0B,MAAOO,GAA4B,CACzCd,IACEE,IACtB,MAAMa,EAAS,CAAE,GAAGV,EAAkB,mBAAoB,EAC1DU,EAAO,GAAK,GAAGA,EAAO,EAAE,IAAID,CAAe,GAC3CjB,EAAuBkB,CAAM,EAEzB,GAAA,CACF,MAAMpB,EAAU,OAAO,uBAAuBmB,CAAe,EAAE,EAC/Db,EAAqBc,CAAM,QAEtBR,EAAQ,CACb,OAAAR,EAAmBgB,EAAQR,CAAC,EACrB,EACT,CAAA,EA6BA,iBA1BuB,MAAOK,GAAqE,CAC/EZ,IACEE,IACtBL,EAAuBQ,EAAkB,gBAAgB,EAErD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,KAAK,kBAAmBiB,CAAc,EAClE,OAAAX,EAAqBI,EAAkB,gBAAgB,EAChDC,EAAI,KAAK,iBAEXC,EAAY,CACjB,QAAQ,IAAIA,CAAC,EACMR,EAAAM,EAAkB,iBAAkBE,CAAC,CAC1D,CAAA,CAaA,CAEJ"}