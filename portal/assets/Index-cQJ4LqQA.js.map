{"version":3,"file":"Index-cQJ4LqQA.js","sources":["../../src/pages/experiences/Index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { onUnmounted } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport MainContent from '@/shared/ui/layout/MainContent.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useExperience } from '@/shared/api/useExperience'\nimport VDataFilters from '@/shared/ui/inputs/VDataFilters.vue'\nimport { useUiStore } from '@/shared/lib/composables/ui'\nimport type { IDataFilters } from '@/shared/types/inputs/IDataFilters'\nimport { useExperiencesStore } from '@/shared/api/stores/experience'\nimport { useAuth } from '@/shared/api/useAuth'\nimport { AppPermissions } from '@/shared/types/enums/permissions/permissions'\n\nconst {\n  experienceActions,\n  apiGetExperiences,\n} = useExperience()\nconst { storeClearExperiences } = useExperiencesStore()\nconst { actionIsInProgress } = useUi()\nconst { storeSetFilterState } = useUiStore()\nconst { storeFilterState } = storeToRefs(useUiStore())\n\nconst { storeSetExperiences } = useExperiencesStore()\nconst { storeExperiences } = storeToRefs(useExperiencesStore())\n\nconst { userHasPermissionInDepartment } = useAuth()\n\nconst handleFilterStateUpdate = async (newFilterState: IDataFilters) => {\n  storeSetFilterState(newFilterState)\n\n  if (storeFilterState.value.selectedDepartment === null) {\n    return\n  }\n\n  const experiences = await apiGetExperiences(storeFilterState.value.selectedDepartment)\n\n  if (experiences) {\n    storeSetExperiences(experiences)\n  }\n\n  storeSetExperiences(experiences)\n}\n\nonUnmounted(() => {\n  storeClearExperiences()\n})\n</script>\n\n<template>\n  <MainContent main-content-title=\"Manage Experiences\">\n    <div class=\"mt-6 flex w-full justify-end\">\n      <RouterLink\n        v-if=\"storeFilterState.selectedDepartment && userHasPermissionInDepartment(\n          AppPermissions.MANAGE_EXPERIENCES,\n          storeFilterState.selectedDepartment,\n        )\"\n        :to=\"{ name: $Routes.ExperienceCreate }\"\n        class=\"block w-48 rounded-md bg-blue-600 px-3 py-1.5 text-center text-sm font-semibold leading-6 text-white shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600 hover:bg-blue-500\"\n      >\n        Add Experience\n      </RouterLink>\n    </div>\n\n    <VDataFilters\n      :department-permissions-required=\"[\n        AppPermissions.VIEW_EXPERIENCES,\n      ]\"\n      filter-by-departments\n      :filter-state=\"storeFilterState\"\n      @filter-state-updated=\"handleFilterStateUpdate\"\n    />\n\n    <div class=\"flex flex-col pb-4\">\n      <div class=\"mt-8 flow-root\">\n        <div class=\"overflow-x-auto\">\n          <div class=\"inline-block min-w-full py-2 align-middle\">\n            <div\n              v-if=\"actionIsInProgress(experienceActions.getAllExperiences)\"\n              class=\"flex h-[50px] items-center justify-center rounded border border-gray-100 bg-gray-50 shadow\"\n            >\n              <ProgressSpinner class=\"h-5 w-5 text-blue-600\" />\n            </div>\n\n            <table\n              v-else\n              class=\"min-w-full divide-y divide-gray-300 rounded border border-gray-100 bg-white shadow\"\n              aria-label=\"Experiences\"\n            >\n              <thead>\n                <tr>\n                  <th scope=\"col\" class=\"bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                    Experiences\n                  </th>\n                  <th scope=\"col\" class=\"bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                    BÃ³kun ID\n                  </th>\n                  <th scope=\"col\" colspan=\"2\" class=\"bg-gray-50 px-3 py-3.5\" />\n                </tr>\n              </thead>\n              <tbody class=\"divide-y divide-gray-200\">\n                <template v-if=\"storeExperiences.length === 0\">\n                  <tr>\n                    <td colspan=\"8\" class=\"px-3 py-3.5 text-center text-sm text-gray-500\">\n                      No experiences found.\n                    </td>\n                  </tr>\n                </template>\n\n                <template v-else>\n                  <tr\n                    v-for=\"experience in storeExperiences\"\n                    :key=\"experience.id\"\n                  >\n                    <td class=\"whitespace-nowrap p-3 text-sm text-gray-900\">\n                      {{ experience.title }}\n                    </td>\n                    <td class=\"whitespace-nowrap p-3 text-sm text-gray-900\">\n                      {{ experience.bokunId }}\n                    </td>\n                    <td class=\"relative whitespace-nowrap p-3 text-right text-sm font-medium\">\n                      <RouterLink\n                        v-if=\"storeFilterState.selectedDepartment && userHasPermissionInDepartment(\n                          AppPermissions.MANAGE_EXPERIENCES,\n                          storeFilterState.selectedDepartment,\n                        )\"\n                        :to=\"{\n                          name: $Routes.ExperienceEdit,\n                          params: { experienceId: experience.id },\n                        }\"\n                        class=\"text-blue-600 hover:text-blue-900\"\n                      >\n                        View\n                      </RouterLink>\n                    </td>\n                  </tr>\n                </template>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </MainContent>\n</template>\n"],"names":["experienceActions","apiGetExperiences","useExperience","storeClearExperiences","useExperiencesStore","actionIsInProgress","useUi","storeSetFilterState","useUiStore","storeFilterState","storeToRefs","storeSetExperiences","storeExperiences","userHasPermissionInDepartment","useAuth","handleFilterStateUpdate","newFilterState","experiences","onUnmounted"],"mappings":"q6HAcM,KAAA,CACJ,kBAAAA,EACA,kBAAAC,GACEC,EAAc,EACZ,CAAE,sBAAAC,GAA0BC,IAC5B,CAAE,mBAAAC,GAAuBC,IACzB,CAAE,oBAAAC,GAAwBC,IAC1B,CAAE,iBAAAC,CAAqB,EAAAC,EAAYF,EAAY,CAAA,EAE/C,CAAE,oBAAAG,GAAwBP,IAC1B,CAAE,iBAAAQ,CAAqB,EAAAF,EAAYN,EAAqB,CAAA,EAExD,CAAE,8BAAAS,GAAkCC,IAEpCC,EAA0B,MAAOC,GAAiC,CAGlE,GAFJT,EAAoBS,CAAc,EAE9BP,EAAiB,MAAM,qBAAuB,KAChD,OAGF,MAAMQ,EAAc,MAAMhB,EAAkBQ,EAAiB,MAAM,kBAAkB,EAEjFQ,GACFN,EAAoBM,CAAW,EAGjCN,EAAoBM,CAAW,CAAA,EAGjC,OAAAC,EAAY,IAAM,CACMf,GAAA,CACvB"}