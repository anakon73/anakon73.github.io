{"version":3,"file":"PNumberInput-bPLMBx_c.js","sources":["../../node_modules/.pnpm/@heroicons+vue@2.1.1_vue@3.4.7/node_modules/@heroicons/vue/20/solid/esm/MinusIcon.js","../../src/shared/ui/PNumberInput/PNumberInput.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M4 10a.75.75 0 0 1 .75-.75h10.5a.75.75 0 0 1 0 1.5H4.75A.75.75 0 0 1 4 10Z\",\n      \"clip-rule\": \"evenodd\"\n    })\n  ]))\n}","<script setup lang=\"ts\">\nimport { type HTMLAttributes, toRefs } from 'vue'\nimport { createReusableTemplate } from '@vueuse/core'\nimport { MinusIcon, PlusIcon } from '@heroicons/vue/20/solid'\n\nimport { type ClassValue, cn } from '@/shared/lib/style'\n\nexport interface Props extends /* @vue-ignore */ HTMLAttributes {\n  class?: ClassValue\n  modelValue: number\n  min?: number\n  max?: number\n}\n\nconst props = defineProps<Props>()\n\nconst { modelValue, min, max } = toRefs(props)\n\nexport type Emits = {\n  'update:modelValue': [value: number]\n}\n\nconst emits = defineEmits<Emits>()\n\nfunction updateModelValue(increase = false) {\n  const result = modelValue.value + (increase ? 1 : -1)\n\n  const minPass = min.value === undefined || min.value <= result\n  const maxPass = max.value === undefined || result <= max.value\n\n  if (minPass && maxPass) {\n    emits('update:modelValue', result)\n  }\n}\n\nconst [DefineButton, ReuseButton] = createReusableTemplate<{\n  onClick?: () => void\n}, { default: (props: { class: ClassValue }) => any }>()\n</script>\n\n<template>\n  <div :class=\"cn('grid grid-cols-3', props.class)\">\n    <DefineButton v-slot=\"{ onClick, $slots }\">\n      <button\n        class=\"\n        flex items-center justify-center border p-2.5 text-2xl transition-colors\n        hover:bg-gray-200\n        \"\n        type=\"button\"\n        @click=\"onClick\"\n      >\n        <component :is=\"$slots.default\" v-bind=\"{ class: 'h-4 w-4 fill-gray-500' }\" />\n      </button>\n    </DefineButton>\n\n    <ReuseButton v-slot=\"slotProps\" side=\"left\" @click=\"updateModelValue()\">\n      <MinusIcon v-bind=\"slotProps\" />\n    </ReuseButton>\n\n    <p\n      class=\"flex items-center justify-center border p-1\"\n      v-text=\"modelValue\"\n    />\n\n    <ReuseButton v-slot=\"slotProps\" side=\"right\" @click=\"updateModelValue(true)\">\n      <PlusIcon v-bind=\"slotProps\" />\n    </ReuseButton>\n  </div>\n</template>\n"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","props","__props","modelValue","min","max","toRefs","emits","__emit","updateModelValue","increase","result","minPass","maxPass","DefineButton","ReuseButton","createReusableTemplate"],"mappings":"uOAEe,SAASA,EAAOC,EAAMC,EAAQ,CAC3C,OAAQC,EAAU,EAAIC,EAAoB,MAAO,CAC/C,MAAO,6BACP,QAAS,YACT,KAAM,eACN,cAAe,OACf,YAAa,MACjB,EAAK,CACDC,EAAoB,OAAQ,CAC1B,YAAa,UACb,EAAG,6EACH,YAAa,SACnB,CAAK,CACL,CAAG,CACH,6JCFA,MAAMC,EAAQC,EAER,CAAE,WAAAC,EAAY,IAAAC,EAAK,IAAAC,CAAI,EAAIC,EAAOL,CAAK,EAMvCM,EAAQC,EAEL,SAAAC,EAAiBC,EAAW,GAAO,CAC1C,MAAMC,EAASR,EAAW,OAASO,EAAW,EAAI,IAE5CE,EAAUR,EAAI,QAAU,QAAaA,EAAI,OAASO,EAClDE,EAAUR,EAAI,QAAU,QAAaM,GAAUN,EAAI,MAErDO,GAAWC,GACbN,EAAM,oBAAqBI,CAAM,CAErC,CAEA,KAAM,CAACG,EAAcC,CAAW,EAAIC,EAEmB","x_google_ignoreList":[0]}