{"version":3,"file":"useStaffBases-evfeXodR.js","sources":["../../src/shared/api/stores/staffBase.ts","../../src/shared/api/useStaffBases.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { defineStore } from 'pinia'\nimport type { IStaffBase } from '@/shared/types/staff-bases/IStaffBase'\n\nexport const useStaffBasesStore = defineStore('staffBases', () => {\n  const staffBasesIndex = ref<IStaffBase[]>([])\n\n  function setStaffBaseIndex(i: IStaffBase[]) {\n    staffBasesIndex.value = i\n  }\n\n  function addStaffBaseToIndex(i: IStaffBase) {\n    staffBasesIndex.value.push(i)\n  }\n\n  function updateStaffBasesInIndex(i: IStaffBase) {\n    const index = staffBasesIndex.value.findIndex((staffBase) => staffBase.id === i.id)\n    staffBasesIndex.value[index] = i\n  }\n\n  function resetStaffBasesStore() {\n    staffBasesIndex.value = []\n  }\n\n  return {\n    staffBasesIndex,\n    setStaffBaseIndex,\n    addStaffBaseToIndex,\n    updateStaffBasesInIndex,\n    resetStaffBasesStore,\n  }\n})\n","import { storeToRefs } from 'pinia'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport { useStaffBasesStore } from '@/shared/api/stores/staffBase'\nimport type { ICreateStaffBaseFormData } from '@/shared/types/staff-bases/ICreateStaffBaseFormData'\nimport type { IEditStaffBaseFormData } from '@/shared/types/staff-bases/IEditStaffBaseFormData'\n\nexport function useStaffBases() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    resetActionsInError,\n    processActionSuccess,\n    resetActionsInSuccess,\n  } = useUi()\n  const {\n    setStaffBaseIndex,\n    resetStaffBasesStore,\n    addStaffBaseToIndex,\n    updateStaffBasesInIndex,\n  } = useStaffBasesStore()\n  const {\n    staffBasesIndex,\n  } = storeToRefs(useStaffBasesStore())\n\n  const staffBaseActions = {\n    getAllStaffBases: {\n      id: 'getAllStaffBases',\n      successMessage: 'Staff bases retrieved successfully.',\n      errorMessage: 'Failed to retrieve staff bases.',\n    } as IAction,\n    createStaffBase: {\n      id: 'createStaffBase',\n      successMessage: 'Staff base created successfully.',\n      errorMessage: 'Failed to create staff base.',\n    } as IAction,\n    getStaffBaseById: {\n      id: 'getStaffBaseById',\n      successMessage: 'Staff base retrieved successfully.',\n      errorMessage: 'Failed to retrieve staff base.',\n    } as IAction,\n    editStaffBase: {\n      id: 'editStaffBase',\n      successMessage: 'Staff base edited successfully.',\n      errorMessage: 'Failed to edit staff base.',\n    },\n  }\n\n  const fetchAndStoreStaffBasesIndex = async () => {\n    resetActionsInError()\n    addToActionsInProgress(staffBaseActions.getAllStaffBases)\n\n    try {\n      const rsp = await apiClient.get('/api/staff-bases')\n      setStaffBaseIndex(rsp.data.staff_bases)\n      removeFromActionsInProgress(staffBaseActions.getAllStaffBases)\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(staffBaseActions.getAllStaffBases, e)\n    }\n  }\n\n  const createStaffBase = async (staffBaseData: ICreateStaffBaseFormData) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(staffBaseActions.createStaffBase)\n\n    try {\n      const rsp = await apiClient.post('/api/staff-bases', staffBaseData)\n      addStaffBaseToIndex(rsp.data.staff_base)\n      processActionSuccess(staffBaseActions.createStaffBase)\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(staffBaseActions.createStaffBase, e)\n    }\n  }\n\n  const getStaffBaseById = async (staffBaseId: string) => {\n    resetActionsInError()\n    addToActionsInProgress(staffBaseActions.getStaffBaseById)\n\n    try {\n      const rsp = await apiClient.get(`/api/staff-bases/${staffBaseId}`)\n      removeFromActionsInProgress(staffBaseActions.getStaffBaseById)\n      return rsp.data.staff_base\n    }\n    catch (e: any) {\n      processActionError(staffBaseActions.getStaffBaseById, e)\n    }\n  }\n\n  const editStaffBase = async (staffBaseData: IEditStaffBaseFormData | null) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(staffBaseActions.editStaffBase)\n\n    try {\n      const rsp = await apiClient.put(`/api/staff-bases/${staffBaseData!.id}`, {\n        staffBaseData,\n      })\n      updateStaffBasesInIndex(rsp.data.staff_base)\n      processActionSuccess(staffBaseActions.editStaffBase)\n      return rsp.data.training\n    }\n    catch (e: any) {\n      processActionError(staffBaseActions.editStaffBase, e)\n    }\n  }\n\n  const getAllStaffBasesFromStore = () => {\n    return staffBasesIndex.value\n  }\n\n  return {\n    staffBaseActions,\n    fetchAndStoreStaffBasesIndex,\n    resetStaffBasesStore,\n    getAllStaffBasesFromStore,\n    createStaffBase,\n    getStaffBaseById,\n    editStaffBase,\n  }\n}\n"],"names":["useStaffBasesStore","defineStore","staffBasesIndex","ref","setStaffBaseIndex","i","addStaffBaseToIndex","updateStaffBasesInIndex","index","staffBase","resetStaffBasesStore","useStaffBases","apiClient","useApiClient","addToActionsInProgress","removeFromActionsInProgress","processActionError","resetActionsInError","processActionSuccess","resetActionsInSuccess","useUi","storeToRefs","staffBaseActions","rsp","e","staffBaseData","staffBaseId"],"mappings":"oJAIa,MAAAA,EAAqBC,EAAY,aAAc,IAAM,CAC1D,MAAAC,EAAkBC,EAAkB,CAAA,CAAE,EAE5C,SAASC,EAAkBC,EAAiB,CAC1CH,EAAgB,MAAQG,CAC1B,CAEA,SAASC,EAAoBD,EAAe,CAC1BH,EAAA,MAAM,KAAKG,CAAC,CAC9B,CAEA,SAASE,EAAwBF,EAAe,CACxC,MAAAG,EAAQN,EAAgB,MAAM,UAAWO,GAAcA,EAAU,KAAOJ,EAAE,EAAE,EAClEH,EAAA,MAAMM,CAAK,EAAIH,CACjC,CAEA,SAASK,GAAuB,CAC9BR,EAAgB,MAAQ,EAC1B,CAEO,MAAA,CACL,gBAAAA,EACA,kBAAAE,EACA,oBAAAE,EACA,wBAAAC,EACA,qBAAAG,CAAA,CAEJ,CAAC,ECvBM,SAASC,GAAgB,CACxB,KAAA,CAAE,UAAAC,GAAcC,IAChB,CACJ,uBAAAC,EACA,4BAAAC,EACA,mBAAAC,EACA,oBAAAC,EACA,qBAAAC,EACA,sBAAAC,GACEC,EAAM,EACJ,CACJ,kBAAAhB,EACA,qBAAAM,EACA,oBAAAJ,EACA,wBAAAC,GACEP,EAAmB,EACjB,CACJ,gBAAAE,CAAA,EACEmB,EAAYrB,EAAA,CAAoB,EAE9BsB,EAAmB,CACvB,iBAAkB,CAChB,GAAI,mBACJ,eAAgB,sCAChB,aAAc,iCAChB,EACA,gBAAiB,CACf,GAAI,kBACJ,eAAgB,mCAChB,aAAc,8BAChB,EACA,iBAAkB,CAChB,GAAI,mBACJ,eAAgB,qCAChB,aAAc,gCAChB,EACA,cAAe,CACb,GAAI,gBACJ,eAAgB,kCAChB,aAAc,4BAChB,CAAA,EAsEK,MAAA,CACL,iBAAAA,EACA,6BArEmC,SAAY,CAC3BL,IACpBH,EAAuBQ,EAAiB,gBAAgB,EAEpD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,kBAAkB,EAChCR,EAAAmB,EAAI,KAAK,WAAW,EACtCR,EAA4BO,EAAiB,gBAAgB,QAExDE,EAAQ,CACb,QAAQ,IAAIA,CAAC,EACMR,EAAAM,EAAiB,iBAAkBE,CAAC,CACzD,CAAA,EA0DA,qBAAAd,EACA,0BARgC,IACzBR,EAAgB,MAQvB,gBAzDsB,MAAOuB,GAA4C,CACrDR,IACEE,IACtBL,EAAuBQ,EAAiB,eAAe,EAEnD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,KAAK,mBAAoBa,CAAa,EAC9CnB,EAAAiB,EAAI,KAAK,UAAU,EACvCL,EAAqBI,EAAiB,eAAe,QAEhDE,EAAQ,CACb,QAAQ,IAAIA,CAAC,EACMR,EAAAM,EAAiB,gBAAiBE,CAAC,CACxD,CAAA,EA6CA,iBA1CuB,MAAOE,GAAwB,CAClCT,IACpBH,EAAuBQ,EAAiB,gBAAgB,EAEpD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,oBAAoBc,CAAW,EAAE,EACjE,OAAAX,EAA4BO,EAAiB,gBAAgB,EACtDC,EAAI,KAAK,iBAEXC,EAAQ,CACMR,EAAAM,EAAiB,iBAAkBE,CAAC,CACzD,CAAA,EAgCA,cA7BoB,MAAOC,GAAiD,CACxDR,IACEE,IACtBL,EAAuBQ,EAAiB,aAAa,EAEjD,GAAA,CACF,MAAMC,EAAM,MAAMX,EAAU,IAAI,oBAAoBa,EAAe,EAAE,GAAI,CACvE,cAAAA,CAAA,CACD,EACuB,OAAAlB,EAAAgB,EAAI,KAAK,UAAU,EAC3CL,EAAqBI,EAAiB,aAAa,EAC5CC,EAAI,KAAK,eAEXC,EAAQ,CACMR,EAAAM,EAAiB,cAAeE,CAAC,CACtD,CAAA,CAcA,CAEJ"}