{"version":3,"file":"VTrainingCategorySelect-f8ZTFtAS.js","sources":["../../src/shared/api/training-categories/useTrainingCategories.ts","../../src/shared/ui/inputs/VTrainingCategorySelect.vue"],"sourcesContent":["import { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\n\nexport function useTrainingCategories() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    resetActionsInError,\n  } = useUi()\n\n  const trainingCategoryActions = {\n    getTrainingCategories: {\n      id: 'getTrainingCategories',\n      successMessage: 'Training categories retrieved successfully.',\n      errorMessage: 'There was a problem retrieving the training categories.',\n    } as IAction,\n  }\n\n  const apiGetTrainingCategories = async () => {\n    resetActionsInError()\n    addToActionsInProgress(trainingCategoryActions.getTrainingCategories)\n\n    try {\n      const rsp = await apiClient.get('/api/training-categories')\n      removeFromActionsInProgress(trainingCategoryActions.getTrainingCategories)\n      return rsp.data.trainingCategories\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(trainingCategoryActions.getTrainingCategories, e)\n    }\n  }\n\n  return {\n    apiGetTrainingCategories,\n    trainingCategoryActions,\n  }\n}\n","<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport { useTrainingCategories } from '@/shared/api/training-categories/useTrainingCategories'\nimport type { ITrainingCategory } from '@/shared/types/training-categories/ITrainingCategory'\n\nconst { actionIsInProgress } = useUi()\nconst {\n  trainingCategoryActions,\n  apiGetTrainingCategories,\n} = useTrainingCategories()\n\nconst selectedTrainingCategoryId = defineModel<number>()\n\nconst trainingCategories = ref<ITrainingCategory[]>([])\n\nonMounted(async () => {\n  trainingCategories.value = await apiGetTrainingCategories()\n})\n</script>\n\n<template>\n  <div\n    class=\"relative\"\n    :class=\"{ 'cursor-not-allowed opacity-50': actionIsInProgress(trainingCategoryActions.getTrainingCategories) }\"\n  >\n    <select\n      v-model=\"selectedTrainingCategoryId\"\n      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n    >\n      <option\n        v-for=\"trainingCategory in trainingCategories\"\n        :key=\"trainingCategory.id\"\n        :value=\"trainingCategory.id\"\n      >\n        {{ trainingCategory.name }}\n      </option>\n    </select>\n    <div\n      v-if=\"actionIsInProgress(trainingCategoryActions.getTrainingCategories)\"\n      class=\"absolute inset-0 flex items-center justify-center\"\n    >\n      <ProgressSpinner class=\"h-4 w-4 text-blue-500\" />\n    </div>\n  </div>\n</template>\n"],"names":["useTrainingCategories","apiClient","useApiClient","addToActionsInProgress","removeFromActionsInProgress","processActionError","resetActionsInError","useUi","trainingCategoryActions","rsp","e","actionIsInProgress","apiGetTrainingCategories","selectedTrainingCategoryId","_useModel","trainingCategories","ref","onMounted"],"mappings":"oPAIO,SAASA,GAAwB,CAChC,KAAA,CAAE,UAAAC,GAAcC,IAChB,CACJ,uBAAAC,EACA,4BAAAC,EACA,mBAAAC,EACA,oBAAAC,GACEC,EAAM,EAEJC,EAA0B,CAC9B,sBAAuB,CACrB,GAAI,wBACJ,eAAgB,8CAChB,aAAc,yDAChB,CAAA,EAkBK,MAAA,CACL,yBAhB+B,SAAY,CACvBF,IACpBH,EAAuBK,EAAwB,qBAAqB,EAEhE,GAAA,CACF,MAAMC,EAAM,MAAMR,EAAU,IAAI,0BAA0B,EAC1D,OAAAG,EAA4BI,EAAwB,qBAAqB,EAClEC,EAAI,KAAK,yBAEXC,EAAQ,CACb,QAAQ,IAAIA,CAAC,EACML,EAAAG,EAAwB,sBAAuBE,CAAC,CACrE,CAAA,EAKA,wBAAAF,CAAA,CAEJ,0MCjCM,KAAA,CAAE,mBAAAG,GAAuBJ,IACzB,CACJ,wBAAAC,EACA,yBAAAI,GACEZ,EAAsB,EAEpBa,EAA6BC,gBAAoB,EAEjDC,EAAqBC,EAAyB,CAAA,CAAE,EAEtD,OAAAC,EAAU,SAAY,CACDF,EAAA,MAAQ,MAAMH,GAAyB,CAC3D"}