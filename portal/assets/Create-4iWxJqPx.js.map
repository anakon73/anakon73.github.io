{"version":3,"file":"Create-4iWxJqPx.js","sources":["../../src/pages/assessments/Create.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport { useAssessment } from '@/shared/api/useAssessment'\nimport { AppPermissions } from '@/shared/types/enums/permissions/permissions'\nimport VDataFilters from '@/shared/ui/inputs/VDataFilters.vue'\nimport type { IDataFilters } from '@/shared/types/inputs/IDataFilters'\nimport type { CreateAssessmentDTO } from '@/shared/types/assessments/AssessmentDTOs'\nimport type { IAssessment } from '@/shared/types/assessments/IAssessment'\nimport { useAssessmentStore } from '@/shared/api/stores/assessment'\n\nconst { validateForm, actionIsInProgress, actionIsInError, actionIsInSuccess } = useUi()\nconst { assessmentActions, createAssessment } = useAssessment()\nconst { storeAddAssessment } = useAssessmentStore()\n\nconst createAssessmentFormElement = ref<HTMLFormElement | null>(null)\n\nconst createAssessmentDTO = ref<CreateAssessmentDTO>({\n  name: '',\n  departmentId: 0,\n})\n\nconst filterState = ref<IDataFilters>({\n  selectedDepartment: null,\n  selectedOperationalBase: null,\n  selectedRole: null,\n  selectedMonth: '',\n  selectedDate: '',\n})\n\nconst handleCreateAssessment = async () => {\n  const assessment = await validateForm<IAssessment>(\n    createAssessmentFormElement.value,\n    () => createAssessment(createAssessmentDTO.value),\n  )\n\n  if (assessment) {\n    if (assessment.department.id === filterState.value.selectedDepartment?.id) {\n      storeAddAssessment(assessment)\n    }\n  }\n}\n\nconst handleFilterStateUpdate = async (newFilterState: IDataFilters) => {\n  filterState.value = newFilterState\n  if (newFilterState.selectedDepartment) {\n    createAssessmentDTO.value.departmentId = newFilterState.selectedDepartment.id\n  }\n}\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <div class=\"sticky top-0 z-10 flex w-full items-center justify-end bg-white p-6\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(assessmentActions.createAssessment)\"\n          class=\"h-5 w-5 text-blue-500\"\n        />\n        <RouterLink\n          v-else\n          :to=\"{ name: $Routes.Assessments }\"\n        >\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        id=\"create_assessment_form\"\n        ref=\"createAssessmentFormElement\"\n        class=\"w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"mb-6\">\n          <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n            Create Assessment.\n          </h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Use the form below to create a new assessment. Once an assessment is created, you can add criteria and assign required abilities.\n          </p>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6\">\n          <div>\n            <p class=\"mb-1 block text-sm font-medium text-gray-700\">\n              Department\n            </p>\n            <VDataFilters\n              :department-permissions-required=\"[\n                AppPermissions.MANAGE_ASSESSMENTS,\n              ]\"\n              :filter-state=\"filterState\"\n              @filter-state-updated=\"handleFilterStateUpdate\"\n            />\n          </div>\n\n          <div>\n            <label for=\"assessment_name\" class=\"block text-sm font-medium text-gray-700\">\n              Assessment Name\n            </label>\n            <div class=\"mt-1\">\n              <input\n                id=\"assessment_name\"\n                v-model=\"createAssessmentDTO.name\"\n                type=\"text\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                required\n              >\n            </div>\n          </div>\n        </div>\n\n        <div class=\"relative pt-5\">\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(assessmentActions.createAssessment)\"\n                :action=\"assessmentActions.createAssessment\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(assessmentActions.createAssessment)\"\n                :action=\"assessmentActions.createAssessment\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                @click.prevent=\"handleCreateAssessment\"\n              >\n                <span v-if=\"!actionIsInProgress(assessmentActions.createAssessment)\">\n                  Save Assessment\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n"],"names":["validateForm","actionIsInProgress","actionIsInError","actionIsInSuccess","useUi","assessmentActions","createAssessment","useAssessment","storeAddAssessment","useAssessmentStore","createAssessmentFormElement","ref","createAssessmentDTO","filterState","handleCreateAssessment","assessment","_a","handleFilterStateUpdate","newFilterState"],"mappings":"izHAgBA,KAAM,CAAE,aAAAA,EAAc,mBAAAC,EAAoB,gBAAAC,EAAiB,kBAAAC,CAAA,EAAsBC,IAC3E,CAAE,kBAAAC,EAAmB,iBAAAC,CAAiB,EAAIC,EAAc,EACxD,CAAE,mBAAAC,GAAuBC,IAEzBC,EAA8BC,EAA4B,IAAI,EAE9DC,EAAsBD,EAAyB,CACnD,KAAM,GACN,aAAc,CAAA,CACf,EAEKE,EAAcF,EAAkB,CACpC,mBAAoB,KACpB,wBAAyB,KACzB,aAAc,KACd,cAAe,GACf,aAAc,EAAA,CACf,EAEKG,EAAyB,SAAY,OACzC,MAAMC,EAAa,MAAMf,EACvBU,EAA4B,MAC5B,IAAMJ,EAAiBM,EAAoB,KAAK,CAAA,EAG9CG,GACEA,EAAW,WAAW,OAAOC,EAAAH,EAAY,MAAM,qBAAlB,YAAAG,EAAsC,KACrER,EAAmBO,CAAU,CAEjC,EAGIE,EAA0B,MAAOC,GAAiC,CACtEL,EAAY,MAAQK,EAChBA,EAAe,qBACGN,EAAA,MAAM,aAAeM,EAAe,mBAAmB,GAC7E"}