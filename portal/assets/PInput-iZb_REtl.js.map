{"version":3,"file":"PInput-iZb_REtl.js","sources":["../../src/shared/ui/PInput/PInput.vue"],"sourcesContent":["<script setup lang=\"ts\" generic=\"TInputType extends InputType = 'text'\">\nimport { type InputHTMLAttributes, computed } from 'vue'\nimport { type ClassValue, cn } from '@/shared/lib/style'\nimport type { CustomInputValues, InputTypeHTMLAttribute } from './types'\n\nexport type InputType = InputTypeHTMLAttribute\n\nexport type CustomInputTypeValue = CustomInputValues<{\n  number: number\n  date: Date\n}>\n\nexport type InputTypeValue = CustomInputTypeValue & Record<\n  Exclude<InputTypeHTMLAttribute,\n  keyof CustomInputTypeValue>, string\n>\n\nexport interface Props<TInputType extends InputType> extends /* @vue-ignore */ InputHTMLAttributes {\n  class?: ClassValue\n  type?: TInputType\n  modelValue?: InputTypeValue[TInputType] | null\n}\n\nexport type Emits<TInputType extends InputType> = {\n  'update:modelValue': [value: InputTypeValue[TInputType]]\n}\n\nconst props = defineProps<Props<TInputType>>()\n\nconst type = computed(() => props.type ?? 'text')\nconst modelValue = computed(() => props.modelValue)\n\nconst emits = defineEmits<Emits<TInputType>>()\n\nconst vModel = computed({\n  get() {\n    const value = modelValue.value\n\n    if (value !== undefined) {\n      switch (type.value) {\n        case 'date':\n          return (value as Date).toISOString().slice(0, 10)\n        default:\n          return value\n      }\n    }\n\n    return modelValue.value\n  },\n  set(value) {\n    let result: InputTypeValue[keyof InputTypeValue] | null = value as InputTypeValue[TInputType]\n    console.log(value)\n    if (value !== null && value !== undefined && value !== '') {\n      switch (type.value) {\n        case 'number':\n          result = +value\n          break\n        case 'date':\n          result = new Date(value)\n          break\n      }\n    }\n    else {\n      result = null\n    }\n\n    emits('update:modelValue', result as InputTypeValue[TInputType])\n  },\n})\n</script>\n\n<template>\n  <input\n    v-model=\"vModel\"\n    :type=\"type\"\n    :class=\"cn(\n      `block w-full rounded-md border-gray-300 shadow-sm\n      focus:border-blue-500 focus:ring-blue-500 sm:text-sm`,\n      props.class,\n    )\n    \"\n  >\n</template>\n"],"names":["props","__props","type","computed","modelValue","emits","__emit","vModel","value","result"],"mappings":"sQA2BA,MAAMA,EAAQC,EAERC,EAAOC,EAAS,IAAMH,EAAM,MAAQ,MAAM,EAC1CI,EAAaD,EAAS,IAAMH,EAAM,UAAU,EAE5CK,EAAQC,EAERC,EAASJ,EAAS,CACtB,KAAM,CACJ,MAAMK,EAAQJ,EAAW,MAEzB,GAAII,IAAU,OACZ,OAAQN,EAAK,MAAO,CAClB,IAAK,OACH,OAAQM,EAAe,YAAc,EAAA,MAAM,EAAG,EAAE,EAClD,QACS,OAAAA,CACX,CAGF,OAAOJ,EAAW,KACpB,EACA,IAAII,EAAO,CACT,IAAIC,EAAsDD,EAE1D,GADA,QAAQ,IAAIA,CAAK,EACbA,GAAU,MAA+BA,IAAU,GACrD,OAAQN,EAAK,MAAO,CAClB,IAAK,SACHO,EAAS,CAACD,EACV,MACF,IAAK,OACMC,EAAA,IAAI,KAAKD,CAAK,EACvB,KACJ,MAGSC,EAAA,KAGXJ,EAAM,oBAAqBI,CAAoC,CACjE,CAAA,CACD;"}