import{h as m,H as i}from"./index-C1vJkiWb.js";import{_ as e}from"./DepartureList-w5NrqMJ9.js";import{m as a}from"./schemas-74JEr9Jm.js";import"./vue.esm-bundler-CYPfFjdk.js";import"./index-LmGWO5sK.js";import"./DepartureAssignStaffAndVehicles-8AoBdfT8.js";import"./index-baqd9Qr3.js";import"./query-G1AwWss6.js";import"./index-05uTbNHo.js";import"./api-B2HcjM2j.js";import"./api-cJzoLyfI.js";import"./PButton-h9_xezBg.js";import"./vue-router-E7v71uM3.js";import"./index-VqpYtbVe.js";import"./PInput-iZb_REtl.js";import"./POverlay-3jPNvx4x.js";import"./PSpinner-cF72MsvC.js";import"./IconBus-0QPjtZ9u.js";import"./_plugin-vue_export-helper-x3n3nnut.js";import"./IconPerson-i3ljUCnk.js";import"./SuggestedUser-4kWsZiWj.js";import"./PAvatar-wq6oK0Zr.js";import"./PlusCircleIcon-aSiXn_Mr.js";import"./SuggestedVehicle-r1TyKt-D.js";import"./ScheduledUser-esbe3tjU.js";import"./VehicleTitle-0pOySBND.js";import"./XMarkIcon-_tXc_TyD.js";import"./PPhoneLink-wKLYRG_F.js";import"./index-TCXC35p5.js";import"./PAlert-quHLeqTA.js";import"./CheckCircleIcon-akbq8cGf.js";import"./XMarkIcon-t43a1P5Z.js";import"./PDialogTitle-rfxNVwSR.js";import"./transition-qpXhaAaU.js";import"./keyboard-64MH3N5t.js";import"./open-closed-nhb_Ydho.js";import"./use-root-containers-gEPBKDr2.js";import"./description-LPuBJoU_.js";import"./DepartureListItem-I88AIHqM.js";import"./DepartureUpdateComment-2rt04tFb.js";import"./PTextarea-Wrr33MR5.js";import"./DepartureUpdateCommentPopover-euFlcGix.js";import"./PPopoverPanel-RNuJphX8.js";import"./headlessui-float-sqR0azf2.js";import"./use-resolve-button-type-49aRxFpo.js";import"./DepartureUpdateStatus-zdhd3wV8.js";import"./models-qWR1FMGP.js";import"./PListboxLabel-U39qo3cm.js";import"./listbox-3RN1mHPV.js";import"./form-TGXPuq_M.js";import"./CheckIcon-WRJIoum8.js";import"./lib-Fy6oBlQ3.js";import"./routes-WhYxSpGG.js";const ar={title:"Widgets/DepartureList",component:e,args:{date:new Date,departmentId:1,operationalBaseId:1,showClosedOrCancelled:!0},parameters:{layout:"fullscreen"}},r={name:"DepartureList",parameters:{msw:{handlers:{waivers:m.get(a("/api/waivers"),()=>i.json([]))}}}};var t,o,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  name: 'DepartureList',
  parameters: {
    msw: {
      handlers: {
        waivers: http.get(mockUrl('/api/waivers'), () => HttpResponse.json([]))
      }
    }
  }
}`,...(p=(o=r.parameters)==null?void 0:o.docs)==null?void 0:p.source}}};const sr=["Default"];export{r as Default,sr as __namedExportsOrder,ar as default};
