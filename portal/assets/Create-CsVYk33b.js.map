{"version":3,"file":"Create-CsVYk33b.js","sources":["../../src/pages/deviations/Create.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUser } from '@/shared/api/useUser'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport { useDeviation } from '@/shared/api/useDeviation'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useHelpers } from '@/shared/lib/utils/useHelpers'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport { useUserStore } from '@/shared/api/stores/user'\nimport type { CreateDeviationDTO } from '@/shared/types/deviations/DeviationDTOs'\n\nimport { deviationCategories } from '@/shared/config'\n\nconst { validateForm, actionIsInProgress, actionIsInError, actionIsInSuccess } = useUi()\nconst { getCurrentDateInYmdFormat } = useHelpers()\nconst createDeviationFormElement = ref<HTMLFormElement | null>(null)\nconst { createDeviation, deviationActions } = useDeviation()\nconst { fetchAndStoreUsersIndex, user } = useUser()\nconst { storeUsers } = storeToRefs(useUserStore())\n\nconst formattedDate = `${getCurrentDateInYmdFormat()}T08:00`\nconst maxDateTimeForDeviation = `${getCurrentDateInYmdFormat()}T23:59`\n\nconst createDeviationDTO = ref<CreateDeviationDTO>({\n  dateInput: formattedDate,\n  staffMemberInvolvedId: 0,\n  staffMemberReportingId: 0,\n  staffMemberNotified: false,\n  category: {\n    value: deviationCategories[0].value,\n    label: deviationCategories[0].label,\n  },\n  details: '',\n})\n\nconst primaryUserDepartment = computed(() => {\n  return user.value?.departments.find((department) => department.primary)\n})\n\nconst deviationCategory = computed({\n  get: () => {\n    return createDeviationDTO.value.category\n  },\n  set: (value) => {\n    createDeviationDTO.value.category.label = value.label\n    createDeviationDTO.value.category.value = value.value\n  },\n})\n\nonMounted(async () => {\n  if (primaryUserDepartment.value) {\n    await fetchAndStoreUsersIndex(primaryUserDepartment.value?.id, false)\n  }\n  createDeviationDTO.value.staffMemberInvolvedId = storeUsers.value[0].id\n  createDeviationDTO.value.staffMemberReportingId = user.value!.id\n})\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <div class=\"sticky top-0 z-10 flex w-full items-center justify-end bg-white p-6\">\n        <RouterLink :to=\"{ name: $Routes.Deviations }\">\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        id=\"create_deviation_form\"\n        ref=\"createDeviationFormElement\"\n        class=\"space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"mb-6\">\n          <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n            Log deviation.\n          </h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Use the form below to log a new deviation. <span class=\"text-xs italic\">{{ `(Reporting as ${user?.fullName})` }}</span>\n          </p>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6 sm:grid-cols-6\">\n          <div class=\"sm:col-span-3\">\n            <label for=\"deviation_date_input\" class=\"block text-sm font-medium text-gray-700\">\n              Date and Time\n            </label>\n            <div class=\"mt-1\">\n              <input\n                id=\"deviation_date_input\"\n                v-model=\"createDeviationDTO.dateInput\"\n                type=\"datetime-local\"\n                :max=\"maxDateTimeForDeviation\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n              >\n            </div>\n          </div>\n          <div class=\"sm:col-span-3\">\n            <label for=\"staff_involved_id\" class=\"block text-sm font-medium text-gray-700\">\n              Staff Involved\n            </label>\n            <div class=\"mt-1\">\n              <select\n                id=\"staff_involved_id\"\n                v-model=\"createDeviationDTO.staffMemberInvolvedId\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                required\n              >\n                <option\n                  v-for=\"staff in storeUsers\"\n                  :key=\"staff.id\"\n                  :value=\"staff.id\"\n                >\n                  {{ staff.fullName }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6 sm:grid-cols-6\">\n          <div class=\"sm:col-span-6\">\n            <label for=\"category\" class=\"block text-sm font-medium text-gray-700\">\n              Category\n            </label>\n            <div class=\"mt-1\">\n              <select\n                id=\"category\"\n                v-model=\"deviationCategory\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                required\n              >\n                <option\n                  v-for=\"category in deviationCategories\"\n                  :key=\"category.value\"\n                  :value=\"category\"\n                >\n                  {{ category.label }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6 sm:grid-cols-6\">\n          <div class=\"sm:col-span-6\">\n            <label for=\"incident_description\" class=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n              Details of the incident\n            </label>\n            <div class=\"mt-1 sm:col-span-2\">\n              <textarea\n                id=\"incident_description\"\n                v-model=\"createDeviationDTO.details\"\n                rows=\"3\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                required\n              />\n            </div>\n          </div>\n\n          <div class=\"col-span-6\">\n            <label class=\"mt-2 flex w-full items-center text-sm text-gray-500\">\n              <input\n                id=\"staff_involved_informed\"\n                v-model=\"createDeviationDTO.staffMemberNotified\"\n                type=\"checkbox\"\n                class=\"mr-2 h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                required\n              >\n              Staff involved have been informed and the incident is a breach of a formal procedure.\n            </label>\n          </div>\n        </div>\n\n        <div class=\"relative pt-5\">\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(deviationActions.createDeviation)\"\n                :action=\"deviationActions.createDeviation\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(deviationActions.createDeviation)\"\n                :action=\"deviationActions.createDeviation\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                @click.prevent=\"validateForm(createDeviationFormElement, () => createDeviation(createDeviationDTO))\"\n              >\n                <span v-if=\"!actionIsInProgress(deviationActions.createDeviation)\">\n                  Log Deviation\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n"],"names":["validateForm","actionIsInProgress","actionIsInError","actionIsInSuccess","useUi","getCurrentDateInYmdFormat","useHelpers","createDeviationFormElement","ref","createDeviation","deviationActions","useDeviation","fetchAndStoreUsersIndex","user","useUser","storeUsers","storeToRefs","useUserStore","formattedDate","maxDateTimeForDeviation","createDeviationDTO","deviationCategories","primaryUserDepartment","computed","_a","department","deviationCategory","value","onMounted"],"mappings":"m0IAiBA,KAAM,CAAE,aAAAA,EAAc,mBAAAC,EAAoB,gBAAAC,EAAiB,kBAAAC,CAAA,EAAsBC,IAC3E,CAAE,0BAAAC,GAA8BC,IAChCC,EAA6BC,EAA4B,IAAI,EAC7D,CAAE,gBAAAC,EAAiB,iBAAAC,CAAiB,EAAIC,EAAa,EACrD,CAAE,wBAAAC,EAAyB,KAAAC,CAAK,EAAIC,EAAQ,EAC5C,CAAE,WAAAC,CAAe,EAAAC,EAAYC,EAAc,CAAA,EAE3CC,EAAgB,GAAGb,EAA2B,CAAA,SAC9Cc,EAA0B,GAAGd,EAA2B,CAAA,SAExDe,EAAqBZ,EAAwB,CACjD,UAAWU,EACX,sBAAuB,EACvB,uBAAwB,EACxB,oBAAqB,GACrB,SAAU,CACR,MAAOG,EAAoB,CAAC,EAAE,MAC9B,MAAOA,EAAoB,CAAC,EAAE,KAChC,EACA,QAAS,EAAA,CACV,EAEKC,EAAwBC,EAAS,IAAM,OAC3C,OAAOC,EAAAX,EAAK,QAAL,YAAAW,EAAY,YAAY,KAAMC,GAAeA,EAAW,QAAO,CACvE,EAEKC,EAAoBH,EAAS,CACjC,IAAK,IACIH,EAAmB,MAAM,SAElC,IAAMO,GAAU,CACKP,EAAA,MAAM,SAAS,MAAQO,EAAM,MAC7BP,EAAA,MAAM,SAAS,MAAQO,EAAM,KAClD,CAAA,CACD,EAED,OAAAC,EAAU,SAAY,OAChBN,EAAsB,OACxB,MAAMV,GAAwBY,EAAAF,EAAsB,QAAtB,YAAAE,EAA6B,GAAI,EAAK,EAEtEJ,EAAmB,MAAM,sBAAwBL,EAAW,MAAM,CAAC,EAAE,GAClDK,EAAA,MAAM,uBAAyBP,EAAK,MAAO,EAAA,CAC/D"}