{"version":3,"file":"AssessmentsAndTraining-F1zKasTL.js","sources":["../../src/shared/api/metrics/useAssessmentsAndTrainingMetrics.ts","../../src/pages/metrics/AssessmentsAndTraining.vue"],"sourcesContent":["import { ref } from 'vue'\nimport { useApiClient } from '@/shared/api/useApiClient'\n\nexport function useAssessmentsAndTrainingMetrics() {\n  const { apiClient } = useApiClient()\n\n  /**\n   * Frequency over time\n   */\n  const chartDataAssessmentsAndTrainingFrequencyOverTimeOptions = ref({\n    chart: {\n      type: 'line',\n      height: 350,\n      zoom: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2,\n    },\n    xaxis: {\n      categories: [] as string[],\n      labels: {\n        show: false,\n      },\n    },\n    tooltip: {\n      x: {\n        format: 'dd/MM/yy',\n      },\n    },\n    yaxis: [\n      {\n        seriesName: 'Training Logs',\n        labels: {\n          formatter: (val: number) => {\n            return Math.round(val).toString()\n          },\n        },\n      },\n    ],\n  })\n  const chartDataAssessmentsAndTrainingFrequencyOverTimeSeries = ref([])\n\n  const getAssessmentsAndTrainingOverTimeData = async () => {\n    try {\n      const rsp = await apiClient.get('/api/metrics/assessments-and-training/frequency-over-time')\n      chartDataAssessmentsAndTrainingFrequencyOverTimeOptions.value = {\n        ...chartDataAssessmentsAndTrainingFrequencyOverTimeOptions.value,\n        xaxis: {\n          categories: rsp.data.categories,\n          labels: {\n            show: false,\n          },\n        },\n      }\n      chartDataAssessmentsAndTrainingFrequencyOverTimeSeries.value = rsp.data.series\n    }\n    catch (e: any) {\n      console.log(e)\n    }\n  }\n\n  /**\n   * Assessment pass rate\n   */\n  const chartDataAssessmentPassRateOptions = ref({\n    chart: {\n      type: 'donut',\n    },\n    colors: ['#00E396', '#FF4560'],\n    labels: [] as string[],\n    legend: {\n      position: 'bottom',\n    },\n  })\n  const chartDataAssessmentPassRateSeries = ref([])\n\n  const getAssessmentPassRateData = async () => {\n    try {\n      const rsp = await apiClient.get('/api/metrics/assessments-and-training/assessment-pass-rate')\n      chartDataAssessmentPassRateOptions.value = {\n        ...chartDataAssessmentPassRateOptions.value,\n        labels: rsp.data.categories,\n      }\n      chartDataAssessmentPassRateSeries.value = rsp.data.series\n    }\n    catch (e: any) {\n      console.log(e)\n    }\n  }\n\n  /**\n   * Assessments with highest failure rate.\n   */\n  const chartDataAssessmentsWithHighestFailureRateOptions = ref({\n    chart: {\n      type: 'bar',\n    },\n    colors: ['#FF4560'],\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        horizontal: true,\n      },\n    },\n    xaxis: {\n      categories: [] as string[],\n    },\n    yaxis: {\n      labels: {\n        align: 'left',\n      },\n    },\n  })\n  const chartDataAssessmentsWithHighestFailureRateSeries = ref([])\n\n  const getAssessmentsWithHighestFailureRateData = async () => {\n    try {\n      const rsp = await apiClient.get('/api/metrics/assessments-and-training/assessments-with-highest-failure-rate')\n      chartDataAssessmentsWithHighestFailureRateOptions.value = {\n        ...chartDataAssessmentsWithHighestFailureRateOptions.value,\n        xaxis: {\n          categories: rsp.data.categories,\n        },\n      }\n      chartDataAssessmentsWithHighestFailureRateSeries.value = rsp.data.series\n    }\n    catch (e: any) {\n      console.log(e)\n    }\n  }\n\n  const totalAssessmentLogCount = ref(0)\n  const totalTrainingLogCount = ref(0)\n\n  const getTotalLogCounts = async () => {\n    try {\n      const rsp = await apiClient.get('/api/metrics/assessments-and-training/total-log-counts')\n      totalAssessmentLogCount.value = rsp.data.total_assessment_logs\n      totalTrainingLogCount.value = rsp.data.total_training_logs\n    }\n    catch (e: any) {\n      console.log(e)\n    }\n  }\n\n  return {\n    chartDataAssessmentsAndTrainingFrequencyOverTimeOptions,\n    chartDataAssessmentsAndTrainingFrequencyOverTimeSeries,\n    getAssessmentsAndTrainingOverTimeData,\n    chartDataAssessmentPassRateOptions,\n    chartDataAssessmentPassRateSeries,\n    getAssessmentPassRateData,\n    chartDataAssessmentsWithHighestFailureRateOptions,\n    chartDataAssessmentsWithHighestFailureRateSeries,\n    getAssessmentsWithHighestFailureRateData,\n    totalAssessmentLogCount,\n    totalTrainingLogCount,\n    getTotalLogCounts,\n  }\n}\n","<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport MainContent from '@/shared/ui/layout/MainContent.vue'\nimport { useAssessmentsAndTrainingMetrics } from '@/shared/api/metrics/useAssessmentsAndTrainingMetrics'\n\nconst {\n  chartDataAssessmentsAndTrainingFrequencyOverTimeOptions,\n  chartDataAssessmentsAndTrainingFrequencyOverTimeSeries,\n  getAssessmentsAndTrainingOverTimeData,\n  chartDataAssessmentPassRateOptions,\n  chartDataAssessmentPassRateSeries,\n  getAssessmentPassRateData,\n  chartDataAssessmentsWithHighestFailureRateOptions,\n  chartDataAssessmentsWithHighestFailureRateSeries,\n  getAssessmentsWithHighestFailureRateData,\n  totalAssessmentLogCount,\n  totalTrainingLogCount,\n  getTotalLogCounts,\n} = useAssessmentsAndTrainingMetrics()\n\nonMounted(async () => {\n  await Promise.all([\n    getAssessmentsAndTrainingOverTimeData(),\n    getAssessmentPassRateData(),\n    getAssessmentsWithHighestFailureRateData(),\n    getTotalLogCounts(),\n  ])\n})\n</script>\n\n<template>\n  <MainContent main-content-title=\"Assessments & Training Metrics\">\n    <div>\n      <p class=\"my-6 text-sm text-gray-500\">\n        The following charts are based on the data from the logged assessments and training.\n      </p>\n\n      <div class=\"mb-6\">\n        <dl class=\"mt-5 grid grid-cols-1 divide-y divide-gray-200 overflow-hidden rounded-lg bg-white shadow md:grid-cols-2 md:divide-x md:divide-y-0\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <dt class=\"text-base font-normal text-gray-900\">\n              Total Assessments Logs\n            </dt>\n            <dd class=\"mt-1 flex items-baseline justify-between md:block lg:flex\">\n              <div class=\"flex items-baseline text-2xl font-semibold text-blue-600\">\n                {{ totalAssessmentLogCount }}\n              </div>\n            </dd>\n          </div>\n          <div class=\"px-4 py-5 sm:p-6\">\n            <dt class=\"text-base font-normal text-gray-900\">\n              Total Training Logs\n            </dt>\n            <dd class=\"mt-1 flex items-baseline justify-between md:block lg:flex\">\n              <div class=\"flex items-baseline text-2xl font-semibold text-blue-600\">\n                {{ totalTrainingLogCount }}\n              </div>\n            </dd>\n          </div>\n        </dl>\n      </div>\n\n      <div class=\"grid grid-cols-1 gap-3 xl:grid-cols-3\">\n        <div class=\"flex flex-col rounded-2xl border bg-white shadow\">\n          <div class=\"xl:p-3\">\n            <apexchart\n              width=\"100%\"\n              :type=\"chartDataAssessmentsAndTrainingFrequencyOverTimeOptions.chart.type\"\n              :options=\"chartDataAssessmentsAndTrainingFrequencyOverTimeOptions\"\n              :series=\"chartDataAssessmentsAndTrainingFrequencyOverTimeSeries\"\n            />\n          </div>\n          <p class=\"mt-auto border-t bg-gray-50 p-3 text-xs italic text-neutral-500\">\n            Assessment and training logs over time.\n          </p>\n        </div>\n\n        <div class=\"flex flex-col rounded-2xl border bg-white shadow\">\n          <div class=\"flex flex-1 items-center justify-center xl:p-3\">\n            <apexchart\n              width=\"100%\"\n              :type=\"chartDataAssessmentsWithHighestFailureRateOptions.chart.type\"\n              :options=\"chartDataAssessmentsWithHighestFailureRateOptions\"\n              :series=\"chartDataAssessmentsWithHighestFailureRateSeries\"\n            />\n          </div>\n          <p class=\"mt-auto border-t bg-gray-50 p-3 text-xs italic text-neutral-500\">\n            Assessments with highest rate of failure.\n          </p>\n        </div>\n\n        <div class=\"flex flex-col rounded-2xl border bg-white shadow\">\n          <div class=\"flex flex-1 items-center justify-center p-3\">\n            <apexchart\n              width=\"100%\"\n              :type=\"chartDataAssessmentPassRateOptions.chart.type\"\n              :options=\"chartDataAssessmentPassRateOptions\"\n              :series=\"chartDataAssessmentPassRateSeries\"\n            />\n          </div>\n          <p class=\"mt-auto border-t bg-gray-50 p-3 text-xs italic text-neutral-500\">\n            Overall assessment pass rate.\n          </p>\n        </div>\n      </div>\n    </div>\n  </MainContent>\n</template>\n\n<style scoped>\n.vue-apexcharts {\n  width: 100%;\n}\n</style>\n"],"names":["useAssessmentsAndTrainingMetrics","apiClient","useApiClient","chartDataAssessmentsAndTrainingFrequencyOverTimeOptions","ref","val","chartDataAssessmentsAndTrainingFrequencyOverTimeSeries","getAssessmentsAndTrainingOverTimeData","rsp","e","chartDataAssessmentPassRateOptions","chartDataAssessmentPassRateSeries","getAssessmentPassRateData","chartDataAssessmentsWithHighestFailureRateOptions","chartDataAssessmentsWithHighestFailureRateSeries","getAssessmentsWithHighestFailureRateData","totalAssessmentLogCount","totalTrainingLogCount","getTotalLogCounts","onMounted"],"mappings":"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"}