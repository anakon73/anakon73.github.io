{"version":3,"file":"useMap-r2WMKGtK.js","sources":["../../src/shared/lib/composables/useMap.ts"],"sourcesContent":["import L from 'leaflet'\n\nexport function useMap() {\n  const createMap = (\n    latitude: number,\n    longitude: number,\n    zoom: number = 11,\n  ) => {\n    return L.map('map', {\n      center: [\n        latitude,\n        longitude,\n      ],\n      zoom,\n    })\n  }\n\n  const addLayersToMap = (map: L.Map) => {\n    L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}').addTo(map)\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      opacity: 0.2,\n    }).addTo(map)\n  }\n\n  const createOperationalBaseMarker = (latitude: number, longitude: number, draggable: boolean = true) => {\n    return L.marker(\n      [latitude, longitude],\n      {\n        draggable,\n      },\n    )\n  }\n\n  const createExperienceLocationMarker = (latitude: number, longitude: number, draggable: boolean = true) => {\n    const icon = L.divIcon({\n      html: `\n      <div class=\"w-[40px] h-[40px] flex items-center justify-center rounded-t-full rounded-l-full border border-blue-900 bg-gradient-to-r from-blue-900 to-blue-200 rotate-45\">\n        <div class=\"rounded-full h-[30px] w-[30px] bg-gradient-to-r from-blue-100 to-white shadow flex justify-center items-center\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            class=\"w-[25px] h-[25px] fill-blue-900 -rotate-45\"\n          >\n            <path d=\"M7,17L10.2,10.2L17,7L13.8,13.8L7,17M12,11.1A0.9,0.9 0 0,0 11.1,12A0.9,0.9 0 0,0 12,12.9A0.9,0.9 0 0,0 12.9,12A0.9,0.9 0 0,0 12,11.1M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4Z\" />\n          </svg>\n        </div>\n      </div>\n      `,\n      // removes the default white box/shadow\n      className: '',\n      iconSize: [42, 42],\n      iconAnchor: [21, 50],\n    })\n\n    return L.marker(\n      [latitude, longitude],\n      { icon, draggable },\n    )\n  }\n\n  const panMapToCoordinates = (map: L.Map, latitude: number, longitude: number) => {\n    map.panTo(new L.LatLng(\n      latitude,\n      longitude,\n    ))\n  }\n\n  const resetMapView = (\n    map: L.Map,\n    latitude: number,\n    longitude: number,\n    zoom: number = 14,\n  ) => {\n    map.setView(new L.LatLng(\n      latitude,\n      longitude,\n    ), zoom)\n  }\n\n  const tidyUpMap = (map: L.Map) => {\n    if (map) {\n      map.off()\n      map.remove()\n    }\n  }\n\n  return {\n    createMap,\n    addLayersToMap,\n    createOperationalBaseMarker,\n    createExperienceLocationMarker,\n    panMapToCoordinates,\n    resetMapView,\n    tidyUpMap,\n  }\n}\n"],"names":["useMap","latitude","longitude","zoom","L","map","draggable","icon"],"mappings":"8CAEO,SAASA,GAAS,CAoFhB,MAAA,CACL,UApFgB,CAChBC,EACAC,EACAC,EAAe,KAERC,EAAE,IAAI,MAAO,CAClB,OAAQ,CACNH,EACAC,CACF,EACA,KAAAC,CAAA,CACD,EA0ED,eAvEsBE,GAAe,CACrCD,EAAE,UAAU,+FAA+F,EAAE,MAAMC,CAAG,EACtHD,EAAE,UAAU,iDAAkD,CAC5D,QAAS,EAAA,CACV,EAAE,MAAMC,CAAG,CAAA,EAoEZ,4BAjEkC,CAACJ,EAAkBC,EAAmBI,EAAqB,KACtFF,EAAE,OACP,CAACH,EAAUC,CAAS,EACpB,CACE,UAAAI,CACF,CAAA,EA6DF,+BAzDqC,CAACL,EAAkBC,EAAmBI,EAAqB,KAAS,CACnG,MAAAC,EAAOH,EAAE,QAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcN,UAAW,GACX,SAAU,CAAC,GAAI,EAAE,EACjB,WAAY,CAAC,GAAI,EAAE,CAAA,CACpB,EAED,OAAOA,EAAE,OACP,CAACH,EAAUC,CAAS,EACpB,CAAE,KAAAK,EAAM,UAAAD,CAAU,CAAA,CACpB,EAkCA,oBA/B0B,CAACD,EAAYJ,EAAkBC,IAAsB,CAC3EG,EAAA,MAAM,IAAID,EAAE,OACdH,EACAC,CAAA,CACD,CAAA,EA4BD,aAzBmB,CACnBG,EACAJ,EACAC,EACAC,EAAe,KACZ,CACCE,EAAA,QAAQ,IAAID,EAAE,OAChBH,EACAC,GACCC,CAAI,CAAA,EAiBP,UAdiBE,GAAe,CAC5BA,IACFA,EAAI,IAAI,EACRA,EAAI,OAAO,EACb,CAUA,CAEJ"}