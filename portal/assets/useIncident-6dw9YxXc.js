import{d as f,s as A}from"./schemas-74JEr9Jm.js";import{u as h,a as m}from"./preview-D0Pi-YKn.js";import{j as x}from"./vue.esm-bundler-CYPfFjdk.js";const l=f("incident",()=>{const t=x([]);function i(c){t.value=c}function o(c){t.value.push(c)}function d(c){const a=t.value.findIndex(I=>I.id===c.id);t.value[a]=c}function r(){t.value=[]}return{setIncidentsIndex:i,incidentsIndex:t,addIncidentToIndex:o,updateIncidentInIndex:d,resetIncidentStore:r}});function $(){const{apiClient:t}=h(),{addToActionsInProgress:i,removeFromActionsInProgress:o,processActionError:d,resetActionsInError:r,resetActionsInSuccess:c,processActionSuccess:a}=m(),{setIncidentsIndex:I,resetIncidentStore:u,addIncidentToIndex:g,updateIncidentInIndex:p}=l(),{incidentsIndex:y}=A(l()),n={createIncident:{id:"createIncident",successMessage:"Incident created successfully.",errorMessage:"There was a problem creating the incident."},getAllIncidents:{id:"getAllIncidents",successMessage:"Incidents retrieved successfully.",errorMessage:"There was a problem retrieving the incidents."},getIncidentById:{id:"getIncidentById",successMessage:"Incident retrieved successfully.",errorMessage:"There was a problem retrieving the incident."},editIncident:{id:"editIncident",successMessage:"Incident updated successfully.",errorMessage:"There was a problem updating the incident."}};return{createIncident:async s=>{r(),c(),i(n.createIncident);try{const e=await t.post("/api/incident",s);g(e.data.incidents),a(n.createIncident)}catch(e){console.log(e),d(n.createIncident,e)}},fetchAndStoreIncidentsIndex:async s=>{r(),i(n.getAllIncidents);try{const e=await t.get(`/api/incidents?page=${s}`);return I(e.data.incidents),o(n.getAllIncidents),e.data}catch(e){console.log(e),d(n.getAllIncidents,e)}},getAllIncidentsFromStore:()=>y.value,incidentActions:n,resetIncidentStore:u,getIncidentById:async s=>{r(),i(n.getIncidentById);try{const e=await t.get(`/api/incident/${s}`);return o(n.getIncidentById),e.data.incident}catch(e){console.log(e),d(n.getIncidentById,e)}},editIncident:async s=>{r(),c(),i(n.editIncident);try{const e=await t.put(`/api/incident/${s.id}`,s);p(e.data.incidents),a(n.editIncident)}catch(e){console.log(e),d(n.editIncident,e)}}}}export{$ as u};
