{"version":3,"file":"useDeviation-ZZmaucR8.js","sources":["../../src/shared/api/useDeviation.ts"],"sourcesContent":["import { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport { useAlerts } from '@/shared/api/useAlerts'\nimport type { CreateDeviationDTO, EditDeviationDTO } from '@/shared/types/deviations/DeviationDTOs'\nimport type { IDeviation } from '@/shared/types/deviations/IDeviation'\n\nexport function useDeviation() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    resetActionsInError,\n    processActionSuccess,\n    resetActionsInSuccess,\n  } = useUi()\n\n  const { fetchAndStoreAlertsIndex } = useAlerts()\n\n  const deviationActions = {\n    getDeviationByDepartmentId: {\n      id: 'getDeviationByDepartmentId',\n      successMessage: 'Deviation retrieved successfully.',\n      errorMessage: 'There was a problem retrieving deviation.',\n    } as IAction,\n    getAllDeviationByUserAbility: {\n      id: 'getAllDeviationByUserAbility',\n      successMessage: 'Deviation retrieved successfully.',\n      errorMessage: 'There was a problem retrieving deviation.',\n    } as IAction,\n    getAllDeviationLogsByUserId: {\n      id: 'getAllDeviationLogsByUserId',\n      successMessage: 'Deviation logs retrieved successfully.',\n      errorMessage: 'There was a problem retrieving the deviation logs.',\n    } as IAction,\n    trainUser: {\n      id: 'trainUser',\n      successMessage: 'User successfully trained.',\n      errorMessage: 'There was a problem deviation the user.',\n    } as IAction,\n    deleteDeviationLog: {\n      id: 'deleteDeviationLog',\n      successMessage: 'Deviation log successfully deleted.',\n      errorMessage: 'There was a problem deleting the deviation log.',\n    } as IAction,\n    getDeviationById: {\n      id: 'getDeviationById',\n      successMessage: 'Deviation successfully retrieved.',\n      errorMessage: 'There was a problem retrieving the deviation.',\n    } as IAction,\n    editDeviation: {\n      id: 'editDeviation',\n      successMessage: 'Deviation successfully updated.',\n      errorMessage: 'There was a problem updating the deviation.',\n    } as IAction,\n    createDeviation: {\n      id: 'createDeviation',\n      successMessage: 'Deviation successfully created.',\n      errorMessage: 'There was a problem creating the deviation.',\n    },\n  }\n\n  const apiGetDeviationsByDepartmentId = async (departmentId: number): Promise<IDeviation[] | void> => {\n    resetActionsInError()\n    addToActionsInProgress(deviationActions.getDeviationByDepartmentId)\n\n    try {\n      const rsp = await apiClient.get('/api/deviations', {\n        params: {\n          selectedDepartmentId: departmentId,\n        },\n      }) as { data: { deviations: IDeviation[] } }\n\n      removeFromActionsInProgress(deviationActions.getDeviationByDepartmentId)\n      return rsp.data.deviations\n    }\n    catch (e: unknown) {\n      processActionError(deviationActions.getDeviationByDepartmentId, e)\n    }\n  }\n\n  /**\n   * This function is used to retrieve all deviation that a user can train.\n   */\n  const getAllDeviationByUserAbility = async (): Promise<IDeviation[] | void> => {\n    resetActionsInError()\n    addToActionsInProgress(deviationActions.getAllDeviationByUserAbility)\n\n    try {\n      const rsp = await apiClient.get('/api/deviation-by-user-ability')\n\n      removeFromActionsInProgress(deviationActions.getAllDeviationByUserAbility)\n      return rsp.data.deviation\n    }\n    catch (e: unknown) {\n      processActionError(deviationActions.getAllDeviationByUserAbility, e)\n    }\n  }\n\n  const deleteDeviationLog = async (deviationLogId: number) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    const action = { ...deviationActions.deleteDeviationLog }\n    action.id = `${action.id}-${deviationLogId}`\n    addToActionsInProgress(action)\n\n    try {\n      await apiClient.delete(`/api/deviation-log/${deviationLogId}`)\n      await fetchAndStoreAlertsIndex()\n      processActionSuccess(action)\n    }\n    catch (e: unknown) {\n      processActionError(action, e)\n      return false\n    }\n  }\n\n  const getDeviationById = async (deviationId: string): Promise<IDeviation | void> => {\n    resetActionsInError()\n    addToActionsInProgress(deviationActions.getDeviationById)\n\n    try {\n      const rsp = await apiClient.get(`/api/deviation/${deviationId}`)\n      removeFromActionsInProgress(deviationActions.getDeviationById)\n      return rsp.data.deviation\n    }\n    catch (e: unknown) {\n      processActionError(deviationActions.getDeviationById, e)\n    }\n  }\n\n  const editDeviation = async (deviation: EditDeviationDTO): Promise<IDeviation | void> => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(deviationActions.editDeviation)\n\n    try {\n      const rsp = await apiClient.put(`/api/deviation/${deviation.id}`, {\n        department_id: deviation.department.id,\n        deviation_category_id: deviation.category.id,\n        name: deviation.name,\n        requires_feedback: deviation.requiresFeedback,\n        mandatory: deviation.mandatory,\n        required_abilities: deviation.requiredAbilities,\n      })\n      processActionSuccess(deviationActions.editDeviation)\n      return rsp.data.deviation\n    }\n    catch (e: unknown) {\n      processActionError(deviationActions.editDeviation, e)\n    }\n  }\n\n  const createDeviation = async (deviationData: CreateDeviationDTO): Promise<IDeviation | void> => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(deviationActions.createDeviation)\n\n    try {\n      const rsp = await apiClient.post('/api/deviation', deviationData)\n      processActionSuccess(deviationActions.createDeviation)\n      return rsp.data.deviation\n    }\n    catch (e: unknown) {\n      console.log(e)\n      processActionError(deviationActions.createDeviation, e)\n    }\n  }\n\n  return {\n    deviationActions,\n    apiGetDeviationsByDepartmentId,\n    getAllDeviationByUserAbility,\n    deleteDeviationLog,\n    getDeviationById,\n    editDeviation,\n    createDeviation,\n  }\n}\n"],"names":["useDeviation","apiClient","useApiClient","addToActionsInProgress","removeFromActionsInProgress","processActionError","resetActionsInError","processActionSuccess","resetActionsInSuccess","useUi","fetchAndStoreAlertsIndex","useAlerts","deviationActions","departmentId","rsp","e","deviationLogId","action","deviationId","deviation","deviationData"],"mappings":"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"}