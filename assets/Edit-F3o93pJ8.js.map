{"version":3,"file":"Edit-F3o93pJ8.js","sources":["../../src/shared/ui/icons/IconEyeOpen.vue","../../src/shared/ui/icons/IconAdd.vue","../../src/pages/staff/Edit.vue"],"sourcesContent":["<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z\" />\n  </svg>\n</template>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M17,13H13V17H11V13H7V11H11V7H13V11H17M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n  </svg>\n</template>\n","<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs, watch } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport { useUser } from '@/shared/api/useUser'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ImageUpload from '@/shared/ui/forms/ImageUpload.vue'\nimport VDepartmentMultiSelect from '@/shared/ui/inputs/VDepartmentMultiSelect.vue'\nimport VRoleMultiSelect from '@/shared/ui/inputs/VRoleMultiSelect.vue'\nimport VTextInput from '@/shared/ui/inputs/VTextInput.vue'\nimport VAbilityMultiSelect from '@/shared/ui/inputs/VAbilityMultiSelect.vue'\nimport VPermissionMultiSelect from '@/shared/ui/inputs/VPermissionMultiSelect.vue'\nimport type { EditUserDTO, UpdateUserPasswordDTO } from '@/shared/types/user/UserDTOs'\nimport { useUserStore } from '@/shared/api/stores/user'\nimport IconEyeOpen from '@/shared/ui/icons/IconEyeOpen.vue'\nimport FeedbackWarning from '@/shared/ui/FeedbackWarning.vue'\nimport IconAdd from '@/shared/ui/icons/IconAdd.vue'\nimport { useUiStore } from '@/shared/lib/composables/ui'\nimport VDepartmentSelect from '@/shared/ui/inputs/VDepartmentSelect.vue'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\n\nconst props = defineProps<{ userId: number }>()\nconst { userId } = toRefs(props)\n\nconst {\n  validateForm,\n  actionIsInProgress,\n  actionIsInError,\n  actionIsInSuccess,\n} = useUi()\nconst {\n  getUserById,\n  editUser,\n  changeUserPassword,\n  updateEmploymentHistory,\n  addEmploymentHistory,\n  userActions,\n} = useUser()\nconst { storeUpdateUser } = useUserStore()\nconst { storeFilterState } = storeToRefs(useUiStore())\nconst { storeUsers } = storeToRefs(useUserStore())\nconst {\n  storeRemoveUser,\n  storeAddUser,\n} = useUserStore()\n\nconst changeUserPasswordFormElement = ref<HTMLFormElement | null>(null)\nconst updateEmploymentHistoryFormElement = ref<HTMLFormElement | null>(null)\n\nconst editUserDTO = ref<EditUserDTO>({\n  id: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  contactNumber: '',\n  kennitala: '',\n  bankAccountNumber: '',\n  nextOfKinName: '',\n  nextOfKinContactNumber: '',\n  profilePhotoSrc: '',\n  profilePhotoDbPath: '',\n  departments: [],\n  operationalBases: [],\n  roles: [],\n  abilities: [],\n  permissions: [],\n  employmentLogs: [],\n  currentlyEmployed: true,\n})\n\nconst changeUserPasswordDTO = ref<UpdateUserPasswordDTO>({\n  password: '',\n  passwordConfirmation: '',\n})\n\nconst showPasswords = ref(false)\n\nconst employmentLogsAreDirty = ref(false)\n\nconst handleFileUpload = (paths: { src: string; db_path: string }) => {\n  editUserDTO.value.profilePhotoSrc = paths.src\n  editUserDTO.value.profilePhotoDbPath = paths.db_path\n}\n\nconst handleClearingSelectedPermissions = () => {\n  /**\n   * We only want to clear permissions that have a department id\n   * which is no longer selected.\n   */\n  const selectedDepartmentIds = editUserDTO.value.departments.map((d) => d.id)\n  editUserDTO.value.permissions = editUserDTO.value.permissions.filter((p) =>\n    selectedDepartmentIds.includes(p.department.id),\n  )\n}\n\nconst handleEditUser = async () => {\n  try {\n    const user = await editUser(editUserDTO.value)\n\n    if (user) {\n      storeUpdateUser(user)\n\n      if (!user.departments.some((d) => d.id === storeFilterState.value.selectedDepartment?.id)) {\n        storeRemoveUser(user)\n      }\n\n      if (user.departments.some((d) => d.id === storeFilterState.value.selectedDepartment?.id)) {\n        if (!storeUsers.value.find((u) => u.id === user.id)) {\n          storeAddUser(user)\n        }\n      }\n    }\n  }\n  catch (error) {\n    console.log(error)\n  }\n}\n\nconst handleUpdateEmploymentHistory = async () => {\n  const user = await updateEmploymentHistory(\n    editUserDTO.value.employmentLogs,\n    editUserDTO.value.id,\n  )\n\n  if (user) {\n    employmentLogsAreDirty.value = false\n    editUserDTO.value.employmentLogs = user.employmentLogs\n    editUserDTO.value.currentlyEmployed = user.currentlyEmployed\n  }\n}\n\nconst handleAddNewEmploymentLog = async () => {\n  const user = await addEmploymentHistory(editUserDTO.value.id)\n\n  if (user) {\n    editUserDTO.value.employmentLogs = user.employmentLogs\n    editUserDTO.value.currentlyEmployed = user.currentlyEmployed\n  }\n}\n\nconst handleUpdatePrimaryDepartment = (department: IDepartment) => {\n  editUserDTO.value.departments.forEach((d) => {\n    d.primary = d.id === department.id\n  })\n}\n\nconst initialLoad = ref(true)\n\nconst handleUpdateRoles = () => {\n  if (initialLoad.value) return\n  editUserDTO.value.roles = editUserDTO.value.roles.filter((r) =>\n    editUserDTO.value.departments.some((d) => d.id === r.department.id),\n  )\n}\n\nconst handleUpdateAbilities = () => {\n  if (initialLoad.value) return\n  editUserDTO.value.abilities = editUserDTO.value.abilities.filter((a) =>\n    editUserDTO.value.departments.some((d) => d.id === a.department?.id),\n  )\n}\n\nonMounted(async () => {\n  try {\n    editUserDTO.value = await getUserById(userId.value.toString())\n    initialLoad.value = false\n  }\n  catch (error) {\n    console.log(error)\n  }\n})\n\nwatch(userId, async () => {\n  try {\n    editUserDTO.value = await getUserById(userId.value.toString())\n  }\n  catch (error) {\n    console.log(error)\n  }\n})\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <div class=\"sticky top-0 z-10 flex w-full items-center justify-end bg-white p-6\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(userActions.getUserById)\"\n          class=\"h-5 w-5 text-blue-500\"\n        />\n        <RouterLink\n          v-else\n          :to=\"{ name: $Routes.Staff }\"\n        >\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        v-if=\"!initialLoad && !actionIsInProgress(userActions.getUserById)\"\n        class=\"w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"space-y-8 divide-y divide-gray-200\">\n          <div>\n            <div>\n              <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n                Edit {{ editUserDTO.firstName }}'s account.\n              </h3>\n              <p class=\"mt-1 text-sm text-gray-500\">\n                Use the form below to update the account for the staff member.\n              </p>\n            </div>\n\n            <div class=\"mt-6 grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-6\">\n              <div class=\"sm:col-span-6\">\n                <ImageUpload\n                  label=\"Profile Photo\"\n                  image-storage-directory=\"profile_photos\"\n                  :default-image-src=\"editUserDTO.profilePhotoSrc\"\n                  @file-uploaded=\"handleFileUpload\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"pt-8\">\n            <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n              Personal Information\n            </h3>\n            <div class=\"mt-6 grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-6\">\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.firstName\"\n                  label=\"First Name\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.lastName\"\n                  label=\"Last Name\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.email\"\n                  label=\"Email\"\n                  type=\"email\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.contactNumber\"\n                  label=\"Contact Number\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.kennitala\"\n                  label=\"Kennitala\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.bankAccountNumber\"\n                  label=\"Bank Account #\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.nextOfKinName\"\n                  label=\"Next of Kin: Name\"\n                />\n              </div>\n              <div class=\"sm:col-span-3\">\n                <VTextInput\n                  v-model=\"editUserDTO.nextOfKinContactNumber\"\n                  label=\"Next of Kin: Contact Number\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"pt-8\">\n            <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n              Departments, Roles & Abilities\n            </h3>\n            <div class=\"mt-6 space-y-6\">\n              <VDepartmentMultiSelect\n                v-model:selected-departments=\"editUserDTO.departments\"\n                v-model:selected-operational-bases=\"editUserDTO.operationalBases\"\n              />\n              <VDepartmentSelect\n                v-if=\"editUserDTO.departments.length\"\n                label=\"Primary Department\"\n                :department-options=\"editUserDTO.departments\"\n                :initial-selected-department=\"editUserDTO.departments.find((d) => d.primary)\"\n                @update-primary-department=\"handleUpdatePrimaryDepartment\"\n              />\n              <template\n                v-for=\"department in editUserDTO.departments\"\n                :key=\"department.id\"\n              >\n                <h3 v-if=\"editUserDTO.departments.length > 1\">\n                  {{ department.name }}\n                </h3>\n                <VRoleMultiSelect\n                  v-model:selected-roles=\"editUserDTO.roles\"\n                  :department-filters=\"{ dto: editUserDTO.departments, department }\"\n                  @update-selected-roles=\"handleUpdateRoles\"\n                />\n                <VAbilityMultiSelect\n                  v-model:selected-abilities=\"editUserDTO.abilities\"\n                  :department-filters=\"{ dto: editUserDTO.departments, department }\"\n                  @update-selected-abilities=\"handleUpdateAbilities\"\n                />\n              </template>\n              <VPermissionMultiSelect\n                v-model:selected-permissions=\"editUserDTO.permissions\"\n                :department-filters=\"editUserDTO.departments\"\n                @clear-selected-permissions=\"handleClearingSelectedPermissions\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"relative pt-5\">\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(userActions.editUser)\"\n                :action=\"userActions.editUser\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(userActions.editUser)\"\n                :action=\"userActions.editUser\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                @click.prevent=\"handleEditUser\"\n              >\n                <span v-if=\"!actionIsInProgress(userActions.editUser)\">\n                  Save\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <form\n        v-if=\"!initialLoad && !actionIsInProgress(userActions.getUserById)\"\n        id=\"update_employment_history_form\"\n        ref=\"updateEmploymentHistoryFormElement\"\n        class=\"mt-6 w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div>\n          <h3 class=\"mb-6 text-base font-semibold leading-6 text-gray-900\">\n            Employment History\n          </h3>\n          <FeedbackWarning\n            v-if=\"!editUserDTO.currentlyEmployed\"\n            message=\"This staff member is not currently employed. Add a new start date to their employment history, or extend their most recent end date to make them active again.\"\n            class=\"mb-4\"\n          />\n          <div class=\"w-full overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-300\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" colspan=\"2\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                    <div class=\"flex items-center\">\n                      <span>\n                        Start Date\n                      </span>\n                      <button\n                        v-if=\"!editUserDTO.currentlyEmployed\"\n                        @click.prevent=\"handleAddNewEmploymentLog()\"\n                      >\n                        <IconAdd\n                          v-if=\"!actionIsInProgress(userActions.addEmploymentHistory)\"\n                          class=\"ml-1 h-4 w-4 fill-green-600\"\n                        />\n                        <ProgressSpinner\n                          v-else\n                          class=\"ml-1 h-3 w-3 text-green-600\"\n                        />\n                      </button>\n                    </div>\n                  </th>\n                  <th\n                    v-if=\"editUserDTO.employmentLogs.length > 0\"\n                    scope=\"col\"\n                    class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                  >\n                    End Date\n                  </th>\n                </tr>\n              </thead>\n              <tbody class=\"divide-y divide-gray-200\">\n                <tr\n                  v-for=\"(employmentLog, index) in editUserDTO.employmentLogs\"\n                  :key=\"employmentLog.id\"\n                  :class=\"index > 0 ? 'bg-gray-50' : ''\"\n                >\n                  <td class=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                    <span class=\"inline-flex items-center rounded-full bg-blue-50 px-2 py-1 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-700/10\">\n                      {{ index + 1 }}\n                    </span>\n                  </td>\n                  <td class=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                    <input\n                      v-model=\"editUserDTO.employmentLogs[index].startDate\"\n                      type=\"date\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                      required\n                      @change=\"employmentLogsAreDirty = true\"\n                    >\n                  </td>\n                  <td class=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                    <input\n                      v-model=\"editUserDTO.employmentLogs[index].endDate\"\n                      type=\"date\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                      required\n                      :min=\"editUserDTO.employmentLogs[index].startDate\"\n                      @change=\"employmentLogsAreDirty = true\"\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div class=\"relative pt-5\">\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(userActions.updateEmploymentHistory)\"\n                :action=\"userActions.updateEmploymentHistory\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(userActions.updateEmploymentHistory)\"\n                :action=\"userActions.updateEmploymentHistory\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 w-36 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 hover:bg-blue-700\"\n                :disabled=\"actionIsInProgress(userActions.updateEmploymentHistory)\"\n                @click.prevent=\"validateForm(updateEmploymentHistoryFormElement, () => handleUpdateEmploymentHistory())\"\n              >\n                <span v-if=\"!actionIsInProgress(userActions.updateEmploymentHistory)\">\n                  Update History\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <form\n        v-if=\"!initialLoad && !actionIsInProgress(userActions.getUserById)\"\n        id=\"change_user_password_form\"\n        ref=\"changeUserPasswordFormElement\"\n        class=\"mt-6 w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"space-y-8 divide-y divide-gray-200\">\n          <div>\n            <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n              Change password.\n            </h3>\n            <p class=\"mt-1 text-sm text-gray-500\">\n              Use the form below to change the password of this user. Passwords must include:\n            </p>\n            <ul class=\"mt-6 list-inside list-disc space-y-0\">\n              <li class=\"mt-1 text-sm text-gray-500\">\n                At least 8 characters\n              </li>\n              <li class=\"mt-1 text-sm text-gray-500\">\n                At least 1 uppercase letter\n              </li>\n              <li class=\"mt-1 text-sm text-gray-500\">\n                At least 1 number\n              </li>\n            </ul>\n\n            <div class=\"pt-3\">\n              <div class=\"mt-6 grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-6\">\n                <div class=\"sm:col-span-3\">\n                  <label for=\"first-name\" class=\"block text-sm font-medium text-gray-700\">\n                    New Password\n                  </label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-model=\"changeUserPasswordDTO.password\"\n                      :type=\"showPasswords ? 'text' : 'password'\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                      pattern=\"(?=.*\\d)(?=.*[A-Z]).{8,}\"\n                      required\n                    >\n                  </div>\n                </div>\n\n                <div class=\"sm:col-span-3\">\n                  <label\n                    for=\"last-name\"\n                    class=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Confirm Password\n                  </label>\n                  <div class=\"relative isolate\">\n                    <input\n                      v-model=\"changeUserPasswordDTO.passwordConfirmation\"\n                      :type=\"showPasswords ? 'text' : 'password'\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                      pattern=\"(?=.*\\d)(?=.*[A-Z]).{8,}\"\n                      required\n                    >\n                    <button\n                      class=\"absolute right-0 top-0 mr-2 mt-2\"\n                      :title=\"showPasswords ? 'Hide Passwords' : 'Show Passwords'\"\n                      @click.prevent=\"showPasswords = !showPasswords\"\n                    >\n                      <IconEyeOpen\n                        class=\"h-5 w-5\"\n                        :class=\"[\n                          { 'fill-gray-700': !showPasswords },\n                          { 'fill-blue-500': showPasswords },\n                        ]\"\n                      />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"relative pt-5\">\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(userActions.changeUserPassword)\"\n                :action=\"userActions.changeUserPassword\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(userActions.changeUserPassword)\"\n                :action=\"userActions.changeUserPassword\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 w-36 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 hover:bg-blue-700\"\n                :disabled=\"\n                  actionIsInProgress(userActions.changeUserPassword)\n                    || changeUserPasswordDTO.password !== changeUserPasswordDTO.passwordConfirmation\n                    || changeUserPasswordDTO.password.length < 8\n                \"\n                @click.prevent=\"validateForm(\n                  changeUserPasswordFormElement,\n                  () => changeUserPassword(\n                    changeUserPasswordDTO,\n                    editUserDTO.id,\n                  ),\n                )\"\n              >\n                <span v-if=\"!actionIsInProgress(userActions.changeUserPassword)\">\n                  Update Password\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n"],"names":["_hoisted_1","_hoisted_3","_cache","props","__props","userId","toRefs","validateForm","actionIsInProgress","actionIsInError","actionIsInSuccess","useUi","getUserById","editUser","changeUserPassword","updateEmploymentHistory","addEmploymentHistory","userActions","useUser","storeUpdateUser","useUserStore","storeFilterState","storeToRefs","useUiStore","storeUsers","storeRemoveUser","storeAddUser","changeUserPasswordFormElement","ref","updateEmploymentHistoryFormElement","editUserDTO","changeUserPasswordDTO","showPasswords","employmentLogsAreDirty","handleFileUpload","paths","handleClearingSelectedPermissions","selectedDepartmentIds","d","p","handleEditUser","user","_a","u","error","handleUpdateEmploymentHistory","handleAddNewEmploymentLog","handleUpdatePrimaryDepartment","department","initialLoad","handleUpdateRoles","r","handleUpdateAbilities","a","onMounted","watch"],"mappings":"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"}