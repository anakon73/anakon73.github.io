{"version":3,"file":"Index-lPuRJJAG.js","sources":["../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/formatRelative/index.js","../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isAfter/index.js","../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isBefore/index.js","../../src/pages/dashboard/widgets/UpcomingShiftsWidget.vue","../../src/pages/dashboard/Index.vue"],"sourcesContent":["import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport format from \"../format/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(addDays(new Date(), -6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport default function formatRelative(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$weekStartsOn, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var weekStartsOn = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.weekStartsOn) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : 0);\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n  var diff = differenceInCalendarDays(date, baseDate);\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n  var token;\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n  return format(date, formatStr, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs } from 'vue'\nimport { format, formatRelative, isAfter, isBefore, isSameDay } from 'date-fns'\n\nimport { useUser } from '@/shared/api/useUser'\nimport { useVehicles } from '@/shared/api/vehicle'\n\nimport type { UserUpcomingShiftsDTO } from '@/shared/types/user/UserDTOs'\nimport type { ScheduledDeparture } from '@/shared/types'\n\nconst { getUpcomingShifts, user } = useUser()\n\ninterface Props {\n  title: string\n  operationalBaseId: number | null\n}\n\nconst props = defineProps<Props>()\nconst { operationalBaseId } = toRefs(props)\n\nconst shifts = ref<UserUpcomingShiftsDTO[]>([])\nconst { data: vehicles } = useVehicles()\n\nconst formatRelativeDay = (date: Date) => {\n  // TODO: Replace with formatDate\n  const formattedDate = formatRelative(new Date(date), new Date())\n  return formattedDate.split('at')[0].charAt(0).toUpperCase() + formattedDate.split('at')[0].slice(1)\n}\n\nonMounted(async () => {\n  try {\n    shifts.value = (await getUpcomingShifts(user.value!.id.toString(), operationalBaseId.value))\n      ?.map((shift) => {\n        const { end, start } = shift.scheduledDeparture\n\n        const startDate = new Date(start)\n        const endDate = new Date(end)\n        const startDateFormatted = `${formatRelativeDay(startDate)} ${format(startDate, 'HH:mm')}`\n        const endDateFormatted = format(endDate, isSameDay(startDate, endDate) ? 'HH:mm' : 'EEEE HH:mm')\n\n        const displayDate = `${startDateFormatted} - ${endDateFormatted}`\n\n        return {\n          ...shift,\n          vehicle: vehicles.value?.find((v) => v.id === shift.vehicleId),\n          isOngoing: isAfter(new Date(), startDate) && isBefore(new Date(), endDate),\n          displayDate,\n          // TODO: Fix this with new API\n          scheduledDeparture: shift.scheduledDeparture as unknown as ScheduledDeparture,\n        }\n      }) ?? []\n  }\n  catch (error) {\n    console.log(error)\n  }\n})\n</script>\n\n<template>\n  <div v-if=\"shifts.length\" class=\"divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black/5 transition-all @container\">\n    <div class=\"flex h-[500px] transform-gpu flex-col divide-x divide-gray-100 @md:flex-row\">\n      <div class=\"min-h-[180px] min-w-0 flex-auto overflow-y-auto overflow-x-hidden border-b scrollbar-thin scrollbar-track-gray-100 scrollbar-thumb-blue-500/20 @md:border-0\">\n        <h2 class=\"sticky top-0 z-10 border-b bg-white px-6 py-4 text-xs font-semibold text-gray-500\">\n          My Shifts - {{ title }}\n        </h2>\n        <div\n          v-for=\"(shift, index) in shifts\"\n          :key=\"shift.id\"\n          class=\"w-full cursor-pointer px-5 py-2 text-sm hover:bg-gray-100\"\n          :class=\"[\n            index + 1 !== shifts.length && 'border-b',\n            shift.isOngoing && 'bg-blue-100',\n          ]\"\n        >\n          <RouterLink\n            v-slot=\"{ navigate }\"\n            :to=\"{\n              name: $Routes.DepartureShow,\n              params: { departureId: shift.scheduledDeparture.id },\n            }\"\n            custom\n          >\n            <div class=\"flex flex-col gap-2 \" @click=\"navigate\">\n              <p>\n                {{ shift.displayDate }}\n              </p>\n\n              <p class=\"text-gray-500\">\n                {{ shift.scheduledDeparture.tour.code }} {{ shift.scheduledDeparture.tour.name }}\n              </p>\n              <div class=\"flex items-center gap-2\">\n                <div\n                  class=\"min-w-7 rounded-xl bg-gray-900 px-1.5 py-0.5 text-center\"\n                >\n                  <p class=\"text-[0.6rem] leading-5 text-white\">\n                    {{ shift.vehicle?.title }}\n                  </p>\n                </div>\n                <p class=\"text-gray-500\" v-text=\"shift.vehicle?.registrationNumber\" />\n              </div>\n\n              <p class=\"text-blue-400\" v-text=\"shift.scheduledDeparture.comment\" />\n            </div>\n          </RouterLink>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport { useDepartmentSelectStore } from '@/features/department-select'\n\nimport { useOperationalBasesByDepartmentIds } from '@/shared/api/operational-base'\nimport { useUser } from '@/shared/api/useUser'\n\nimport UpcomingShiftsWidget from './widgets/UpcomingShiftsWidget.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport MainContent from '@/shared/ui/layout/MainContent.vue'\n\nconst { selectedDepartmentId, selectedOperationalBaseId } = storeToRefs(\n  useDepartmentSelectStore(),\n)\n\n// TODO: refactor with new api\nconst { user } = useUser()\n\nconst { data: operationalBases } = useOperationalBasesByDepartmentIds({\n  // @ts-expect-error id is number in old api\n  departmentIds: computed(() => selectedDepartmentId.value\n    ? [selectedDepartmentId.value]\n    : user.value?.departments.map((d) => d.id)),\n})\n\nconst opBases = computed(() => {\n  if (selectedOperationalBaseId.value) {\n    const selectedOpBase = operationalBases.value?.find(\n      (opBase) => opBase.id === selectedOperationalBaseId.value,\n    )\n    return selectedOpBase ? [selectedOpBase] : []\n  }\n  else {\n    return operationalBases.value ?? []\n  }\n})\n</script>\n\n<template>\n  <MainContent main-content-title=\"Dashboard\">\n    <div class=\"@container\">\n      <div class=\"grid grid-cols-1 gap-6 @[900px]:grid-cols-3\">\n        <Suspense v-for=\"{ id, name, department } in opBases\" :key=\"id\">\n          <UpcomingShiftsWidget\n            :operational-base-id=\"id\"\n            :title=\"opBases.length <= 1 ? department?.name : name\"\n          />\n          <template #fallback>\n            <div\n              class=\"\n              flex h-[30rem] w-full items-center justify-center\n              rounded-xl bg-white shadow-2xl ring-1 ring-black/5\n              \"\n            >\n              <ProgressSpinner class=\"size-8 text-blue-400\" />\n            </div>\n          </template>\n        </Suspense>\n      </div>\n    </div>\n  </MainContent>\n</template>\n"],"names":["formatRelative","dirtyDate","dirtyBaseDate","options","_ref","_options$locale","_ref2","_ref3","_ref4","_options$weekStartsOn","_options$locale2","_options$locale2$opti","_defaultOptions$local","_defaultOptions$local2","requiredArgs","date","toDate","baseDate","defaultOptions","getDefaultOptions","locale","defaultLocale","weekStartsOn","toInteger","diff","differenceInCalendarDays","token","utcDate","subMilliseconds","getTimezoneOffsetInMilliseconds","utcBaseDate","formatStr","format","isAfter","dirtyDateToCompare","dateToCompare","isBefore","getUpcomingShifts","user","useUser","props","__props","operationalBaseId","toRefs","shifts","ref","vehicles","useVehicles","formatRelativeDay","formattedDate","onMounted","_a","shift","end","start","startDate","endDate","startDateFormatted","endDateFormatted","isSameDay","displayDate","v","error","selectedDepartmentId","selectedOperationalBaseId","storeToRefs","useDepartmentSelectStore","operationalBases","useOperationalBasesByDepartmentIds","computed","d","opBases","selectedOpBase","opBase"],"mappings":"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","x_google_ignoreList":[0,1,2]}