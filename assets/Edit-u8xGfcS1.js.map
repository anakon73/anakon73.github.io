{"version":3,"file":"Edit-u8xGfcS1.js","sources":["../../src/shared/types/organisations/IOrganisation.ts","../../src/pages/vehicles/Edit.vue"],"sourcesContent":["export interface IOrganisation {\n  id: string\n  name: string\n  created_at: string\n  updated_at: string\n}\n\nexport enum OrganisationSortableFields {\n  NAME = 'name',\n}\n","<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs, watch } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport { useVehicle } from '@/shared/api/useVehicle'\nimport type { EditVehicleDTO, GetVehicleDTO } from '@/shared/types/vehicles/vehicleDTOs'\nimport { useOrganisation } from '@/shared/api/useOrganisation'\nimport { OrderBy } from '@/shared/types/requests/ApiGetRequestDTO'\nimport { type IOrganisation, OrganisationSortableFields } from '@/shared/types/organisations/IOrganisation'\nimport type { GetOrganisationsDTO } from '@/shared/types/organisations/organisationDTOs'\nimport VDepartmentMultiSelect from '@/shared/ui/inputs/VDepartmentMultiSelect.vue'\nimport { useUiStore } from '@/shared/lib/composables/ui'\nimport { useVehicleStore } from '@/shared/api/stores/vehicle'\n\nconst props = defineProps<{ vehicleId: number }>()\nconst { vehicleId } = toRefs(props)\n\nconst { validateForm, actionIsInProgress, actionIsInSuccess, actionIsInError } = useUi()\n\nconst {\n  vehicleActions,\n  storeUpdateVehicleInIndex,\n  apiGetVehicle,\n  apiUpdateVehicle,\n} = useVehicle()\nconst {\n  organisationActions,\n  apiGetOrganisations,\n} = useOrganisation()\nconst { storeFilterState } = storeToRefs(useUiStore())\nconst {\n  storeRemoveVehicleFromIndex,\n  storeAddVehicleToIndex,\n} = useVehicleStore()\nconst { storeVehicles } = storeToRefs(useVehicleStore())\n\nconst editVehicleFormElement = ref<HTMLFormElement | null>(null)\nconst organisations = ref<IOrganisation[]>([])\n\nconst getVehicleDTO = ref<GetVehicleDTO>({\n  // TODO\n  // eslint-disable-next-line vue/no-ref-object-destructure\n  id: vehicleId.value,\n})\n\nconst editVehicleDTO = ref<EditVehicleDTO>({\n  id: 0,\n  organisationId: 1,\n  departments: [],\n  name: '',\n  registrationNumber: '',\n  maxCapacity: 12,\n  comfortCapacity: 12,\n  inUseFrom: null,\n  inUseUntil: null,\n})\n\nconst handleEditVehicle = async () => {\n  if (editVehicleDTO.value) {\n    const rsp = await apiUpdateVehicle(editVehicleDTO.value)\n\n    if (rsp) {\n      const vehicle = rsp.data.vehicle\n\n      storeUpdateVehicleInIndex(vehicle)\n\n      if (!vehicle.departments.some((d) => d.id === storeFilterState.value.selectedDepartment?.id)) {\n        storeRemoveVehicleFromIndex(vehicle)\n      }\n\n      if (vehicle.departments.some((d) => d.id === storeFilterState.value.selectedDepartment?.id)) {\n        if (!storeVehicles.value.find((v) => v.id === vehicle.id)) {\n          storeAddVehicleToIndex(vehicle)\n        }\n      }\n    }\n  }\n}\n\nconst refreshEditVehicleDTO = async () => {\n  const rsp = await apiGetVehicle(getVehicleDTO.value)\n  editVehicleDTO.value = {\n    id: rsp.data.vehicle.id,\n    organisationId: rsp.data.vehicle.organisationId,\n    departments: rsp.data.vehicle.departments,\n    name: rsp.data.vehicle.name,\n    registrationNumber: rsp.data.vehicle.registrationNumber,\n    maxCapacity: rsp.data.vehicle.maxCapacity,\n    comfortCapacity: rsp.data.vehicle.comfortCapacity,\n    inUseFrom: rsp.data.vehicle.inUseFrom,\n    inUseUntil: rsp.data.vehicle.inUseUntil,\n  }\n}\n\nonMounted(async () => {\n  const getOrganisationsDTO: GetOrganisationsDTO = {\n    sortBy: OrganisationSortableFields.NAME,\n    orderBy: OrderBy.DESC,\n  }\n  await refreshEditVehicleDTO()\n  const rsp = await apiGetOrganisations(getOrganisationsDTO)\n  organisations.value = rsp.data.organisations\n})\n\nwatch(\n  vehicleId,\n  async (newId) => {\n    if (newId) {\n      getVehicleDTO.value.id = Number.parseInt(newId.toString())\n      await refreshEditVehicleDTO()\n    }\n  },\n)\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <div class=\"sticky top-0 z-10 flex w-full items-center justify-end bg-white p-6\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(vehicleActions.getVehicleById) || actionIsInProgress(organisationActions.getAllOrganisations)\"\n          class=\"h-5 w-5 text-blue-500\"\n        />\n        <RouterLink\n          v-else\n          :to=\"{ name: $Routes.Vehicles }\"\n        >\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        id=\"edit_vehicle_form\"\n        ref=\"editVehicleFormElement\"\n        class=\"w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"space-y-8 divide-y divide-gray-200\">\n          <div>\n            <div>\n              <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n                Edit Vehicle\n              </h3>\n              <p class=\"mt-1 text-sm text-gray-500\">\n                Use the form below to update the details for the vehicle.\n              </p>\n            </div>\n          </div>\n\n          <div class=\"pt-8\">\n            <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n              Vehicle Details\n            </h3>\n            <div class=\"mt-6 grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-6\">\n              <div class=\"sm:col-span-6\">\n                <VDepartmentMultiSelect v-model:selected-departments=\"editVehicleDTO.departments\" />\n              </div>\n\n              <div class=\"sm:col-span-3\">\n                <label for=\"registration_number\" class=\"block text-sm font-medium text-gray-700\">\n                  Registration Number\n                </label>\n                <input\n                  id=\"registration_number\"\n                  v-model=\"editVehicleDTO.registrationNumber\"\n                  type=\"text\"\n                  name=\"registration_number\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n\n              <div class=\"sm:col-span-3\">\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n                  Name\n                </label>\n                <input\n                  id=\"name\"\n                  v-model=\"editVehicleDTO.name\"\n                  type=\"text\"\n                  name=\"name\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n\n              <div class=\"sm:col-span-3\">\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n                  Max capacity\n                </label>\n                <input\n                  id=\"max_capacity\"\n                  v-model=\"editVehicleDTO.maxCapacity\"\n                  type=\"number\"\n                  name=\"max_capacity\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n\n              <div class=\"sm:col-span-3\">\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n                  Comfort capacity\n                </label>\n                <input\n                  id=\"comfort_capacity\"\n                  v-model=\"editVehicleDTO.comfortCapacity\"\n                  :max=\"editVehicleDTO.maxCapacity\"\n                  type=\"number\"\n                  name=\"comfort_capacity\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n\n              <div class=\"sm:col-span-3\">\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n                  In use from\n                </label>\n                <input\n                  id=\"in_use_from\"\n                  v-model=\"editVehicleDTO.inUseFrom\"\n                  type=\"date\"\n                  name=\"in_use_from\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                >\n              </div>\n\n              <div class=\"sm:col-span-3\">\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n                  In use until\n                </label>\n                <input\n                  id=\"in_use_until\"\n                  v-model=\"editVehicleDTO.inUseUntil\"\n                  type=\"date\"\n                  name=\"in_use_until\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"relative pt-5\">\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(vehicleActions.editVehicle)\"\n                :action=\"vehicleActions.editVehicle\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(vehicleActions.editVehicle)\"\n                :action=\"vehicleActions.editVehicle\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 w-32 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                @click.prevent=\"validateForm(editVehicleFormElement, () => handleEditVehicle())\"\n              >\n                <span v-if=\"!actionIsInProgress(vehicleActions.editVehicle)\">\n                  Save Changes\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n\n<style scoped>\n.alert-enter-active,\n.alert-leave-active {\n  transition: all 0.5s cubic-bezier(0, 1.3, 1, 1.05);\n}\n\n.alert-enter-from {\n  opacity: 0;\n  transform: translateX(-300px);\n}\n.alert-leave-to {\n  opacity: 0;\n}\n</style>\n"],"names":["OrganisationSortableFields","props","__props","vehicleId","toRefs","validateForm","actionIsInProgress","actionIsInSuccess","actionIsInError","useUi","vehicleActions","storeUpdateVehicleInIndex","apiGetVehicle","apiUpdateVehicle","useVehicle","organisationActions","apiGetOrganisations","useOrganisation","storeFilterState","storeToRefs","useUiStore","storeRemoveVehicleFromIndex","storeAddVehicleToIndex","useVehicleStore","storeVehicles","editVehicleFormElement","ref","organisations","getVehicleDTO","editVehicleDTO","handleEditVehicle","rsp","vehicle","d","_a","v","refreshEditVehicleDTO","onMounted","getOrganisationsDTO","OrderBy","watch","newId"],"mappings":"6kGAOY,IAAAA,GAAAA,IACVA,EAAA,KAAO,OADGA,IAAAA,GAAA,CAAA,CAAA,soDCYZ,MAAMC,EAAQC,EACR,CAAE,UAAAC,CAAA,EAAcC,EAAOH,CAAK,EAE5B,CAAE,aAAAI,EAAc,mBAAAC,EAAoB,kBAAAC,EAAmB,gBAAAC,CAAA,EAAoBC,KAE3E,CACJ,eAAAC,EACA,0BAAAC,EACA,cAAAC,EACA,iBAAAC,GACEC,GAAW,EACT,CACJ,oBAAAC,EACA,oBAAAC,GACEC,GAAgB,EACd,CAAE,iBAAAC,CAAqB,EAAAC,EAAYC,GAAY,CAAA,EAC/C,CACJ,4BAAAC,EACA,uBAAAC,GACEC,EAAgB,EACd,CAAE,cAAAC,CAAkB,EAAAL,EAAYI,EAAiB,CAAA,EAEjDE,EAAyBC,EAA4B,IAAI,EACzDC,EAAgBD,EAAqB,CAAA,CAAE,EAEvCE,EAAgBF,EAAmB,CAGvC,GAAIvB,EAAU,KAAA,CACf,EAEK0B,EAAiBH,EAAoB,CACzC,GAAI,EACJ,eAAgB,EAChB,YAAa,CAAC,EACd,KAAM,GACN,mBAAoB,GACpB,YAAa,GACb,gBAAiB,GACjB,UAAW,KACX,WAAY,IAAA,CACb,EAEKI,EAAoB,SAAY,CACpC,GAAID,EAAe,MAAO,CACxB,MAAME,EAAM,MAAMlB,EAAiBgB,EAAe,KAAK,EAEvD,GAAIE,EAAK,CACD,MAAAC,EAAUD,EAAI,KAAK,QAEzBpB,EAA0BqB,CAAO,EAE5BA,EAAQ,YAAY,KAAMC,GAAA,OAAM,OAAAA,EAAE,OAAOC,EAAAhB,EAAiB,MAAM,qBAAvB,YAAAgB,EAA2C,IAAE,GACzFb,EAA4BW,CAAO,EAGjCA,EAAQ,YAAY,KAAMC,GAAM,OAAA,OAAAA,EAAE,OAAOC,EAAAhB,EAAiB,MAAM,qBAAvB,YAAAgB,EAA2C,IAAE,IACnFV,EAAc,MAAM,KAAMW,GAAMA,EAAE,KAAOH,EAAQ,EAAE,GACtDV,EAAuBU,CAAO,EAGpC,CACF,CAAA,EAGII,EAAwB,SAAY,CACxC,MAAML,EAAM,MAAMnB,EAAcgB,EAAc,KAAK,EACnDC,EAAe,MAAQ,CACrB,GAAIE,EAAI,KAAK,QAAQ,GACrB,eAAgBA,EAAI,KAAK,QAAQ,eACjC,YAAaA,EAAI,KAAK,QAAQ,YAC9B,KAAMA,EAAI,KAAK,QAAQ,KACvB,mBAAoBA,EAAI,KAAK,QAAQ,mBACrC,YAAaA,EAAI,KAAK,QAAQ,YAC9B,gBAAiBA,EAAI,KAAK,QAAQ,gBAClC,UAAWA,EAAI,KAAK,QAAQ,UAC5B,WAAYA,EAAI,KAAK,QAAQ,UAAA,CAC/B,EAGF,OAAAM,EAAU,SAAY,CACpB,MAAMC,EAA2C,CAC/C,OAAQtC,EAA2B,KACnC,QAASuC,GAAQ,IAAA,EAEnB,MAAMH,EAAsB,EACtB,MAAAL,EAAM,MAAMf,EAAoBsB,CAAmB,EAC3CX,EAAA,MAAQI,EAAI,KAAK,aAAA,CAChC,EAEDS,EACErC,EACA,MAAOsC,GAAU,CACXA,IACFb,EAAc,MAAM,GAAK,OAAO,SAASa,EAAM,UAAU,EACzD,MAAML,EAAsB,EAEhC,CAAA"}