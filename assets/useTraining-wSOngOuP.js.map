{"version":3,"file":"useTraining-wSOngOuP.js","sources":["../../src/shared/api/useTraining.ts"],"sourcesContent":["import { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport { useAlerts } from '@/shared/api/useAlerts'\nimport type { CreateTrainingDTO, EditTrainingDTO } from '@/shared/types/training/TrainingDTOs'\nimport type { ITraining } from '@/shared/types/training/ITraining'\nimport type { ITrainingLogs } from '@/shared/types/training-logs/ITrainingLog'\nimport type { TrainUserDTO } from '@/shared/types/training-logs/TrainingLogDTOs'\n\nexport function useTraining() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    resetActionsInError,\n    processActionSuccess,\n    resetActionsInSuccess,\n  } = useUi()\n\n  const { fetchAndStoreAlertsIndex } = useAlerts()\n\n  const trainingActions = {\n    getTrainingByDepartmentId: {\n      id: 'getTrainingByDepartmentId',\n      successMessage: 'Training retrieved successfully.',\n      errorMessage: 'There was a problem retrieving training.',\n    } as IAction,\n    getAllTrainingByUserAbility: {\n      id: 'getAllTrainingByUserAbility',\n      successMessage: 'Training retrieved successfully.',\n      errorMessage: 'There was a problem retrieving training.',\n    } as IAction,\n    getAllTrainingLogsByUserId: {\n      id: 'getAllTrainingLogsByUserId',\n      successMessage: 'Training logs retrieved successfully.',\n      errorMessage: 'There was a problem retrieving the training logs.',\n    } as IAction,\n    trainUser: {\n      id: 'trainUser',\n      successMessage: 'User successfully trained.',\n      errorMessage: 'There was a problem training the user.',\n    } as IAction,\n    deleteTrainingLog: {\n      id: 'deleteTrainingLog',\n      successMessage: 'Training log successfully deleted.',\n      errorMessage: 'There was a problem deleting the training log.',\n    } as IAction,\n    getTrainingById: {\n      id: 'getTrainingById',\n      successMessage: 'Training successfully retrieved.',\n      errorMessage: 'There was a problem retrieving the training.',\n    } as IAction,\n    editTraining: {\n      id: 'editTraining',\n      successMessage: 'Training successfully updated.',\n      errorMessage: 'There was a problem updating the training.',\n    } as IAction,\n    createTraining: {\n      id: 'createTraining',\n      successMessage: 'Training successfully created.',\n      errorMessage: 'There was a problem creating the training.',\n    },\n  }\n\n  const apiGetTrainingByDepartmentId = async (departmentId: number): Promise<ITraining[] | void> => {\n    resetActionsInError()\n    addToActionsInProgress(trainingActions.getTrainingByDepartmentId)\n\n    try {\n      const rsp = await apiClient.get('/api/training', {\n        params: {\n          selectedDepartmentId: departmentId,\n        },\n      })\n\n      removeFromActionsInProgress(trainingActions.getTrainingByDepartmentId)\n      return rsp.data.training\n    }\n    catch (e: unknown) {\n      processActionError(trainingActions.getTrainingByDepartmentId, e)\n    }\n  }\n\n  /**\n   * This function is used to retrieve all training that a user can train.\n   */\n  const getAllTrainingByUserAbility = async (): Promise<ITraining[] | void> => {\n    resetActionsInError()\n    addToActionsInProgress(trainingActions.getAllTrainingByUserAbility)\n\n    try {\n      const rsp = await apiClient.get('/api/training-by-user-ability')\n\n      removeFromActionsInProgress(trainingActions.getAllTrainingByUserAbility)\n      return rsp.data.training\n    }\n    catch (e: unknown) {\n      processActionError(trainingActions.getAllTrainingByUserAbility, e)\n    }\n  }\n\n  /**\n   * This function is used to retrieve all training logs for a user.\n   *\n   */\n  const getAllTrainingLogsByUserId = async (userId: string): Promise<ITrainingLogs | void> => {\n    resetActionsInError()\n    addToActionsInProgress(trainingActions.getAllTrainingLogsByUserId)\n\n    try {\n      const rsp = await apiClient.get(`/api/user/${userId}/training-logs`)\n\n      removeFromActionsInProgress(trainingActions.getAllTrainingLogsByUserId)\n      return rsp.data\n    }\n    catch (e: unknown) {\n      processActionError(trainingActions.getAllTrainingLogsByUserId, e)\n    }\n  }\n\n  const trainUser = async (trainUserData: TrainUserDTO) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(trainingActions.trainUser)\n\n    try {\n      await apiClient.post(`/api/user/${trainUserData.trainee.id}/train`, trainUserData)\n      await fetchAndStoreAlertsIndex()\n      processActionSuccess(trainingActions.trainUser)\n    }\n    catch (e: unknown) {\n      processActionError(trainingActions.trainUser, e)\n      return false\n    }\n  }\n\n  const deleteTrainingLog = async (trainingLogId: number) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    const action = { ...trainingActions.deleteTrainingLog }\n    action.id = `${action.id}-${trainingLogId}`\n    addToActionsInProgress(action)\n\n    try {\n      await apiClient.delete(`/api/training-log/${trainingLogId}`)\n      await fetchAndStoreAlertsIndex()\n      processActionSuccess(action)\n    }\n    catch (e: unknown) {\n      processActionError(action, e)\n      return false\n    }\n  }\n\n  const getTrainingById = async (trainingId: string): Promise<ITraining | void> => {\n    resetActionsInError()\n    addToActionsInProgress(trainingActions.getTrainingById)\n\n    try {\n      const rsp = await apiClient.get(`/api/training/${trainingId}`)\n      removeFromActionsInProgress(trainingActions.getTrainingById)\n      return rsp.data.training\n    }\n    catch (e: unknown) {\n      processActionError(trainingActions.getTrainingById, e)\n    }\n  }\n\n  const editTraining = async (training: EditTrainingDTO): Promise<ITraining | void> => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(trainingActions.editTraining)\n\n    try {\n      const rsp = await apiClient.put(`/api/training/${training.id}`, {\n        department_id: training.department.id,\n        training_category_id: training.category.id,\n        name: training.name,\n        requires_feedback: training.requiresFeedback,\n        mandatory: training.mandatory,\n        required_abilities: training.requiredAbilities,\n      })\n      processActionSuccess(trainingActions.editTraining)\n      return rsp.data.training\n    }\n    catch (e: unknown) {\n      processActionError(trainingActions.editTraining, e)\n    }\n  }\n\n  const createTraining = async (trainingData: CreateTrainingDTO): Promise<ITraining | void> => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(trainingActions.createTraining)\n\n    try {\n      const rsp = await apiClient.post('/api/training', trainingData)\n      processActionSuccess(trainingActions.createTraining)\n      return rsp.data.training\n    }\n    catch (e: unknown) {\n      console.log(e)\n      processActionError(trainingActions.createTraining, e)\n    }\n  }\n\n  return {\n    trainingActions,\n    apiGetTrainingByDepartmentId,\n    getAllTrainingByUserAbility,\n    getAllTrainingLogsByUserId,\n    deleteTrainingLog,\n    getTrainingById,\n    editTraining,\n    trainUser,\n    createTraining,\n  }\n}\n"],"names":["useTraining","apiClient","useApiClient","addToActionsInProgress","removeFromActionsInProgress","processActionError","resetActionsInError","processActionSuccess","resetActionsInSuccess","useUi","fetchAndStoreAlertsIndex","useAlerts","trainingActions","departmentId","rsp","e","userId","trainingLogId","action","trainingId","training","trainUserData","trainingData"],"mappings":"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"}