{"version":3,"file":"Edit-ok2nTCP0.js","sources":["../../src/shared/ui/icons/IconMinus.vue","../../src/pages/assessments/Edit.vue"],"sourcesContent":["<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M17,13H7V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n  </svg>\n</template>\n","<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs, watch } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport { useAssessment } from '@/shared/api/useAssessment'\nimport type { IAssessment, IAssessmentCriteria } from '@/shared/types/assessments/IAssessment'\nimport IconAlert from '@/shared/ui/icons/IconAlert.vue'\nimport IconPlus from '@/shared/ui/icons/IconPlus.vue'\nimport IconMinus from '@/shared/ui/icons/IconMinus.vue'\nimport { useUser } from '@/shared/api/useUser'\nimport type { IAbility } from '@/shared/types/abilities/IAbility'\nimport { AppPermissions } from '@/shared/types/enums/permissions/permissions'\nimport VDepartmentSelect from '@/shared/ui/inputs/VDepartmentSelect.vue'\nimport type { EditAssessmentDTO } from '@/shared/types/assessments/AssessmentDTOs'\nimport { useUiStore } from '@/shared/lib/composables/ui'\nimport { useAssessmentStore } from '@/shared/api/stores/assessment'\nimport { assessmentExpiry } from '@/shared/config'\n\nconst props = defineProps<{ assessmentId: number }>()\nconst { assessmentId } = toRefs(props)\n\nconst { validateForm, actionIsInProgress, actionIsInError, actionIsInSuccess } = useUi()\nconst editAssessmentFormElement = ref<HTMLFormElement | null>(null)\nconst { getAssessmentById, assessmentActions, editAssessment } = useAssessment()\nconst { getAllAbilities } = useUser()\nconst { storeFilterState } = storeToRefs(useUiStore())\nconst { storeUpdateAssessment, storeRemoveAssessment } = useAssessmentStore()\n\nconst showCriteriaConsiderations = ref(false)\nconst newCriteria = ref<IAssessmentCriteria[]>([])\nconst allAbilities = ref<IAbility[]>([])\n\nconst editAssessmentDTO = ref<EditAssessmentDTO | null>(null)\n\nonMounted(async () => {\n  const [a, assessment] = await Promise.all([\n    getAllAbilities(),\n    getAssessmentById(assessmentId.value.toString()),\n  ])\n  if (assessment) {\n    const criteria = assessment.criteria.map((c: IAssessmentCriteria) => {\n      return {\n        criteria: c.criteria,\n        id: c.id,\n        remove: false,\n      }\n    })\n    editAssessmentDTO.value = {\n      ...assessment,\n      criteria,\n    }\n  }\n  allAbilities.value = a\n})\n\nwatch(\n  assessmentId,\n  async (newId) => {\n    if (newId) {\n      const assessment = await getAssessmentById(newId.toString())\n      if (assessment) {\n        const criteria = assessment.criteria.map((c: IAssessmentCriteria) => {\n          return {\n            criteria: c.criteria,\n            id: c.id,\n            remove: false,\n          }\n        })\n        editAssessmentDTO.value = {\n          ...assessment,\n          criteria,\n        }\n      }\n    }\n  },\n)\n\nconst addNewCriteria = () => {\n  newCriteria.value.push({\n    id: editAssessmentDTO.value!.criteria.length + 1,\n    criteria: '',\n  })\n}\n\nconst handleEditAssessment = async () => {\n  const assessment = await validateForm<IAssessment>(\n    editAssessmentFormElement.value,\n    () => editAssessment(\n      editAssessmentDTO.value!,\n      newCriteria.value,\n    ),\n  )\n  if (assessment) {\n    editAssessmentDTO.value = assessment\n    newCriteria.value = []\n\n    if (assessment.department.id === storeFilterState.value.selectedDepartment?.id) {\n      storeUpdateAssessment(assessment)\n    }\n    else {\n      storeRemoveAssessment(assessment)\n    }\n  }\n}\n\nconst toggleRequiredAbility = (ability: IAbility) => {\n  // this method searches the editUserFormData.abilities array to see if there is\n  // an ability with the same id as the one that was passed in\n  const abilityIndex: number = editAssessmentDTO.value!.requiredAbilities.findIndex((a: IAbility) => a.id === ability.id)\n  if (abilityIndex === -1) {\n    // if the ability is not found in the array, we add it\n    editAssessmentDTO.value!.requiredAbilities.push(ability)\n  }\n  else {\n    // if the ability is found in the array, we remove it\n    editAssessmentDTO.value!.requiredAbilities.splice(abilityIndex, 1)\n  }\n}\n\nconst toggleAbilityExemptFromRenewalAlert = (ability: IAbility) => {\n  // this method searches the editUserFormData.abilities array to see if there is\n  // an ability with the same id as the one that was passed in\n  const abilityIndex = editAssessmentDTO.value!.abilitiesExemptFromRenewalAlerts.findIndex((a: IAbility) => a.id === ability.id)\n  if (abilityIndex === -1) {\n    // if the ability is not found in the array, we add it\n    editAssessmentDTO.value!.abilitiesExemptFromRenewalAlerts.push(ability)\n  }\n  else {\n    // if the ability is found in the array, we remove it\n    editAssessmentDTO.value!.abilitiesExemptFromRenewalAlerts.splice(abilityIndex, 1)\n  }\n}\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <div class=\"sticky top-0 z-10 flex w-full items-center justify-end bg-white p-6\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(assessmentActions.getAssessmentById)\n            || actionIsInProgress(assessmentActions.editAssessment)\"\n          class=\"h-5 w-5 text-blue-500\"\n        />\n        <RouterLink\n          v-else\n          :to=\"{ name: $Routes.Assessments }\"\n        >\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        id=\"edit_assessment_form\"\n        ref=\"editAssessmentFormElement\"\n        class=\"w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"mb-6\">\n          <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n            View/Edit Assessment.\n          </h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Use the form below to update this assessment.\n          </p>\n        </div>\n\n        <template v-if=\"editAssessmentDTO\">\n          <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6\">\n            <div>\n              <p class=\"mb-1 block text-sm font-medium text-gray-700\">\n                Department\n              </p>\n              <VDepartmentSelect\n                v-model=\"editAssessmentDTO.department\"\n                :department-permissions-required=\"[\n                  AppPermissions.MANAGE_ASSESSMENTS,\n                ]\"\n              />\n            </div>\n            <div>\n              <label for=\"assessment_name\" class=\"block text-sm font-medium text-gray-700\">\n                Assessment Name\n              </label>\n              <div class=\"mt-1\">\n                <input\n                  id=\"assessment_name\"\n                  v-model=\"editAssessmentDTO.name\"\n                  type=\"text\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n            </div>\n\n            <div>\n              <label\n                for=\"criteria\"\n                class=\"block text-sm font-medium text-gray-700\"\n              >\n                Criteria\n              </label>\n\n              <div class=\"my-2 rounded-md bg-yellow-50 p-4 shadow\">\n                <div class=\"flex items-center\">\n                  <div class=\"shrink-0\">\n                    <IconAlert class=\"h-5 w-5 fill-yellow-400\" aria-hidden=\"true\" />\n                  </div>\n                  <div class=\"ml-3\">\n                    <div class=\"text-sm text-yellow-700\">\n                      <p>\n                        Be mindful when making changes to criteria.\n                      </p>\n                      <button @click.prevent=\"showCriteriaConsiderations = true\">\n                        <span class=\"text-xs italic hover:underline\">\n                          Learn more\n                        </span>\n                      </button>\n                      <Teleport to=\"#modal\">\n                        <Transition>\n                          <div\n                            v-if=\"showCriteriaConsiderations\"\n                            class=\"pointer-events-auto fixed inset-0 isolate flex items-center justify-center overflow-x-auto bg-black/50\"\n                            @click=\"showCriteriaConsiderations = false\"\n                          >\n                            <div\n                              class=\"max-h-[80%] max-w-[95%] overflow-y-auto rounded-md bg-white p-6 lg:max-w-[80%]\"\n                              @click.stop\n                            >\n                              <ul class=\"max-w-[500px] text-sm\">\n                                <li class=\"mb-3\">\n                                  <span class=\"block font-semibold text-blue-700\">\n                                    Updates to existing criteria:\n                                  </span>\n                                  <p class=\"mb-2\">\n                                    Tweaks to any criteria affect all recordsâ€” past and future. So, if you rename a knot from \"Bowline\" to \"Half Hitch,\" it will show up as \"Half Hitch\" in all logs, even if the original pass was for the \"Bowline.\"\n                                  </p>\n                                  <p>\n                                    To properly update a criterion without disrupting past records, create a new one (like \"Half Hitch\") and then remove the outdated one (like \"Bowline\"). This keeps past records intact while updating the criteria for future assessments.\n                                  </p>\n                                </li>\n                                <li>\n                                  <span class=\"block font-semibold text-blue-700\">\n                                    Deleting criteria:\n                                  </span>\n                                  <p>\n                                    Removing criteria is safe. Past assessments stay valid even if their criteria no longer exist. For instance, deleting the \"Bowline\" knot won't impact past logs that feature it. However, expect it to vanish from upcoming assessments.\n                                  </p>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                        </Transition>\n                      </Teleport>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                v-for=\"(criteria, index) in editAssessmentDTO.criteria\"\n                :key=\"index\"\n                class=\"mt-1 flex\"\n              >\n                <span\n                  class=\"flex w-8 cursor-help items-center justify-center rounded-l-md border border-gray-300 bg-gray-50 text-xs font-bold text-gray-400 shadow-sm\"\n                  title=\"The database ID for this criteria.\"\n                >\n                  <span class=\"pointer-events-none\">\n                    {{ criteria.id }}\n                  </span>\n                </span>\n                <input\n                  id=\"name\"\n                  v-model=\"criteria.criteria\"\n                  type=\"text\"\n                  class=\"block flex-1 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  :class=\"[\n                    criteria.remove ? 'border-red-200 bg-red-50' : 'border-gray-300 bg-white',\n                  ]\"\n                  required\n                >\n                <span\n                  class=\"flex w-8 items-center justify-center rounded-r-md border border-gray-300 bg-gray-50 text-xs shadow-sm\"\n                  title=\"Remove this criteria from the database.\"\n                >\n                  <button @click.prevent=\"criteria.remove = !criteria.remove\">\n                    <IconMinus\n                      class=\"h-4 w-4\"\n                      :class=\"[\n                        criteria.remove ? 'fill-red-500' : 'fill-red-300',\n                      ]\"\n                    />\n                  </button>\n                </span>\n              </div>\n\n              <div\n                v-for=\"(criteria, index) in newCriteria\"\n                :key=\"index\"\n                class=\"mt-1 flex\"\n              >\n                <span\n                  class=\"flex w-8 cursor-help items-center justify-center rounded-l-md border border-gray-300 bg-gray-50 text-xs font-bold text-gray-400 shadow-sm\"\n                  title=\"New criteria will be added to the database when you save this assessment.\"\n                >\n                  <IconPlus class=\"h-4 w-4 fill-green-500\" />\n                </span>\n                <input\n                  id=\"name\"\n                  v-model=\"criteria.criteria\"\n                  type=\"text\"\n                  class=\"block flex-1 rounded-r-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n            </div>\n\n            <div class=\"flex justify-end\">\n              <button\n                class=\"flex items-center text-sm font-semibold text-blue-600\"\n                @click.prevent=\"addNewCriteria\"\n              >\n                <IconPlus class=\"mr-1 h-4 w-4 fill-blue-600\" />\n                Add new Criteria\n              </button>\n            </div>\n          </div>\n\n          <div class=\"pt-8\">\n            <label\n              for=\"departure_date_and_time\"\n              class=\"block text-sm font-medium text-gray-700\"\n            >\n              Required Abilities\n            </label>\n\n            <p class=\"mt-1 text-sm text-gray-500\">\n              In order to create logs for this assessment, staff must have the abilities listed below. Logs for this assessment are also visible only to users with any of these abilities (or the staff to whom the log belongs).\n            </p>\n\n            <div class=\"mt-6\">\n              <fieldset>\n                <div class=\"space-y-4\">\n                  <div class=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\n                    <div\n                      v-for=\"ability in allAbilities\"\n                      :key=\"ability.id\"\n                      class=\"relative flex items-start\"\n                    >\n                      <div class=\"flex h-5 items-center\">\n                        <input\n                          :id=\"`required_${ability.slug}`\"\n                          :checked=\"editAssessmentDTO.requiredAbilities.find(a => a.slug === ability.slug) !== undefined\"\n                          type=\"checkbox\"\n                          class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                          @change=\"toggleRequiredAbility(ability)\"\n                        >\n                      </div>\n                      <div class=\"ml-3 flex items-center space-x-1 text-sm\">\n                        <div class=\"flex h-5 w-5 items-center justify-center\">\n                          <img\n                            :src=\"ability.iconUrl\"\n                            alt=\"Ability icon.\"\n                          >\n                        </div>\n                        <label\n                          :for=\"`required_${ability.slug}`\"\n                          class=\"cursor-pointer font-medium text-gray-700\"\n                        >\n                          {{ ability.name }}\n                        </label>\n                        <p class=\"text-gray-500\">\n                          {{ ability.description }}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n\n          <div class=\"pt-8\">\n            <label\n              for=\"departure_date_and_time\"\n              class=\"block text-sm font-medium text-gray-700\"\n            >\n              Renewal and Alert Exemption Rules\n            </label>\n\n            <p class=\"mt-1 text-sm text-gray-500\">\n              Users with any of these abilities will not receive renewal alerts for this assessment.\n            </p>\n\n            <div class=\"mt-6\">\n              <fieldset>\n                <div class=\"space-y-4\">\n                  <div class=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\n                    <div\n                      v-for=\"ability in allAbilities\"\n                      :key=\"ability.id\"\n                      class=\"relative flex items-start\"\n                    >\n                      <div class=\"flex h-5 items-center\">\n                        <input\n                          :id=\"`renewal_${ability.slug}`\"\n                          :checked=\"editAssessmentDTO.abilitiesExemptFromRenewalAlerts.find(a => a.slug === ability.slug) !== undefined\"\n                          type=\"checkbox\"\n                          class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                          @change=\"toggleAbilityExemptFromRenewalAlert(ability)\"\n                        >\n                      </div>\n                      <div class=\"ml-3 flex items-center space-x-1 text-sm\">\n                        <div class=\"flex h-5 w-5 items-center justify-center\">\n                          <img\n                            :src=\"ability.iconUrl\"\n                            alt=\"Ability icon.\"\n                          >\n                        </div>\n                        <label\n                          :for=\"`renewal_${ability.slug}`\"\n                          class=\"cursor-pointer font-medium text-gray-700\"\n                        >\n                          {{ ability.name }}\n                        </label>\n                        <p class=\"text-gray-500\">\n                          {{ ability.description }}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n            <div class=\"mt-6\">\n              <label for=\"expiry_in_days\" class=\"block text-sm font-medium text-gray-700\">\n                Days between renewals\n              </label>\n              <div class=\"mt-1\">\n                <select\n                  id=\"expiry_in_days\"\n                  v-model=\"editAssessmentDTO.expiryInDays\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                >\n                  <option :value=\"null\">\n                    No expiry\n                  </option>\n                  <option v-for=\"expiry in assessmentExpiry\" :key=\"expiry\">\n                    {{ expiry }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"relative pt-5\">\n            <div class=\"flex items-center justify-end\">\n              <Transition name=\"alert\">\n                <ActionSuccessAlert\n                  v-if=\"actionIsInSuccess(assessmentActions.editAssessment)\"\n                  :action=\"assessmentActions.editAssessment\"\n                />\n              </Transition>\n              <Transition name=\"alert\">\n                <ActionErrorAlert\n                  v-if=\"actionIsInError(assessmentActions.editAssessment)\"\n                  :action=\"assessmentActions.editAssessment\"\n                />\n              </Transition>\n              <div class=\"flex items-center\">\n                <button\n                  class=\"ml-3 inline-flex h-9 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                  @click.prevent=\"handleEditAssessment\"\n                >\n                  <span v-if=\"!actionIsInProgress(assessmentActions.editAssessment)\">\n                    Apply Changes\n                  </span>\n                  <ProgressSpinner\n                    v-else\n                    class=\"h-3 w-3 text-white\"\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n        </template>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n"],"names":["_hoisted_1","_hoisted_3","_cache","props","__props","assessmentId","toRefs","validateForm","actionIsInProgress","actionIsInError","actionIsInSuccess","useUi","editAssessmentFormElement","ref","getAssessmentById","assessmentActions","editAssessment","useAssessment","getAllAbilities","useUser","storeFilterState","storeToRefs","useUiStore","storeUpdateAssessment","storeRemoveAssessment","useAssessmentStore","showCriteriaConsiderations","newCriteria","allAbilities","editAssessmentDTO","onMounted","a","assessment","criteria","c","watch","newId","addNewCriteria","handleEditAssessment","_a","toggleRequiredAbility","ability","abilityIndex","toggleAbilityExemptFromRenewalAlert"],"mappings":"2nGAEIA,GAAkC,CAClC,MAAO,wKAEgGC,GAAA,mBACnGC,EAAA,8jJCiBR,MAAMC,EAAQC,EACR,CAAE,aAAAC,CAAA,EAAiBC,EAAOH,CAAK,EAE/B,CAAE,aAAAI,EAAc,mBAAAC,EAAoB,gBAAAC,EAAiB,kBAAAC,CAAA,EAAsBC,KAC3EC,EAA4BC,EAA4B,IAAI,EAC5D,CAAE,kBAAAC,EAAmB,kBAAAC,EAAmB,eAAAC,GAAmBC,GAAc,EACzE,CAAE,gBAAAC,GAAoBC,KACtB,CAAE,iBAAAC,CAAqB,EAAAC,GAAYC,GAAY,CAAA,EAC/C,CAAE,sBAAAC,EAAuB,sBAAAC,CAAsB,EAAIC,GAAmB,EAEtEC,EAA6Bb,EAAI,EAAK,EACtCc,EAAcd,EAA2B,CAAA,CAAE,EAC3Ce,EAAef,EAAgB,CAAA,CAAE,EAEjCgB,EAAoBhB,EAA8B,IAAI,EAE5DiB,EAAU,SAAY,CACpB,KAAM,CAACC,EAAGC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACxCd,EAAgB,EAChBJ,EAAkBT,EAAa,MAAM,UAAU,CAAA,CAChD,EACD,GAAI2B,EAAY,CACd,MAAMC,EAAWD,EAAW,SAAS,IAAKE,IACjC,CACL,SAAUA,EAAE,SACZ,GAAIA,EAAE,GACN,OAAQ,EAAA,EAEX,EACDL,EAAkB,MAAQ,CACxB,GAAGG,EACH,SAAAC,CAAA,CAEJ,CACAL,EAAa,MAAQG,CAAA,CACtB,EAEDI,EACE9B,EACA,MAAO+B,GAAU,CACf,GAAIA,EAAO,CACT,MAAMJ,EAAa,MAAMlB,EAAkBsB,EAAM,SAAU,CAAA,EAC3D,GAAIJ,EAAY,CACd,MAAMC,EAAWD,EAAW,SAAS,IAAKE,IACjC,CACL,SAAUA,EAAE,SACZ,GAAIA,EAAE,GACN,OAAQ,EAAA,EAEX,EACDL,EAAkB,MAAQ,CACxB,GAAGG,EACH,SAAAC,CAAA,CAEJ,CACF,CACF,CAAA,EAGF,MAAMI,EAAiB,IAAM,CAC3BV,EAAY,MAAM,KAAK,CACrB,GAAIE,EAAkB,MAAO,SAAS,OAAS,EAC/C,SAAU,EAAA,CACX,CAAA,EAGGS,EAAuB,SAAY,OACvC,MAAMN,EAAa,MAAMzB,EACvBK,EAA0B,MAC1B,IAAMI,EACJa,EAAkB,MAClBF,EAAY,KACd,CAAA,EAEEK,IACFH,EAAkB,MAAQG,EAC1BL,EAAY,MAAQ,GAEhBK,EAAW,WAAW,OAAOO,EAAAnB,EAAiB,MAAM,qBAAvB,YAAAmB,EAA2C,IAC1EhB,EAAsBS,CAAU,EAGhCR,EAAsBQ,CAAU,EAEpC,EAGIQ,EAAyBC,GAAsB,CAG7C,MAAAC,EAAuBb,EAAkB,MAAO,kBAAkB,UAAWE,GAAgBA,EAAE,KAAOU,EAAQ,EAAE,EAClHC,IAAiB,GAEDb,EAAA,MAAO,kBAAkB,KAAKY,CAAO,EAIvDZ,EAAkB,MAAO,kBAAkB,OAAOa,EAAc,CAAC,CACnE,EAGIC,EAAuCF,GAAsB,CAG3D,MAAAC,EAAeb,EAAkB,MAAO,iCAAiC,UAAWE,GAAgBA,EAAE,KAAOU,EAAQ,EAAE,EACzHC,IAAiB,GAEDb,EAAA,MAAO,iCAAiC,KAAKY,CAAO,EAItEZ,EAAkB,MAAO,iCAAiC,OAAOa,EAAc,CAAC,CAClF"}