{"version":3,"file":"Edit-AK_WW7zy.js","sources":["../../src/shared/ui/icons/IconEdit.vue","../../src/pages/operational-bases/Edit.vue"],"sourcesContent":["<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M18.13 12L19.39 10.74C19.83 10.3 20.39 10.06 21 10V9L15 3H5C3.89 3 3 3.89 3 5V19C3 20.1 3.89 21 5 21H11V19.13L11.13 19H5V5H12V12H18.13M14 4.5L19.5 10H14V4.5M19.13 13.83L21.17 15.87L15.04 22H13V19.96L19.13 13.83M22.85 14.19L21.87 15.17L19.83 13.13L20.81 12.15C21 11.95 21.33 11.95 21.53 12.15L22.85 13.47C23.05 13.67 23.05 14 22.85 14.19Z\" />\n  </svg>\n</template>\n","<script setup lang=\"ts\">\nimport { nextTick, onBeforeUnmount, onMounted, ref, toRefs, watch } from 'vue'\nimport type L from 'leaflet'\nimport { storeToRefs } from 'pinia'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport { useOperationalBase } from '@/shared/api/operational-bases/useOperationalBase'\nimport IconPlus from '@/shared/ui/icons/IconPlus.vue'\nimport { useExperienceLocation } from '@/shared/api/useExperienceLocation'\nimport FeedbackWarning from '@/shared/ui/FeedbackWarning.vue'\nimport IconEdit from '@/shared/ui/icons/IconEdit.vue'\nimport { useMap } from '@/shared/lib/composables/useMap'\nimport VDepartmentSelect from '@/shared/ui/inputs/VDepartmentSelect.vue'\nimport type { EditOperationalBaseDTO } from '@/shared/types/operational-bases/OperationalBaseDTOs'\nimport { useUiStore } from '@/shared/lib/composables/ui'\nimport { useOperationalBasesStore } from '@/shared/api/stores/operationalBase'\nimport type { IOperationalBase } from '@/shared/types/operational-bases/IOperationalBase'\nimport { AppPermissions } from '@/shared/types/enums/permissions/permissions'\n\nconst props = defineProps<{ operationalBaseId: number }>()\nconst { operationalBaseId } = toRefs(props)\n\nconst {\n  validateForm,\n  actionIsInProgress,\n  actionIsInError,\n  actionIsInSuccess,\n} = useUi()\nconst {\n  operationalBaseActions,\n  getOperationalBaseById,\n  editOperationalBase,\n} = useOperationalBase()\nconst {\n  experienceLocationActions,\n  fetchAndStoreExperienceLocationsByOperationalBaseIdIndex,\n  getAllExperienceLocationsFromStore,\n} = useExperienceLocation()\nconst {\n  createMap,\n  addLayersToMap,\n  createOperationalBaseMarker,\n  createExperienceLocationMarker,\n  panMapToCoordinates,\n  resetMapView,\n  tidyUpMap,\n} = useMap()\nconst { storeFilterState } = storeToRefs(useUiStore())\nconst {\n  storeRemoveOperationalBase,\n  storeAddOperationalBase,\n} = useOperationalBasesStore()\nconst {\n  storeOperationalBases,\n} = storeToRefs(useOperationalBasesStore())\n\nconst editOperationalBaseFormElement = ref<HTMLFormElement | null>(null)\n\nconst editOperationalBaseDTO = ref<EditOperationalBaseDTO | null>(null)\n\nconst handleEditOperationalBase = async () => {\n  if (editOperationalBaseFormElement.value) {\n    const operationalBase = await validateForm<IOperationalBase>(\n      editOperationalBaseFormElement.value,\n      () => editOperationalBase(\n        editOperationalBaseDTO.value as EditOperationalBaseDTO,\n      ),\n    )\n    if (operationalBase) {\n      editOperationalBaseDTO.value = {\n        id: operationalBase.id,\n        name: operationalBase.name,\n        department: operationalBase.department,\n        latitude: operationalBase.latitude,\n        longitude: operationalBase.longitude,\n      }\n\n      if (operationalBase.department.id !== storeFilterState.value.selectedDepartment?.id) {\n        storeRemoveOperationalBase(operationalBase.id)\n      }\n\n      if (operationalBase.department.id === storeFilterState.value.selectedDepartment?.id) {\n        if (!storeOperationalBases.value.find((ob) => ob.id === operationalBase.id)) {\n          storeAddOperationalBase(operationalBase)\n        }\n      }\n    }\n  }\n}\n\nlet map: L.Map | null = null\n\nconst handleUpdateMap = () => {\n  map = createMap(\n    Number.parseFloat(editOperationalBaseDTO.value!.latitude),\n    Number.parseFloat(editOperationalBaseDTO.value!.longitude),\n  )\n  addLayersToMap(map)\n\n  // Place the initial marker at the center of the map\n  let operationalBaseLocationMarker = createOperationalBaseMarker(\n    Number.parseFloat(editOperationalBaseDTO.value!.latitude),\n    Number.parseFloat(editOperationalBaseDTO.value!.longitude),\n  )\n  operationalBaseLocationMarker.addTo(map)\n  operationalBaseLocationMarker.bindTooltip(\n    editOperationalBaseDTO.value!.name,\n    {\n      sticky: true,\n    },\n  )\n\n  const experienceLocationMarkers = []\n  getAllExperienceLocationsFromStore().forEach((experienceLocation) => {\n    const experienceLocationMarker = createExperienceLocationMarker(\n      Number.parseFloat(experienceLocation.latitude),\n      Number.parseFloat(experienceLocation.longitude),\n      // we don't want these draggable from the edit operational base view\n      false,\n    )\n    experienceLocationMarker.addTo(map!)\n    experienceLocationMarker.bindTooltip(\n      experienceLocation.name,\n      {\n        sticky: true,\n      },\n    )\n    experienceLocationMarkers.push(experienceLocationMarker)\n  })\n\n  map.on('click', (e) => {\n    editOperationalBaseDTO.value!.latitude = e.latlng.lat.toString()\n    editOperationalBaseDTO.value!.longitude = e.latlng.lng.toString()\n\n    // Remove the previous marker\n    if (operationalBaseLocationMarker) {\n      map!.removeLayer(operationalBaseLocationMarker)\n    }\n\n    // Add a new marker where the map was clicked\n    operationalBaseLocationMarker = createOperationalBaseMarker(\n      e.latlng.lat,\n      e.latlng.lng,\n    )\n    operationalBaseLocationMarker.addTo(map!)\n    operationalBaseLocationMarker.bindTooltip(\n      editOperationalBaseDTO.value!.name,\n      {\n        sticky: true,\n      },\n    )\n  })\n\n  // This is important- the map needs to be reset because of the way the\n  // side bar comes in to view. Otherwise the tiles are offset.\n  resetMapView(\n    map,\n    Number.parseFloat(editOperationalBaseDTO.value!.latitude),\n    Number.parseFloat(editOperationalBaseDTO.value!.longitude),\n  )\n}\n\nconst handlePanMapToCoordinates = (latitude: string, longitude: string) => {\n  panMapToCoordinates(\n    map!,\n    Number.parseFloat(latitude),\n    Number.parseFloat(longitude),\n  )\n}\n\nonBeforeUnmount(() => {\n  tidyUpMap(map!)\n})\n\nonMounted(async () => {\n  const operationalBase = await getOperationalBaseById(operationalBaseId.value.toString())\n\n  if (operationalBase) {\n    editOperationalBaseDTO.value = {\n      id: operationalBase.id,\n      name: operationalBase.name,\n      department: operationalBase.department,\n      latitude: operationalBase.latitude,\n      longitude: operationalBase.longitude,\n    }\n  }\n\n  await fetchAndStoreExperienceLocationsByOperationalBaseIdIndex(editOperationalBaseDTO.value!.id)\n\n  await nextTick(() => {\n    setTimeout(() => handleUpdateMap(), 400)\n  })\n})\n\nwatch(\n  operationalBaseId,\n  async (newId) => {\n    if (newId) {\n      const operationalBase = await getOperationalBaseById(newId.toString())\n\n      if (operationalBase) {\n        editOperationalBaseDTO.value = {\n          id: operationalBase.id,\n          name: operationalBase.name,\n          department: operationalBase.department,\n          latitude: operationalBase.latitude,\n          longitude: operationalBase.longitude,\n        }\n      }\n\n      await fetchAndStoreExperienceLocationsByOperationalBaseIdIndex(editOperationalBaseDTO.value!.id)\n      if (map) {\n        map.off()\n        map.remove()\n      }\n      handleUpdateMap()\n    }\n  },\n)\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <!-- important to increase z index to sit on top of map -->\n      <div class=\"sticky top-0 z-[9999999] flex w-full items-center justify-end bg-white p-6\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(operationalBaseActions.getOperationalBaseById)\n            || actionIsInProgress(operationalBaseActions.editOperationalBase)\"\n          class=\"h-5 w-5 text-blue-500\"\n        />\n        <RouterLink\n          v-else\n          :to=\"{ name: $Routes.OperationalBases }\"\n        >\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        id=\"edit_operational_base_form\"\n        ref=\"editOperationalBaseFormElement\"\n        class=\"w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"mb-6\">\n          <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n            View/Edit Operational Base.\n          </h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Use the form below to update this operational base.\n          </p>\n        </div>\n\n        <template v-if=\"editOperationalBaseDTO\">\n          <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6\">\n            <div>\n              <p class=\"block text-sm font-medium text-gray-700\">\n                Department\n              </p>\n              <VDepartmentSelect\n                v-model=\"editOperationalBaseDTO.department\"\n                :department-permissions-required=\"[\n                  AppPermissions.MANAGE_OPERATIONAL_BASES,\n                ]\"\n              />\n            </div>\n\n            <div>\n              <label for=\"operational_base_name\" class=\"block text-sm font-medium text-gray-700\">\n                Operational Base Name\n              </label>\n              <div class=\"mt-1\">\n                <input\n                  id=\"operational_base_name\"\n                  v-model=\"editOperationalBaseDTO.name\"\n                  type=\"text\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n            </div>\n\n            <div class=\"flex flex-col\">\n              <label for=\"operational_base_name\" class=\"mb-1 block text-sm font-medium text-gray-700\">\n                Location\n              </label>\n              <div\n                id=\"map\"\n                class=\"h-[400px] w-full bg-gray-100\"\n              />\n              <p class=\"text-xs italic text-gray-500\">\n                {{ editOperationalBaseDTO.latitude }}, {{ editOperationalBaseDTO.longitude }}\n              </p>\n            </div>\n\n            <div>\n              <label\n                for=\"experience_locations\"\n                class=\"mb-2 block text-sm font-medium text-gray-700\"\n              >\n                Experience Locations\n              </label>\n\n              <FeedbackWarning\n                v-if=\"!getAllExperienceLocationsFromStore().length && !actionIsInProgress(experienceLocationActions.getAllExperienceLocationsByOperationalBaseId)\"\n                message=\"There are no Experience Locations for this Operational Base.\"\n              />\n\n              <div\n                v-for=\"(experienceLocation, index) in getAllExperienceLocationsFromStore()\"\n                :key=\"index\"\n                class=\"mt-1 flex\"\n              >\n                <button\n                  class=\"flex-1 cursor-zoom-in rounded-l border border-gray-200 bg-gray-50 p-2 text-left text-sm font-semibold text-gray-500 hover:bg-gray-100\"\n                  @click.prevent=\"handlePanMapToCoordinates(experienceLocation.latitude, experienceLocation.longitude)\"\n                >\n                  {{ experienceLocation.name }}\n                </button>\n                <RouterLink\n                  :to=\"{\n                    name: $Routes.ExperienceLocationEdit,\n                    params: {\n                      operationalBaseId: editOperationalBaseDTO.id,\n                      experienceLocationId: experienceLocation.id,\n                    },\n                  }\"\n                  class=\"group flex items-center rounded-r border border-gray-200 p-2\"\n                >\n                  <IconEdit class=\"h-4 w-4 fill-blue-900 transition-all group-hover:scale-125\" />\n                </RouterLink>\n                <button\n                  class=\"group rounded-r border border-gray-200 p-2\"\n                  @click.prevent=\"null\"\n                >\n                  <IconClose class=\"h-4 w-4 fill-red-500 transition-all group-hover:scale-125\" />\n                </button>\n              </div>\n            </div>\n\n            <div class=\"flex justify-end\">\n              <RouterLink\n                :to=\"{\n                  name: $Routes.ExperienceLocationCreate,\n                  params: { operationalBaseId: editOperationalBaseDTO.id },\n                }\"\n                class=\"flex items-center text-sm font-semibold text-blue-600 hover:underline\"\n              >\n                <IconPlus class=\"mr-1 h-4 w-4 fill-blue-600\" />\n                Add new Experience Location\n              </RouterLink>\n            </div>\n          </div>\n\n          <div class=\"relative pt-5\">\n            <div class=\"flex items-center justify-end\">\n              <Transition name=\"alert\">\n                <ActionSuccessAlert\n                  v-if=\"actionIsInSuccess(operationalBaseActions.editOperationalBase)\"\n                  :action=\"operationalBaseActions.editOperationalBase\"\n                />\n              </Transition>\n              <Transition name=\"alert\">\n                <ActionErrorAlert\n                  v-if=\"actionIsInError(operationalBaseActions.editOperationalBase)\"\n                  :action=\"operationalBaseActions.editOperationalBase\"\n                />\n              </Transition>\n              <div class=\"flex items-center\">\n                <button\n                  class=\"ml-3 inline-flex h-9 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                  @click.prevent=\"handleEditOperationalBase\"\n                >\n                  <span v-if=\"!actionIsInProgress(operationalBaseActions.editOperationalBase)\">\n                    Apply Changes\n                  </span>\n                  <ProgressSpinner\n                    v-else\n                    class=\"h-3 w-3 text-white\"\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n        </template>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n"],"names":["_hoisted_1","_hoisted_3","_cache","props","__props","operationalBaseId","toRefs","validateForm","actionIsInProgress","actionIsInError","actionIsInSuccess","useUi","operationalBaseActions","getOperationalBaseById","editOperationalBase","useOperationalBase","experienceLocationActions","fetchAndStoreExperienceLocationsByOperationalBaseIdIndex","getAllExperienceLocationsFromStore","useExperienceLocation","createMap","addLayersToMap","createOperationalBaseMarker","createExperienceLocationMarker","panMapToCoordinates","resetMapView","tidyUpMap","useMap","storeFilterState","storeToRefs","useUiStore","storeRemoveOperationalBase","storeAddOperationalBase","useOperationalBasesStore","storeOperationalBases","editOperationalBaseFormElement","ref","editOperationalBaseDTO","handleEditOperationalBase","operationalBase","_a","_b","ob","map","handleUpdateMap","operationalBaseLocationMarker","experienceLocation","experienceLocationMarker","e","handlePanMapToCoordinates","latitude","longitude","onBeforeUnmount","onMounted","nextTick","watch","newId"],"mappings":"0xGAEIA,GAAkC,CAClC,MAAO,+ZAEuVC,GAAA,mBAC1VC,EAAA,i8CCiBR,MAAMC,EAAQC,EACR,CAAE,kBAAAC,CAAA,EAAsBC,GAAOH,CAAK,EAEpC,CACJ,aAAAI,EACA,mBAAAC,EACA,gBAAAC,EACA,kBAAAC,GACEC,GAAM,EACJ,CACJ,uBAAAC,EACA,uBAAAC,EACA,oBAAAC,GACEC,GAAmB,EACjB,CACJ,0BAAAC,EACA,yDAAAC,EACA,mCAAAC,GACEC,GAAsB,EACpB,CACJ,UAAAC,EACA,eAAAC,EACA,4BAAAC,EACA,+BAAAC,EACA,oBAAAC,EACA,aAAAC,EACA,UAAAC,GACEC,GAAO,EACL,CAAE,iBAAAC,CAAqB,EAAAC,EAAYC,GAAY,CAAA,EAC/C,CACJ,2BAAAC,EACA,wBAAAC,GACEC,EAAyB,EACvB,CACJ,sBAAAC,CAAA,EACEL,EAAYI,EAAA,CAA0B,EAEpCE,EAAiCC,EAA4B,IAAI,EAEjEC,EAAyBD,EAAmC,IAAI,EAEhEE,EAA4B,SAAY,SAC5C,GAAIH,EAA+B,MAAO,CACxC,MAAMI,EAAkB,MAAMhC,EAC5B4B,EAA+B,MAC/B,IAAMrB,EACJuB,EAAuB,KACzB,CAAA,EAEEE,IACFF,EAAuB,MAAQ,CAC7B,GAAIE,EAAgB,GACpB,KAAMA,EAAgB,KACtB,WAAYA,EAAgB,WAC5B,SAAUA,EAAgB,SAC1B,UAAWA,EAAgB,SAAA,EAGzBA,EAAgB,WAAW,OAAOC,EAAAZ,EAAiB,MAAM,qBAAvB,YAAAY,EAA2C,KAC/ET,EAA2BQ,EAAgB,EAAE,EAG3CA,EAAgB,WAAW,OAAOE,EAAAb,EAAiB,MAAM,qBAAvB,YAAAa,EAA2C,MAC1EP,EAAsB,MAAM,KAAMQ,GAAOA,EAAG,KAAOH,EAAgB,EAAE,GACxEP,EAAwBO,CAAe,GAI/C,CAAA,EAGF,IAAII,EAAoB,KAExB,MAAMC,EAAkB,IAAM,CACtBD,EAAAvB,EACJ,OAAO,WAAWiB,EAAuB,MAAO,QAAQ,EACxD,OAAO,WAAWA,EAAuB,MAAO,SAAS,CAAA,EAE3DhB,EAAesB,CAAG,EAGlB,IAAIE,EAAgCvB,EAClC,OAAO,WAAWe,EAAuB,MAAO,QAAQ,EACxD,OAAO,WAAWA,EAAuB,MAAO,SAAS,CAAA,EAE3DQ,EAA8B,MAAMF,CAAG,EACTE,EAAA,YAC5BR,EAAuB,MAAO,KAC9B,CACE,OAAQ,EACV,CAAA,EAIiCnB,EAAA,EAAE,QAAS4B,GAAuB,CACnE,MAAMC,EAA2BxB,EAC/B,OAAO,WAAWuB,EAAmB,QAAQ,EAC7C,OAAO,WAAWA,EAAmB,SAAS,EAE9C,EAAA,EAEFC,EAAyB,MAAMJ,CAAI,EACVI,EAAA,YACvBD,EAAmB,KACnB,CACE,OAAQ,EACV,CAAA,CAEqD,CACxD,EAEGH,EAAA,GAAG,QAAUK,GAAM,CACrBX,EAAuB,MAAO,SAAWW,EAAE,OAAO,IAAI,WACtDX,EAAuB,MAAO,UAAYW,EAAE,OAAO,IAAI,WAGnDH,GACFF,EAAK,YAAYE,CAA6B,EAIhBA,EAAAvB,EAC9B0B,EAAE,OAAO,IACTA,EAAE,OAAO,GAAA,EAEXH,EAA8B,MAAMF,CAAI,EACVE,EAAA,YAC5BR,EAAuB,MAAO,KAC9B,CACE,OAAQ,EACV,CAAA,CACF,CACD,EAIDZ,EACEkB,EACA,OAAO,WAAWN,EAAuB,MAAO,QAAQ,EACxD,OAAO,WAAWA,EAAuB,MAAO,SAAS,CAAA,CAC3D,EAGIY,EAA4B,CAACC,EAAkBC,IAAsB,CACzE3B,EACEmB,EACA,OAAO,WAAWO,CAAQ,EAC1B,OAAO,WAAWC,CAAS,CAAA,CAC7B,EAGF,OAAAC,GAAgB,IAAM,CACpB1B,EAAUiB,CAAI,CAAA,CACf,EAEDU,GAAU,SAAY,CACpB,MAAMd,EAAkB,MAAM1B,EAAuBR,EAAkB,MAAM,UAAU,EAEnFkC,IACFF,EAAuB,MAAQ,CAC7B,GAAIE,EAAgB,GACpB,KAAMA,EAAgB,KACtB,WAAYA,EAAgB,WAC5B,SAAUA,EAAgB,SAC1B,UAAWA,EAAgB,SAAA,GAIzB,MAAAtB,EAAyDoB,EAAuB,MAAO,EAAE,EAE/F,MAAMiB,GAAS,IAAM,CACR,WAAA,IAAMV,IAAmB,GAAG,CAAA,CACxC,CAAA,CACF,EAEDW,GACElD,EACA,MAAOmD,GAAU,CACf,GAAIA,EAAO,CACT,MAAMjB,EAAkB,MAAM1B,EAAuB2C,EAAM,SAAU,CAAA,EAEjEjB,IACFF,EAAuB,MAAQ,CAC7B,GAAIE,EAAgB,GACpB,KAAMA,EAAgB,KACtB,WAAYA,EAAgB,WAC5B,SAAUA,EAAgB,SAC1B,UAAWA,EAAgB,SAAA,GAIzB,MAAAtB,EAAyDoB,EAAuB,MAAO,EAAE,EAC3FM,IACFA,EAAI,IAAI,EACRA,EAAI,OAAO,GAEGC,GAClB,CACF,CAAA"}