{"version":3,"file":"Create-q_O4mRcE.js","sources":["../../src/shared/types/experiences/IExperience.ts","../../src/pages/experiences/Create.vue"],"sourcesContent":["import type { IOperationalBase } from '@/shared/types/operational-bases/IOperationalBase'\nimport type { IExperienceLocation } from '@/shared/types/experience-locations/IExperienceLocation'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\n\nexport interface IExperience {\n  id: number\n  department: IDepartment\n  operationalBase: IOperationalBase\n  bokunId: number\n  bokunProductCode: string\n  experienceLocation: IExperienceLocation\n  title: string\n  description: string\n  durationInMinutes: number\n  minAge: number\n  difficulty: ExperienceDifficulties\n  distanceHikedInMeters: number\n  distanceDrivenInMeters: number\n  customisedStartTime: boolean\n  allowVehicles: boolean\n}\n\nexport enum ExperienceDifficulties {\n  EASY = 'Easy',\n  MEDIUM = 'Medium',\n  HARD = 'Hard',\n}\n","<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { Switch } from '@headlessui/vue'\nimport RightDrawer from '@/shared/ui/layout/RightDrawer.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport IconClose from '@/shared/ui/icons/IconClose.vue'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useExperience } from '@/shared/api/useExperience'\nimport { useExperienceLocation } from '@/shared/api/useExperienceLocation'\nimport VDataFilters from '@/shared/ui/inputs/VDataFilters.vue'\nimport type { IDataFilters } from '@/shared/types/inputs/IDataFilters'\nimport type { CreateExperienceDTO } from '@/shared/types/experiences/ExperienceDTOs'\nimport { ExperienceDifficulties } from '@/shared/types/experiences/IExperience'\nimport ActionSuccessAlert from '@/shared/ui/forms/ActionSuccessAlert.vue'\nimport ActionErrorAlert from '@/shared/ui/forms/ActionErrorAlert.vue'\nimport { useExperiencesStore } from '@/shared/api/stores/experience'\nimport { AppPermissions } from '@/shared/types/enums/permissions/permissions'\nimport { ExperienceDifficulty } from '@/shared/config'\n\nconst { validateForm, actionIsInProgress, actionIsInError, actionIsInSuccess } = useUi()\nconst {\n  experienceActions,\n  createExperience,\n} = useExperience()\nconst { storeAddExperience } = useExperiencesStore()\nconst {\n  fetchAndStoreExperienceLocationsByOperationalBaseIdIndex,\n  getAllExperienceLocationsFromStore,\n  experienceLocationActions,\n} = useExperienceLocation()\n\nconst createExperienceFormElement = ref<HTMLFormElement | null>(null)\n\nconst filterState = ref<IDataFilters>({\n  selectedDepartment: null,\n  selectedOperationalBase: null,\n  selectedRole: null,\n  selectedMonth: '',\n  selectedDate: '',\n})\n\nconst createExperienceDTO = ref<CreateExperienceDTO | null>(null)\n\nconst handleCreateExperience = async () => {\n  await validateForm(createExperienceFormElement.value, async () => {\n    if (!createExperienceDTO.value) {\n      return\n    }\n    const experience = await createExperience(createExperienceDTO.value)\n\n    if (experience && filterState.value.selectedOperationalBase) {\n      if (experience.operationalBase.id === filterState.value.selectedOperationalBase.id) {\n        storeAddExperience(experience)\n      }\n    }\n  })\n}\n\nconst handleFilterStateUpdate = async (newFilterState: IDataFilters) => {\n  filterState.value = newFilterState\n}\n\nwatch (\n  () => filterState.value.selectedOperationalBase,\n  async (newValue, oldValue) => {\n    if (newValue !== oldValue) {\n      if (\n        filterState.value.selectedDepartment\n        && filterState.value.selectedOperationalBase\n      ) {\n        // fetch experience locations based on operational base id\n        await fetchAndStoreExperienceLocationsByOperationalBaseIdIndex(\n          filterState.value.selectedOperationalBase.id,\n        )\n\n        if (getAllExperienceLocationsFromStore().length > 0) {\n          createExperienceDTO.value = {\n            department: filterState.value.selectedDepartment,\n            operationalBase: filterState.value.selectedOperationalBase,\n            experienceLocation: getAllExperienceLocationsFromStore()[0],\n            title: '',\n            description: '',\n            bokunId: 0,\n            bokunProductCode: '',\n            customisedStartTime: false,\n            minAge: 0,\n            difficulty: ExperienceDifficulties.EASY,\n            distanceHikedInMeters: 0,\n            distanceDrivenInMeters: 0,\n            durationInMinutes: 0,\n            allowVehicles: true,\n          }\n        }\n      }\n    }\n  },\n)\n</script>\n\n<template>\n  <RightDrawer>\n    <div class=\"isolate flex flex-col items-center justify-center border-l bg-white pb-6\">\n      <div class=\"sticky top-0 z-[9999999] flex w-full items-center justify-end bg-white p-6\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(experienceActions.createExperience)\"\n          class=\"h-5 w-5 text-blue-500\"\n        />\n        <RouterLink\n          v-else\n          :to=\"{ name: $Routes.Experiences }\"\n        >\n          <IconClose class=\"h-5 w-5 fill-red-400\" />\n        </RouterLink>\n      </div>\n      <form\n        id=\"create_experience_form\"\n        ref=\"createExperienceFormElement\"\n        class=\"w-full space-y-8 divide-y divide-gray-200 px-6 md:px-12\"\n      >\n        <div class=\"mb-6\">\n          <h3 class=\"text-base font-semibold leading-6 text-gray-900\">\n            Create Experience.\n          </h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Use the form below to create a new Experience.\n          </p>\n        </div>\n        <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 pt-6\">\n          <div>\n            <p class=\"mb-1 block text-sm font-medium text-gray-700\">\n              Department\n            </p>\n            <VDataFilters\n              :department-permissions-required=\"[\n                AppPermissions.VIEW_EXPERIENCES,\n              ]\"\n              filter-by-operational-bases\n              :filter-state=\"filterState\"\n              @filter-state-updated=\"handleFilterStateUpdate\"\n            />\n          </div>\n          <template v-if=\"createExperienceDTO\">\n            <div>\n              <label for=\"experience_title\" class=\"block text-sm font-medium text-gray-700\">\n                Title\n              </label>\n              <div class=\"mt-1\">\n                <input\n                  id=\"experience_title\"\n                  v-model=\"createExperienceDTO.title\"\n                  placeholder=\"Eg. Glacier Wonders\"\n                  type=\"text\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  required\n                >\n              </div>\n            </div>\n\n            <div>\n              <label for=\"experience_description\" class=\"block text-sm font-medium text-gray-700\">\n                Description\n              </label>\n              <div class=\"mt-1\">\n                <textarea\n                  id=\"experience_description\"\n                  v-model=\"createExperienceDTO.description\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                />\n              </div>\n            </div>\n\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-6 sm:grid-cols-2\">\n              <div>\n                <label for=\"bokun_id\" class=\"block text-sm font-medium text-gray-700\">\n                  Bókun ID\n                </label>\n                <div class=\"mt-1\">\n                  <input\n                    id=\"bokun_id\"\n                    v-model=\"createExperienceDTO.bokunId\"\n                    placeholder=\"Eg. 17340\"\n                    type=\"number\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required\n                  >\n                </div>\n              </div>\n\n              <div>\n                <label for=\"bokun_product_code\" class=\"block text-sm font-medium text-gray-700\">\n                  Bókun Product Code\n                </label>\n                <div class=\"mt-1\">\n                  <input\n                    id=\"bokun_product_code\"\n                    v-model=\"createExperienceDTO.bokunProductCode\"\n                    placeholder=\"Eg. GG-GW\"\n                    type=\"text\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required\n                  >\n                </div>\n              </div>\n\n              <div>\n                <label for=\"customised_start_time\" class=\"block text-sm font-medium text-gray-700\">\n                  Customised Start Time?\n                </label>\n                <div class=\"mt-1\">\n                  <select\n                    id=\"customised_start_time\"\n                    v-model=\"createExperienceDTO.customisedStartTime\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  >\n                    <option :value=\"true\">\n                      Yes\n                    </option>\n                    <option :value=\"false\">\n                      No\n                    </option>\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label for=\"min_age\" class=\"block text-sm font-medium text-gray-700\">\n                  Minimum Age\n                </label>\n                <div class=\"mt-1\">\n                  <input\n                    id=\"min_age\"\n                    v-model=\"createExperienceDTO.minAge\"\n                    type=\"number\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required\n                  >\n                </div>\n              </div>\n              <div>\n                <label for=\"difficulty\" class=\"block text-sm font-medium text-gray-700\">\n                  Difficulty\n                </label>\n                <div class=\"mt-1\">\n                  <select\n                    id=\"difficulty\"\n                    v-model=\"createExperienceDTO.difficulty\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  >\n                    <option\n                      v-for=\"difficulty in ExperienceDifficulty\"\n                      :key=\"difficulty\"\n                    >\n                      {{ difficulty }}\n                    </option>\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label for=\"distance_hiked_in_meters\" class=\"block text-sm font-medium text-gray-700\">\n                  Distance Hiked (m)\n                </label>\n                <div class=\"mt-1\">\n                  <input\n                    id=\"distance_hiked_in_meters\"\n                    v-model=\"createExperienceDTO.distanceHikedInMeters\"\n                    type=\"number\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required\n                  >\n                </div>\n              </div>\n              <div>\n                <label for=\"distance_driven_in_meters\" class=\"block text-sm font-medium text-gray-700\">\n                  Distance Driven (m)\n                </label>\n                <div class=\"mt-1\">\n                  <input\n                    id=\"distance_driven_in_meters\"\n                    v-model=\"createExperienceDTO.distanceDrivenInMeters\"\n                    type=\"number\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required\n                  >\n                </div>\n              </div>\n\n              <div>\n                <label for=\"experience_location_id\" class=\"block text-sm font-medium text-gray-700\">\n                  Experience Location\n                </label>\n                <div class=\"relative mt-1\">\n                  <select\n                    id=\"experience_location_id\"\n                    v-model=\"createExperienceDTO.experienceLocation\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    :disabled=\"actionIsInProgress(experienceLocationActions.getAllExperienceLocationsByOperationalBaseId) || getAllExperienceLocationsFromStore().length === 1\"\n                    required\n                    :class=\"{ 'bg-gray-200 bg-none': getAllExperienceLocationsFromStore().length === 1 }\"\n                  >\n                    <option\n                      v-for=\"experienceLocation in getAllExperienceLocationsFromStore()\"\n                      :key=\"experienceLocation.id\"\n                      :value=\"experienceLocation\"\n                    >\n                      {{ experienceLocation.name }}\n                    </option>\n                  </select>\n                  <div\n                    v-if=\"actionIsInProgress(experienceLocationActions.getAllExperienceLocationsByOperationalBaseId)\"\n                    class=\"absolute inset-0 flex items-center justify-center\"\n                  >\n                    <ProgressSpinner class=\"h-3 w-3 text-gray-500\" />\n                  </div>\n                </div>\n              </div>\n              <div>\n                <label for=\"duration_in_minutes\" class=\"block text-sm font-medium text-gray-700\">\n                  Duration (minutes)\n                </label>\n                <div class=\"mt-1\">\n                  <input\n                    id=\"duration_in_minutes\"\n                    v-model=\"createExperienceDTO.durationInMinutes\"\n                    type=\"number\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required\n                  >\n                </div>\n              </div>\n              <div>\n                <label for=\"allow_vehicles\" class=\"block text-sm font-medium text-gray-700\">\n                  Allow Vehicles\n                </label>\n                <div class=\"mt-1\">\n                  <Switch\n                    v-model=\"createExperienceDTO.allowVehicles\"\n                    class=\"relative inline-flex h-6 w-11 items-center rounded-full\"\n                    :class=\"createExperienceDTO.allowVehicles ? 'bg-green-600' : 'bg-gray-200'\"\n                  >\n                    <span\n                      :class=\"createExperienceDTO.allowVehicles ? 'translate-x-6' : 'translate-x-1'\"\n                      class=\"inline-block h-4 w-4 rounded-full bg-white transition\"\n                    />\n                  </Switch>\n                </div>\n              </div>\n            </div>\n          </template>\n        </div>\n\n        <div\n          v-if=\"createExperienceDTO\"\n          class=\"relative pt-5\"\n        >\n          <div class=\"flex items-center justify-end\">\n            <Transition name=\"alert\">\n              <ActionSuccessAlert\n                v-if=\"actionIsInSuccess(experienceActions.createExperience)\"\n                :action=\"experienceActions.createExperience\"\n              />\n            </Transition>\n            <Transition name=\"alert\">\n              <ActionErrorAlert\n                v-if=\"actionIsInError(experienceActions.createExperience)\"\n                :action=\"experienceActions.createExperience\"\n              />\n            </Transition>\n            <div class=\"flex items-center\">\n              <button\n                class=\"ml-3 inline-flex h-9 items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm focus:outline-none hover:bg-blue-700\"\n                @click.prevent=\"handleCreateExperience\"\n              >\n                <span v-if=\"!actionIsInProgress(experienceActions.createExperience)\">\n                  Save Experience\n                </span>\n                <ProgressSpinner\n                  v-else\n                  class=\"h-3 w-3 text-white\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </RightDrawer>\n</template>\n"],"names":["ExperienceDifficulties","validateForm","actionIsInProgress","actionIsInError","actionIsInSuccess","useUi","experienceActions","createExperience","useExperience","storeAddExperience","useExperiencesStore","fetchAndStoreExperienceLocationsByOperationalBaseIdIndex","getAllExperienceLocationsFromStore","experienceLocationActions","useExperienceLocation","createExperienceFormElement","ref","filterState","createExperienceDTO","handleCreateExperience","experience","handleFilterStateUpdate","newFilterState","watch","newValue","oldValue"],"mappings":"ilGAsBY,IAAAA,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,OAAS,SACTA,EAAA,KAAO,OAHGA,IAAAA,GAAA,CAAA,CAAA,46ECHZ,KAAM,CAAE,aAAAC,EAAc,mBAAAC,EAAoB,gBAAAC,EAAiB,kBAAAC,CAAA,EAAsBC,IAC3E,CACJ,kBAAAC,EACA,iBAAAC,GACEC,EAAc,EACZ,CAAE,mBAAAC,GAAuBC,IACzB,CACJ,yDAAAC,EACA,mCAAAC,EACA,0BAAAC,GACEC,EAAsB,EAEpBC,EAA8BC,EAA4B,IAAI,EAE9DC,EAAcD,EAAkB,CACpC,mBAAoB,KACpB,wBAAyB,KACzB,aAAc,KACd,cAAe,GACf,aAAc,EAAA,CACf,EAEKE,EAAsBF,EAAgC,IAAI,EAE1DG,EAAyB,SAAY,CACnC,MAAAlB,EAAac,EAA4B,MAAO,SAAY,CAC5D,GAAA,CAACG,EAAoB,MACvB,OAEF,MAAME,EAAa,MAAMb,EAAiBW,EAAoB,KAAK,EAE/DE,GAAcH,EAAY,MAAM,yBAC9BG,EAAW,gBAAgB,KAAOH,EAAY,MAAM,wBAAwB,IAC9ER,EAAmBW,CAAU,CAEjC,CACD,CAAA,EAGGC,EAA0B,MAAOC,GAAiC,CACtEL,EAAY,MAAQK,CAAA,EAGtB,OAAAC,EACE,IAAMN,EAAY,MAAM,wBACxB,MAAOO,EAAUC,IAAa,CACxBD,IAAaC,GAEbR,EAAY,MAAM,oBACfA,EAAY,MAAM,0BAGf,MAAAN,EACJM,EAAY,MAAM,wBAAwB,EAAA,EAGxCL,EAAA,EAAqC,OAAS,IAChDM,EAAoB,MAAQ,CAC1B,WAAYD,EAAY,MAAM,mBAC9B,gBAAiBA,EAAY,MAAM,wBACnC,mBAAoBL,EAAmC,EAAE,CAAC,EAC1D,MAAO,GACP,YAAa,GACb,QAAS,EACT,iBAAkB,GAClB,oBAAqB,GACrB,OAAQ,EACR,WAAYZ,EAAuB,KACnC,sBAAuB,EACvB,uBAAwB,EACxB,kBAAmB,EACnB,cAAe,EAAA,GAKzB,CAAA"}