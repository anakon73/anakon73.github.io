{"version":3,"file":"VPermissionMultiSelect-BVjzMLzi.js","sources":["../../src/shared/api/useUploadImage.ts","../../src/shared/ui/forms/ImageUpload.vue","../../src/shared/ui/inputs/VRoleMultiSelect.vue","../../src/shared/ui/inputs/VTextInput.vue","../../src/shared/ui/inputs/VAbilityMultiSelect.vue","../../src/shared/api/stores/permission.ts","../../src/shared/api/permissions/usePermission.ts","../../src/shared/ui/inputs/VPermissionMultiSelect.vue"],"sourcesContent":["import { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\n\nexport function useUploadImage() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    processActionError,\n    processActionSuccess,\n    resetActionsInError,\n    resetActionsInSuccess,\n  } = useUi()\n\n  const uploadImageActions = {\n    uploadImage: {\n      id: 'uploadImage',\n      successMessage: 'Image uploaded successfully.',\n      errorMessage: 'There was a problem uploading the image.',\n    } as IAction,\n  }\n\n  const uploadImage = async (image: File, imageStorageDirectory: string) => {\n    resetActionsInError()\n    resetActionsInSuccess()\n    addToActionsInProgress(uploadImageActions.uploadImage)\n\n    try {\n      const formData = new FormData()\n      formData.append('image', image)\n      formData.append('image_storage_directory', imageStorageDirectory)\n\n      const rsp = await apiClient.post(\n        '/api/upload-image',\n        formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        },\n      )\n\n      processActionSuccess(uploadImageActions.uploadImage)\n\n      return rsp.data\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(uploadImageActions.uploadImage, e)\n    }\n  }\n\n  return {\n    uploadImage,\n    uploadImageActions,\n  }\n}\n","<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useUploadImage } from '@/shared/api/useUploadImage'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\n\nconst { uploadImage, uploadImageActions } = useUploadImage()\nconst { actionIsInProgress } = useUi()\n\nconst emit = defineEmits<{\n  fileUploaded: [\n    payload: {\n      db_path: string\n      src: string\n    },\n  ]\n}>()\nconst {\n  label,\n  defaultImageSrc,\n  imageStorageDirectory,\n} = defineProps<{\n  imageStorageDirectory: string\n  label: string\n  defaultImageSrc: string | null\n}>()\n\nconst imgPath = ref('')\n\nconst createImage = (file: File) => {\n  const reader = new FileReader()\n\n  reader.onload = (e) => {\n    if (typeof e.target!.result === 'string') {\n      imgPath.value = e.target!.result\n    }\n  }\n  reader.readAsDataURL(file)\n}\n\nconst onFileChange = async (e: Event) => {\n  const input = e.target as HTMLInputElement\n\n  let files = input.files\n\n  if (!files || files.length === 0) {\n    files = (e as DragEvent).dataTransfer!.files\n  }\n\n  if (!files || files.length === 0) return\n\n  const paths = await uploadImage(files[0], imageStorageDirectory)\n\n  setTimeout(() => {\n    emit('fileUploaded', {\n      db_path: paths.db_path,\n      src: paths.src,\n    })\n  }, 500)\n  createImage(files[0])\n}\n</script>\n\n<template>\n  <div>\n    <label for=\"imageUpload\" class=\"block text-sm font-medium text-gray-700\">\n      {{ label }}\n    </label>\n    <div class=\"mt-1 flex items-center\">\n      <span class=\"flex h-12 w-12 items-center justify-center overflow-hidden rounded-full bg-gray-100\">\n        <ProgressSpinner\n          v-if=\"actionIsInProgress(uploadImageActions.uploadImage)\"\n          class=\"mx-auto h-4 w-4 text-gray-500\"\n        />\n        <img\n          v-else-if=\"imgPath\"\n          :src=\"imgPath\"\n          class=\"h-full w-full object-cover\"\n          alt=\"Profile image\"\n        >\n        <img\n          v-else-if=\"defaultImageSrc\"\n          :src=\"defaultImageSrc\"\n          class=\"h-full w-full object-cover\"\n          alt=\"Profile image\"\n        >\n        <svg\n          v-else\n          class=\"h-full w-full text-gray-300\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      </span>\n      <input\n        id=\"imageUpload\"\n        type=\"file\"\n        accept=\"image/*\"\n        class=\"ml-5 rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium leading-4 text-gray-700 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 hover:bg-gray-50\"\n        @change=\"onFileChange\"\n      >\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { onMounted, ref, watch } from 'vue'\nimport { useRole } from '@/shared/api/roles/useRole'\nimport type { IRole } from '@/shared/types/roles/IRole'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\nimport FeedbackWarning from '@/shared/ui/FeedbackWarning.vue'\nimport IconAccount from '@/shared/ui/icons/IconAccount.vue'\n\nconst selectedRoles = defineModel<IRole[]>('selectedRoles')\nconst props = defineProps<{\n  departmentFilters: {\n    dto: IDepartment[]\n    department: IDepartment\n  }\n}>()\nconst emits = defineEmits<{\n  updateSelectedRoles: []\n}>()\n\nconst {\n  roleActions,\n  apiGetRolesByDepartments,\n} = useRole()\n\nconst {\n  actionIsInProgress,\n} = useUi()\n\nconst loading = ref<boolean>(true)\nconst allRoles = ref<IRole[]>([])\n\nconst fetchRoles = async () => {\n  try {\n    const rsp = await apiGetRolesByDepartments(props.departmentFilters.dto)\n    if (rsp) {\n      allRoles.value = rsp.data.roles.filter(\n        (role: IRole) => role.department.id === props.departmentFilters.department.id,\n      )\n    }\n  }\n  catch (e: any) {\n    console.log(e)\n  }\n  finally {\n    loading.value = false\n  }\n}\n\nconst toggleRole = (role: IRole) => {\n  let i = -1\n  if (selectedRoles.value?.length) {\n    i = selectedRoles.value.findIndex((d) => d.id === role.id)\n  }\n  if (i >= 0) {\n    selectedRoles.value?.splice(i, 1)\n  }\n  else {\n    selectedRoles.value?.push(role)\n  }\n}\n\nconst isSelected = (role: IRole) => {\n  return selectedRoles.value!.findIndex((d) => d.id === role.id) >= 0\n}\n\nconst initialLoad = ref<boolean>(true)\nonMounted(async () => {\n  await fetchRoles()\n  initialLoad.value = false\n})\n\nwatch(props.departmentFilters.dto, async () => {\n  if (initialLoad.value) return\n  emits('updateSelectedRoles')\n  await fetchRoles()\n})\n</script>\n\n<template>\n  <div class=\"space-y-4\">\n    <div class=\"flex w-full items-center gap-x-1\">\n      <p class=\"text-sm font-medium text-gray-700\">\n        Roles\n      </p>\n      <ProgressSpinner\n        v-if=\"actionIsInProgress(roleActions.getRolesByDepartments)\"\n        class=\"h-3 w-3 text-blue-500\"\n      />\n    </div>\n    <FeedbackWarning\n      v-if=\"!loading && !allRoles.length\"\n      message=\"Select a department to see roles.\"\n      class=\"w-full\"\n    />\n    <div\n      v-if=\"!loading && allRoles.length\"\n      class=\"relative grid grid-cols-1 gap-3 md:grid-cols-2\"\n    >\n      <div\n        v-for=\"role in allRoles\"\n        :key=\"role.id\"\n        class=\"flex items-start\"\n      >\n        <div class=\"flex h-5 items-center\">\n          <input\n            :id=\"role.id.toString()\"\n            type=\"checkbox\"\n            :checked=\"isSelected(role)\"\n            class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            @change=\"toggleRole(role)\"\n          >\n        </div>\n        <div class=\"ml-2\">\n          <button\n            class=\"flex items-start text-gray-700\"\n            @click.prevent=\"toggleRole(role)\"\n          >\n            <img\n              v-if=\"role.department.logoThumbnailSrc\"\n              :src=\"role.department.logoThumbnailSrc\"\n              class=\"mr-1 h-4 w-4\"\n              alt=\"Department Logo\"\n            >\n            <IconAccount\n              v-else\n              class=\"mr-1 h-4 w-4 fill-gray-400\"\n            />\n            <span class=\"flex flex-col\">\n              <span class=\"flex flex-wrap items-end gap-1\">\n                <span class=\"text-sm leading-none\">{{ role.name }}</span>\n                <span class=\"text-xs font-normal leading-none text-gray-400\">\n                  ({{ role.department?.name }})\n                </span>\n              </span>\n              <span class=\"mt-1 text-left text-xs font-normal text-gray-500\">\n                {{ role.description }}\n              </span>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { useHelpers } from '@/shared/lib/utils/useHelpers'\n\nconst { generateRandomElementId } = useHelpers()\nconst elementId = generateRandomElementId()\n\ndefineProps<{\n  label?: string\n  type?: string\n}>()\n\nconst modelValue = defineModel()\n</script>\n\n<template>\n  <div>\n    <label\n      v-if=\"label\"\n      :for=\"elementId\"\n      class=\"block text-sm font-medium text-gray-700\"\n    >\n      {{ label }}\n    </label>\n    <input\n      :id=\"elementId\"\n      v-model=\"modelValue\"\n      :type=\"type ? type : 'text'\"\n      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n    >\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { onMounted, ref, watch } from 'vue'\nimport { useAbility } from '@/shared/api/abilities/useAbility'\nimport type { IAbility } from '@/shared/types/abilities/IAbility'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\nimport FeedbackWarning from '@/shared/ui/FeedbackWarning.vue'\nimport IconAccount from '@/shared/ui/icons/IconAccount.vue'\n\nconst selectedAbilities = defineModel<IAbility[]>('selectedAbilities')\nconst props = defineProps<{\n  departmentFilters: {\n    dto: IDepartment[]\n    department: IDepartment\n  }\n}>()\nconst emits = defineEmits<{\n  updateSelectedAbilities: []\n}>()\n\nconst {\n  abilityActions,\n  apiGetAbilitiesByDepartments,\n} = useAbility()\n\nconst {\n  actionIsInProgress,\n} = useUi()\n\nconst loading = ref<boolean>(true)\nconst allAbilities = ref<IAbility[]>([])\n\nconst fetchAbilities = async () => {\n  try {\n    const rsp = await apiGetAbilitiesByDepartments(props.departmentFilters.dto)\n    if (rsp) {\n      allAbilities.value = rsp.data.abilities.filter(\n        (ability: IAbility) => ability.department?.id === props.departmentFilters.department.id,\n      )\n    }\n  }\n  catch (e: any) {\n    console.log(e)\n  }\n  finally {\n    loading.value = false\n  }\n}\n\nconst toggleAbility = (abilitie: IAbility) => {\n  let i = -1\n  if (selectedAbilities.value?.length) {\n    i = selectedAbilities.value.findIndex((d) => d.id === abilitie.id)\n  }\n  if (i >= 0) {\n    selectedAbilities.value?.splice(i, 1)\n  }\n  else {\n    selectedAbilities.value?.push(abilitie)\n  }\n}\n\nconst isSelected = (abilitie: IAbility) => {\n  return selectedAbilities.value!.findIndex((d) => d.id === abilitie.id) >= 0\n}\n\nconst initialLoad = ref<boolean>(true)\nonMounted(async () => {\n  await fetchAbilities()\n  initialLoad.value = false\n})\n\nwatch(props.departmentFilters.dto, async () => {\n  if (initialLoad.value) return\n  emits('updateSelectedAbilities')\n  await fetchAbilities()\n})\n</script>\n\n<template>\n  <div\n    v-if=\"allAbilities.length || loading\"\n    class=\"space-y-4\"\n  >\n    <div class=\"flex w-full items-center gap-x-1\">\n      <p class=\"text-sm font-medium text-gray-700\">\n        Abilities\n      </p>\n      <ProgressSpinner\n        v-if=\"actionIsInProgress(abilityActions.getAbilitiesByDepartments)\"\n        class=\"h-3 w-3 text-blue-500\"\n      />\n    </div>\n    <FeedbackWarning\n      v-if=\"!loading && !allAbilities.length\"\n      message=\"Select a department to see abilities.\"\n      class=\"w-full\"\n    />\n    <div\n      v-if=\"!loading && allAbilities.length\"\n      class=\"relative grid grid-cols-1 gap-3 md:grid-cols-2\"\n    >\n      <div\n        v-for=\"ability in allAbilities\"\n        :key=\"ability.id\"\n        class=\"flex items-start\"\n      >\n        <div class=\"flex h-5 items-center\">\n          <input\n            :id=\"ability.id.toString()\"\n            type=\"checkbox\"\n            :checked=\"isSelected(ability)\"\n            class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            @change=\"toggleAbility(ability)\"\n          >\n        </div>\n        <div class=\"ml-2\">\n          <button\n            class=\"flex items-start text-gray-700\"\n            @click.prevent=\"toggleAbility(ability)\"\n          >\n            <span\n              v-if=\"ability.iconUrl\"\n              class=\"mr-1 flex h-5 w-5 items-center justify-center\"\n            >\n              <img\n                :src=\"ability.iconUrl\"\n                alt=\"Ability Icon\"\n              >\n            </span>\n            <IconAccount\n              v-else\n              class=\"mr-1 h-4 w-4\"\n            />\n            <span class=\"flex flex-col text-left\">\n              <span class=\"flex flex-wrap items-end gap-1\">\n                <span class=\"text-sm leading-none\">{{ ability.name }}</span>\n                <span class=\"text-xs font-normal leading-none text-gray-400\">\n                  ({{ ability.department?.name }})\n                </span>\n              </span>\n              <span class=\"mt-1 text-left text-xs font-normal text-gray-500\">\n                {{ ability.description }}\n              </span>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import { ref } from 'vue'\nimport { defineStore } from 'pinia'\nimport type { IPermission } from '@/shared/types/permissions/IPermission'\n\nexport const usePermissionsStore = defineStore('permissions', () => {\n  const permissions = ref<IPermission[]>([])\n\n  function setPermissions(i: IPermission[]) {\n    permissions.value = i\n  }\n\n  function clearPermissions() {\n    permissions.value = []\n  }\n\n  return {\n    setPermissions,\n    permissions,\n    clearPermissions,\n  }\n})\n","import { storeToRefs } from 'pinia'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport { usePermissionsStore } from '@/shared/api/stores/permission'\nimport type { IPermission } from '@/shared/types/permissions/IPermission'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\n\nexport function usePermission() {\n  const { apiClient } = useApiClient()\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    resetActionsInError,\n  } = useUi()\n\n  const {\n    setPermissions,\n  } = usePermissionsStore()\n\n  const { permissions } = storeToRefs(usePermissionsStore())\n\n  const permissionActions = {\n    getPermissionsByDepartments: {\n      id: 'getPermissionsByDepartments',\n      successMessage: 'Permissions retrieved successfully.',\n      errorMessage: 'There was a problem retrieving the permissions.',\n    } as IAction,\n  }\n\n  const apiGetPermissionsByDepartments = async (departments: IDepartment[]) => {\n    resetActionsInError()\n    addToActionsInProgress(permissionActions.getPermissionsByDepartments)\n\n    try {\n      const departmentIds: number[] = []\n      departments?.forEach((department) => {\n        departmentIds.push(department.id)\n      })\n      const rsp = await apiClient.post('/api/permissions/get-by-departments', {\n        departmentIds,\n      })\n      removeFromActionsInProgress(permissionActions.getPermissionsByDepartments)\n      return rsp.data.permissions\n    }\n    catch (e: any) {\n      console.log(e)\n      processActionError(permissionActions.getPermissionsByDepartments, e)\n    }\n  }\n\n  const storeSetPermissions = (p: IPermission[]) => {\n    setPermissions(p)\n  }\n  const storeGetPermissions = (): IPermission[] => {\n    return permissions.value\n  }\n\n  return {\n    apiGetPermissionsByDepartments,\n    storeGetPermissions,\n    storeSetPermissions,\n    permissionActions,\n  }\n}\n","<script setup lang=\"ts\">\nimport { onMounted, ref, watch } from 'vue'\nimport { usePermission } from '@/shared/api/permissions/usePermission'\nimport type { IPermission } from '@/shared/types/permissions/IPermission'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\nimport FeedbackWarning from '@/shared/ui/FeedbackWarning.vue'\n\nconst selectedPermissions = defineModel<{\n  permission: IPermission\n  department: IDepartment\n}[]>('selectedPermissions')\n\nconst props = defineProps<{\n  departmentFilters: IDepartment[]\n}>()\n\nconst emits = defineEmits<{\n  clearSelectedPermissions: []\n}>()\n\nconst {\n  permissionActions,\n  apiGetPermissionsByDepartments,\n} = usePermission()\n\nconst { actionIsInProgress } = useUi()\n\nconst loading = ref<boolean>(true)\nconst allPermissions = ref<IPermission[]>([])\n\nconst fetchPermissions = async () => {\n  try {\n    allPermissions.value = await apiGetPermissionsByDepartments(props.departmentFilters)\n  }\n  catch (e: any) {\n    console.log(e)\n  }\n  finally {\n    loading.value = false\n  }\n}\n\nconst togglePermission = (\n  permission: IPermission,\n  department: IDepartment,\n) => {\n  const permissionIndex = selectedPermissions.value!.findIndex((pd) =>\n    pd.permission.id === permission.id && pd.department.id === department.id,\n  )\n\n  if (permissionIndex >= 0) {\n    selectedPermissions.value?.splice(permissionIndex, 1)\n  }\n  else {\n    selectedPermissions.value?.push({ permission, department })\n  }\n}\n\nconst isSelected = (permission: IPermission, department: IDepartment) => {\n  return selectedPermissions.value?.some((sp) =>\n    sp.permission.id === permission.id\n    && sp.department.id === department.id,\n  )\n}\n\nonMounted(async () => {\n  await fetchPermissions()\n})\n\nwatch(props.departmentFilters, async () => {\n  emits('clearSelectedPermissions')\n  allPermissions.value = []\n  await fetchPermissions()\n})\n</script>\n\n<template>\n  <div class=\"space-y-4\">\n    <div class=\"flex w-full items-center gap-x-1\">\n      <p class=\"text-sm font-medium text-gray-700\">\n        Permissions\n      </p>\n      <ProgressSpinner\n        v-if=\"actionIsInProgress(permissionActions.getPermissionsByDepartments)\"\n        class=\"h-3 w-3 text-blue-500\"\n      />\n    </div>\n    <FeedbackWarning\n      v-if=\"!loading && !allPermissions.length\"\n      message=\"Select a department to see permissions.\"\n      class=\"w-full\"\n    />\n    <div\n      v-if=\"!loading && allPermissions.length\"\n      class=\"relative grid grid-cols-1 gap-3 md:grid-cols-2\"\n    >\n      <div\n        v-for=\"permission in allPermissions\"\n        :key=\"permission.id\"\n      >\n        <p\n          class=\"text-sm text-gray-700\"\n          v-text=\"permission.label\"\n        />\n        <p\n          class=\"mb-2 text-xs text-gray-500\"\n          v-text=\"permission.description\"\n        />\n        <div\n          v-for=\"department in permission.departments\"\n          :key=\"department.id\"\n          class=\"flex items-center\"\n        >\n          <template v-if=\"departmentFilters.some(filter => filter.id === department.id)\">\n            <div class=\"flex h-5 items-center\">\n              <input\n                :id=\"department.id.toString()\"\n                type=\"checkbox\"\n                :checked=\"isSelected(permission, department)\"\n                class=\"h-4 w-4 cursor-pointer rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                @change=\"togglePermission(permission, department)\"\n              >\n            </div>\n            <button\n              class=\"ml-2 text-xs text-gray-700\"\n              @click.prevent=\"togglePermission(permission, department)\"\n            >\n              {{ department.name }}\n            </button>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"],"names":["useUploadImage","apiClient","useApiClient","addToActionsInProgress","processActionError","processActionSuccess","resetActionsInError","resetActionsInSuccess","useUi","uploadImageActions","image","imageStorageDirectory","formData","rsp","e","uploadImage","actionIsInProgress","emit","__emit","imgPath","ref","createImage","file","reader","onFileChange","files","paths","__props","selectedRoles","_useModel","props","emits","roleActions","apiGetRolesByDepartments","useRole","loading","allRoles","fetchRoles","role","toggleRole","i","_a","d","_b","_c","isSelected","initialLoad","onMounted","watch","generateRandomElementId","useHelpers","elementId","modelValue","selectedAbilities","abilityActions","apiGetAbilitiesByDepartments","useAbility","allAbilities","fetchAbilities","ability","toggleAbility","abilitie","usePermissionsStore","defineStore","permissions","setPermissions","clearPermissions","usePermission","removeFromActionsInProgress","storeToRefs","permissionActions","departments","departmentIds","department","p","selectedPermissions","apiGetPermissionsByDepartments","allPermissions","fetchPermissions","togglePermission","permission","permissionIndex","pd","sp"],"mappings":"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"}