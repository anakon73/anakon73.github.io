{"version":3,"file":"api-B2HcjM2j.js","sources":["../../src/shared/api/user/normalizers.ts","../../src/shared/api/user/api.ts"],"sourcesContent":["import type { z } from 'zod'\nimport { objectPick } from '@antfu/utils'\n\nimport type { User } from '@/shared/types'\nimport type { UserSchema } from '../schemas'\n\nexport function normalizeUser(user: z.infer<typeof UserSchema>): User {\n  const { contactNumber } = user\n\n  return {\n    ...objectPick(user, ['id', 'name', 'email', 'avatar']),\n    phone: contactNumber,\n  }\n}\n","import {\n  type ApiEndpointsAndSchemas,\n  PaginatedResponse,\n  client,\n  definePaginatedFetcher,\n} from '../lib'\n\nimport { UserSchema } from '../schemas'\nimport { normalizeUser } from './normalizers'\n\nexport const endpoints = {\n  getAll: {\n    url: '/v1/users',\n    method: 'get',\n    schema: PaginatedResponse(UserSchema),\n  },\n} satisfies ApiEndpointsAndSchemas\n\nexport { endpoints as userEndpoints }\n\nexport const getUsers = definePaginatedFetcher(async (page) => {\n  const { url, method, schema } = endpoints.getAll\n\n  const queryParams = new URLSearchParams({ page: page.toString() }).toString()\n\n  const { data, ...rest } = await client[method](`${url}?${queryParams}`, schema)\n\n  return { data: data.map(normalizeUser), ...rest }\n})\n"],"names":["normalizeUser","user","contactNumber","objectPick","endpoints","PaginatedResponse","UserSchema","getUsers","definePaginatedFetcher","page","url","method","schema","queryParams","data","rest","client"],"mappings":"uGAMO,SAASA,EAAcC,EAAwC,CAC9D,KAAA,CAAE,cAAAC,CAAkB,EAAAD,EAEnB,MAAA,CACL,GAAGE,EAAWF,EAAM,CAAC,KAAM,OAAQ,QAAS,QAAQ,CAAC,EACrD,MAAOC,CAAA,CAEX,CCHO,MAAME,EAAY,CACvB,OAAQ,CACN,IAAK,YACL,OAAQ,MACR,OAAQC,EAAkBC,CAAU,CACtC,CACF,EAIaC,EAAWC,EAAuB,MAAOC,GAAS,CAC7D,KAAM,CAAE,IAAAC,EAAK,OAAAC,EAAQ,OAAAC,CAAA,EAAWR,EAAU,OAEpCS,EAAc,IAAI,gBAAgB,CAAE,KAAMJ,EAAK,SAAS,CAAA,CAAG,EAAE,WAE7D,CAAE,KAAAK,EAAM,GAAGC,CAAA,EAAS,MAAMC,EAAOL,CAAM,EAAE,GAAGD,CAAG,IAAIG,CAAW,GAAID,CAAM,EAE9E,MAAO,CAAE,KAAME,EAAK,IAAId,CAAa,EAAG,GAAGe,EAC7C,CAAC"}