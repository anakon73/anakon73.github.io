{"version":3,"file":"PCheckbox.stories-jbdYzhM6.js","sources":["../../src/shared/ui/PCheckbox/PCheckbox.vue"],"sourcesContent":["<script setup lang=\"ts\" generic=\"TModel extends CheckboxValue, TValue extends TModel\">\nimport { type InputHTMLAttributes, toRefs } from 'vue'\nimport { useVModel } from '@vueuse/core'\n\nimport { type ClassValue, cn } from '@/shared/lib/style'\nimport { useId } from '@/shared/lib/composables/useId'\n\nexport type CheckboxValue =\n  | readonly unknown[]\n  | ReadonlySet<unknown>\n  | boolean\n  | string\n  | Readonly<Record<string, unknown>>\n  | number\n\nexport interface Props<\n  TModel extends CheckboxValue, TValue extends TModel,\n> extends /* @vue-ignore */ InputHTMLAttributes {\n  id?: string\n  class?: ClassValue\n  modelValue?: TModel | readonly TModel[]\n  value?: TValue\n  rootClass?: ClassValue\n  inline?: boolean\n  rightLabel?: boolean\n}\n\nexport type Emits<TValue extends CheckboxValue> = {\n  'update:modelValue': [value: TValue]\n}\n\nexport interface Slots {\n  default?: () => any\n  description?: () => any\n}\n\ndefineOptions({ inheritAttrs: false })\n\nconst props = defineProps<Props<TModel, TValue>>()\n\nconst emit = defineEmits<Emits<TValue>>()\n\nconst $slots = defineSlots<Slots>()\n\nconst { id } = toRefs(props)\n\nconst vModel = useVModel(props, 'modelValue', emit)\n\nconst computedId = useId(id)\n</script>\n\n<template>\n  <div\n    :class=\"cn(\n      'flex items-start gap-3',\n      rightLabel && 'flex-row-reverse',\n      props.rootClass ?? '',\n    )\"\n  >\n    <input\n      v-bind=\"$attrs\"\n      :id=\"computedId\"\n      v-model=\"vModel\"\n      :value=\"value\"\n      :class=\"cn([\n        `size-4 cursor-pointer rounded border-gray-300\n        text-indigo-600 focus:ring-indigo-600`,\n      ], props.class)\"\n      type=\"checkbox\"\n    >\n\n    <div\n      v-if=\"$slots.default || $slots.description\"\n      :class=\"inline ? 'gap-1' : ' flex-col gap-2'\"\n      class=\"flex flex-wrap text-sm leading-4\"\n    >\n      <label v-if=\"$slots.default\" :for=\"computedId\" class=\"font-medium text-gray-900\">\n        <slot />\n      </label>\n\n      <p v-if=\"$slots.description\" class=\"text-gray-500\">\n        <slot name=\"description\" />\n      </p>\n    </div>\n  </div>\n</template>\n"],"names":["props","__props","emit","__emit","$slots","_useSlots","id","toRefs","vModel","useVModel","computedId","useId"],"mappings":"sfAsCA,MAAMA,EAAQC,EAERC,EAAOC,EAEPC,EAASC,IAET,CAAE,GAAAC,CAAA,EAAOC,EAAOP,CAAK,EAErBQ,EAASC,GAAUT,EAAO,aAAcE,CAAI,EAE5CQ,EAAaC,GAAML,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}