{"version":3,"file":"useAuth-8d_1_S6I.js","sources":["../../src/shared/api/useAuth.ts"],"sourcesContent":["import type { Ref } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport type { Router } from 'vue-router/auto'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport { useUserStore } from '@/shared/api/stores/user'\nimport { useUi } from '@/shared/lib/composables/useUi'\n\nimport type { IAction } from '@/shared/types/api/IAction'\nimport type { IUser } from '@/shared/types/user/IUser'\nimport type { IUserPermission } from '@/shared/types/permissions/IPermission'\nimport type { IAbility } from '@/shared/types/abilities/IAbility'\nimport type { AppPermissions } from '@/shared/types/enums/permissions/permissions'\nimport type { IDepartment } from '@/shared/types/departments/IDepartments'\n\nimport { Routes } from '@/shared/lib/router'\n\nexport function useAuth() {\n  const { apiClient } = useApiClient()\n  const { storeSetUser } = useUserStore()\n  const { addToActionsInProgress, removeFromActionsInProgress, processActionError, resetActionsInError } = useUi()\n  const { user } = storeToRefs(useUserStore())\n\n  const authActions = {\n    attemptLogin: {\n      id: 'attemptLogin',\n      successMessage: 'Successfully logged in.',\n      errorMessage: 'There was an error logging in.',\n    } as IAction,\n    logout: {\n      id: 'logout',\n      successMessage: 'Successfully logged out.',\n      errorMessage: 'There was an error logging out.',\n    } as IAction,\n  }\n  const attemptLogin = async (\n    email: string,\n    password: string,\n    router: Router,\n  ) => {\n    /**\n     * We clear the actions in error so that any error response from\n     * a previous attempt to login is cleared.\n     */\n    resetActionsInError()\n    addToActionsInProgress(authActions.attemptLogin)\n\n    try {\n      await apiClient.get('/sanctum/csrf-cookie')\n\n      const rsp = await apiClient.post('/api/login', {\n        email,\n        password,\n      })\n\n      if (rsp) {\n        storeSetUser(rsp.data.user)\n        /**\n         * TODO\n         * Where to redirect the user to shouldn't depend on their role alone.\n         * Refactor this.\n         */\n        // const redirectTo = user.value?.role.slug === \"guest\" ? \"/dashboard\" : \"/schedule\"\n        await router.push({ name: Routes.Schedule })\n      }\n\n      removeFromActionsInProgress(authActions.attemptLogin)\n    }\n    catch (e: unknown) {\n      console.log(e)\n      processActionError(authActions.attemptLogin, e)\n    }\n  }\n\n  const setUserToCurrentlyAuthenticatedUser = async (): Promise<Ref<IUser | null>> => {\n    try {\n      const rsp = await apiClient.get('/api/user')\n      storeSetUser(rsp.data.user)\n    }\n    catch (e) {\n      storeSetUser(null)\n    }\n    return user\n  }\n\n  const logout = async (router: Router) => {\n    addToActionsInProgress(authActions.logout)\n\n    try {\n      await apiClient.post('/api/logout')\n      storeSetUser(null)\n      await router.push({ name: Routes.Login })\n      removeFromActionsInProgress(authActions.logout)\n    }\n    catch (e: unknown) {\n      processActionError(authActions.logout, e)\n    }\n  }\n\n  /**\n   * Checks if the user has a permission in any of their departments.\n   * This is useful for protecting views and filtering navigational menus.\n   *\n   * @param permission\n   */\n  const userHasPermissionInSomeDepartment = (permission: AppPermissions): boolean => {\n    if (user.value) {\n      return user.value.permissions.some((userPermission: IUserPermission) => {\n        try {\n          return userPermission.permission.slug === permission\n        }\n        catch (e) {\n          // @ts-expect-error - Allows for the incompatibility of new backend.\n          return userPermission.permissions.includes(permission)\n        }\n      })\n    }\n    return false\n  }\n\n  /**\n   * Checks if the user has any of the given permissions in a specific department.\n   * This is useful for removing components from views and filtering navigational menus.\n   *\n   * @param permissions\n   * @param department\n   */\n  const userHasSomePermissionsInDepartment = (\n    permissions: AppPermissions[],\n    department: IDepartment,\n  ): boolean => {\n    if (user.value) {\n      return user.value.permissions.some((userPermission: IUserPermission) => {\n        try {\n          return permissions.includes(userPermission.permission.slug)\n            && userPermission.department.id === department.id\n        }\n        catch (e) {\n          return permissions.some((permission: AppPermissions) => {\n            // @ts-expect-error - Allows for the incompatibility of new backend.\n            return userPermission.permissions.includes(permission)\n              && userPermission.department.id === department.id\n          })\n        }\n      })\n    }\n    return false\n  }\n\n  const userHasPermissionInDepartment = (\n    permission: AppPermissions,\n    department: IDepartment,\n  ): boolean => {\n    if (user.value) {\n      try {\n        return user.value.permissions.some((userPermission: IUserPermission) => {\n          return userPermission.permission.slug === permission\n            && userPermission.department.id === department.id\n        })\n      }\n      catch (e) {\n        return user.value.permissions.some((userPermission: IUserPermission) => {\n          // @ts-expect-error - Allows for the incompatibility of new backend.\n          return userPermission.permissions.includes(permission)\n            && userPermission.department.id === department.id\n        })\n      }\n    }\n    return false\n  }\n\n  const userHasAbility = (abilitySlug: string): boolean => {\n    if (user.value) {\n      return user.value.allAbilities.some((userAbility: IAbility) => userAbility.slug === abilitySlug)\n    }\n    return false\n  }\n\n  return {\n    authActions,\n    user,\n    attemptLogin,\n    logout,\n    setUserToCurrentlyAuthenticatedUser,\n    userHasAbility,\n    userHasPermissionInSomeDepartment,\n    userHasSomePermissionsInDepartment,\n    userHasPermissionInDepartment,\n  }\n}\n"],"names":["useAuth","apiClient","useApiClient","storeSetUser","useUserStore","addToActionsInProgress","removeFromActionsInProgress","processActionError","resetActionsInError","useUi","user","storeToRefs","authActions","email","password","router","rsp","Routes","e","abilitySlug","userAbility","permission","userPermission","permissions","department"],"mappings":"2IAgBO,SAASA,GAAU,CAClB,KAAA,CAAE,UAAAC,GAAcC,IAChB,CAAE,aAAAC,GAAiBC,IACnB,CAAE,uBAAAC,EAAwB,4BAAAC,EAA6B,mBAAAC,EAAoB,oBAAAC,CAAA,EAAwBC,IACnG,CAAE,KAAAC,CAAS,EAAAC,EAAYP,EAAc,CAAA,EAErCQ,EAAc,CAClB,aAAc,CACZ,GAAI,eACJ,eAAgB,0BAChB,aAAc,gCAChB,EACA,OAAQ,CACN,GAAI,SACJ,eAAgB,2BAChB,aAAc,iCAChB,CAAA,EAiJK,MAAA,CACL,YAAAA,EACA,KAAAF,EACA,aAlJmB,MACnBG,EACAC,EACAC,IACG,CAKiBP,IACpBH,EAAuBO,EAAY,YAAY,EAE3C,GAAA,CACI,MAAAX,EAAU,IAAI,sBAAsB,EAE1C,MAAMe,EAAM,MAAMf,EAAU,KAAK,aAAc,CAC7C,MAAAY,EACA,SAAAC,CAAA,CACD,EAEGE,IACWb,EAAAa,EAAI,KAAK,IAAI,EAO1B,MAAMD,EAAO,KAAK,CAAE,KAAME,EAAO,SAAU,GAG7CX,EAA4BM,EAAY,YAAY,QAE/CM,EAAY,CACjB,QAAQ,IAAIA,CAAC,EACMX,EAAAK,EAAY,aAAcM,CAAC,CAChD,CAAA,EA+GA,OAjGa,MAAOH,GAAmB,CACvCV,EAAuBO,EAAY,MAAM,EAErC,GAAA,CACI,MAAAX,EAAU,KAAK,aAAa,EAClCE,EAAa,IAAI,EACjB,MAAMY,EAAO,KAAK,CAAE,KAAME,EAAO,MAAO,EACxCX,EAA4BM,EAAY,MAAM,QAEzCM,EAAY,CACEX,EAAAK,EAAY,OAAQM,CAAC,CAC1C,CAAA,EAuFA,oCA7G0C,SAAwC,CAC9E,GAAA,CACF,MAAMF,EAAM,MAAMf,EAAU,IAAI,WAAW,EAC9BE,EAAAa,EAAI,KAAK,IAAI,OAElB,CACRb,EAAa,IAAI,CACnB,CACO,OAAAO,CAAA,EAsGP,eAbsBS,GAClBT,EAAK,MACAA,EAAK,MAAM,aAAa,KAAMU,GAA0BA,EAAY,OAASD,CAAW,EAE1F,GAUP,kCAhFyCE,GACrCX,EAAK,MACAA,EAAK,MAAM,YAAY,KAAMY,GAAoC,CAClE,GAAA,CACK,OAAAA,EAAe,WAAW,OAASD,OAElC,CAED,OAAAC,EAAe,YAAY,SAASD,CAAU,CACvD,CAAA,CACD,EAEI,GAqEP,mCA3DyC,CACzCE,EACAC,IAEId,EAAK,MACAA,EAAK,MAAM,YAAY,KAAMY,GAAoC,CAClE,GAAA,CACK,OAAAC,EAAY,SAASD,EAAe,WAAW,IAAI,GACrDA,EAAe,WAAW,KAAOE,EAAW,QAEzC,CACD,OAAAD,EAAY,KAAMF,GAEhBC,EAAe,YAAY,SAASD,CAAU,GAChDC,EAAe,WAAW,KAAOE,EAAW,EAClD,CACH,CAAA,CACD,EAEI,GAyCP,8BAtCoC,CACpCH,EACAG,IACY,CACZ,GAAId,EAAK,MACH,GAAA,CACF,OAAOA,EAAK,MAAM,YAAY,KAAMY,GAC3BA,EAAe,WAAW,OAASD,GACrCC,EAAe,WAAW,KAAOE,EAAW,EAClD,OAEO,CACR,OAAOd,EAAK,MAAM,YAAY,KAAMY,GAE3BA,EAAe,YAAY,SAASD,CAAU,GAChDC,EAAe,WAAW,KAAOE,EAAW,EAClD,CACH,CAEK,MAAA,EAAA,CAmBP,CAEJ"}