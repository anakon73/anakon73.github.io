{"version":3,"file":"Index-xv_JubAK.js","sources":["../../src/pages/incidents/Index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { CheckIcon, ChevronUpDownIcon } from '@heroicons/vue/20/solid'\nimport { Listbox, ListboxButton, ListboxOption, ListboxOptions } from '@headlessui/vue'\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\nimport MainContent from '@/shared/ui/layout/MainContent.vue'\nimport { useIncident } from '@/shared/api/useIncident'\nimport { useUi } from '@/shared/lib/composables/useUi'\nimport ProgressSpinner from '@/shared/ui/ProgressSpinner.vue'\n\nimport { IncidentLevel, incidentSortCategories } from '@/shared/config'\nimport { AppPermissions } from '@/shared/types/enums/permissions/permissions'\nimport { useAuth } from '@/shared/api/useAuth'\n\nconst {\n  getAllIncidentsFromStore,\n  fetchAndStoreIncidentsIndex,\n  incidentActions,\n  resetIncidentStore,\n} = useIncident()\nconst { actionIsInProgress } = useUi()\n\nconst filteredIncidents = computed(() => getAllIncidentsFromStore())\n\nconst sortBy = ref(incidentSortCategories[0])\n\nconst {\n  userHasPermissionInDepartment,\n  user,\n} = useAuth()\n\nconst sortedIncidents = computed(() => {\n  const incidents = [...filteredIncidents.value]\n\n  if (sortBy.value.value === 'date') {\n    return incidents.sort((a, b) => {\n      const dateAInMilliseconds = new Date(a.date_of_departure_raw).getTime()\n      const dateBInMilliseconds = new Date(b.date_of_departure_raw).getTime()\n      return dateBInMilliseconds - dateAInMilliseconds\n    })\n  }\n  else if (sortBy.value.value === 'incident_level') {\n    return incidents.sort((a, b) => {\n      const incidentLevelA = a.incident_level === IncidentLevel.NearMiss ? 0 : Number.parseInt(a.incident_level)\n      const incidentLevelB = b.incident_level === IncidentLevel.NearMiss ? 0 : Number.parseInt(b.incident_level)\n      return incidentLevelB - incidentLevelA\n    })\n  }\n  else if (sortBy.value.value === 'staff_involved') {\n    return incidents.sort((a, b) => a.staff_member_involved.fullName > b.staff_member_involved.fullName ? -1 : 1)\n  }\n\n  return incidents\n})\n\nconst pagination = ref({\n  lastItem: 0,\n  firstItem: 0,\n  total: 0,\n  currentPage: 1,\n  nextPage: 0,\n  previousPage: 0,\n  lastPage: 0,\n})\n\nconst movePage = async (pageNumber: number) => {\n  const paginatedIncidents = await fetchAndStoreIncidentsIndex(pageNumber)\n  pagination.value.total = paginatedIncidents.total\n  pagination.value.currentPage = paginatedIncidents.currentPage\n  pagination.value.nextPage = paginatedIncidents.nextPage\n  pagination.value.previousPage = paginatedIncidents.previousPage\n  pagination.value.lastPage = paginatedIncidents.lastPage\n  pagination.value.lastItem = paginatedIncidents.lastItem\n  pagination.value.firstItem = paginatedIncidents.firstItem\n}\nonMounted(() => {\n  movePage(1)\n})\nonUnmounted(() => {\n  resetIncidentStore()\n})\n</script>\n\n<template>\n  <MainContent main-content-title=\"Manage Incidents\">\n    <div class=\"mt-12 flex w-full justify-between gap-3\">\n      <div class=\"flex w-1/2 items-center md:w-40\">\n        <Listbox v-model=\"sortBy\" as=\"div\" class=\"w-full\">\n          <div class=\"relative w-full\">\n            <ListboxButton class=\"relative w-full cursor-default rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 sm:text-sm\">\n              <span class=\"block truncate\">{{ sortBy.label }}</span>\n              <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              </span>\n            </ListboxButton>\n\n            <Transition leave-active-class=\"transition ease-in duration-100\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n              <ListboxOptions class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black/5 focus:outline-none sm:text-sm\">\n                <ListboxOption\n                  v-for=\"sort in incidentSortCategories\"\n                  :key=\"sort.label\"\n                  v-slot=\"{ active, selected }\"\n                  as=\"template\"\n                  :value=\"sort\"\n                >\n                  <li class=\"relative cursor-default select-none py-2 pl-3 pr-9\" :class=\"[active ? 'bg-blue-600 text-white' : 'text-gray-900']\">\n                    <span class=\"block truncate\" :class=\"[selected ? 'font-semibold' : 'font-normal']\">\n                      {{ sort.label }}\n                    </span>\n\n                    <span v-if=\"selected\" class=\"absolute inset-y-0 right-0 flex items-center pr-4\" :class=\"[active ? 'text-white' : 'text-blue-600']\">\n                      <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </span>\n                  </li>\n                </ListboxOption>\n              </ListboxOptions>\n            </Transition>\n          </div>\n        </Listbox>\n      </div>\n\n      <RouterLink\n        v-if=\"userHasPermissionInDepartment(\n          AppPermissions.MANAGE_INCIDENTS,\n          user?.departments.find((department) => department.primary)!,\n        )\"\n        :to=\"{ name: $Routes.IncidentCreate }\"\n        class=\"flex w-1/2 items-center justify-center rounded-md bg-blue-600 px-3 py-1.5 text-center text-sm font-semibold leading-6 text-white shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600 hover:bg-blue-500 md:w-48\"\n      >\n        Add Incident\n      </RouterLink>\n    </div>\n\n    <div\n      v-if=\"!actionIsInProgress(incidentActions.getAllIncidents)\"\n      class=\"mt-6 flex items-center justify-between border-y border-gray-200 bg-white py-3 sm:px-3\"\n    >\n      <div class=\"flex w-full justify-between sm:hidden\">\n        <button\n          class=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\n          @click=\"movePage(pagination.previousPage)\"\n        >\n          Previous\n        </button>\n        <button\n          class=\"relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\n          @click=\"movePage(pagination.nextPage)\"\n        >\n          Next\n        </button>\n      </div>\n      <div class=\"hidden sm:flex sm:flex-1 sm:items-center sm:justify-between\">\n        <div>\n          <p class=\"text-sm text-gray-700\">\n            Showing\n            <span class=\"font-medium\">\n              {{ pagination.firstItem }}\n            </span>\n            to\n            <span class=\"font-medium\">\n              {{ pagination.lastItem }}\n            </span>\n            of\n            <span class=\"font-medium\">\n              {{ pagination.total }}\n            </span>\n            incidents.\n          </p>\n        </div>\n        <div>\n          <nav class=\"isolate inline-flex -space-x-px rounded-md shadow-sm\" aria-label=\"Pagination\">\n            <button\n              class=\"relative inline-flex items-center rounded-l-md p-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0 hover:bg-gray-50\"\n              @click=\"movePage(pagination.previousPage)\"\n            >\n              <svg\n                class=\"h-5 w-5\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path fill-rule=\"evenodd\" d=\"M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n            <!-- Current: \"z-10 bg-blue-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600\", Default: \"\" -->\n\n            <button\n              v-if=\"pagination.currentPage > 3\"\n              class=\"relative z-10 inline-flex items-center px-4 py-2 text-sm text-gray-900 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 hover:bg-gray-50\"\n              @click=\"movePage(1)\"\n            >\n              1...\n            </button>\n\n            <template\n              v-for=\"i in pagination.lastPage\"\n              :key=\"i\"\n            >\n              <button\n                v-if=\"i > pagination.currentPage - 3 && i <= pagination.currentPage || i <= pagination.currentPage + 3 && i >= pagination.currentPage\"\n                class=\"relative z-10 inline-flex items-center px-4 py-2 text-sm font-semibold focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2\"\n                :class=\"i === pagination.currentPage ? 'text-white bg-blue-600 focus-visible:outline-blue-600' : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50'\"\n                @click=\"movePage(i)\"\n              >\n                {{ i }}\n              </button>\n              <span\n                v-if=\"i === pagination.currentPage\"\n                class=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300 focus:outline-offset-0\"\n              >\n                ...\n              </span>\n            </template>\n\n            <!--\n            <a href=\"#\" class=\"relative hidden items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 md:inline-flex\">8</a>\n            <a href=\"#\" class=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0\">9</a>\n            -->\n\n            <button\n              v-if=\"pagination.currentPage < pagination.lastPage - 3\"\n              class=\"relative z-10 inline-flex items-center px-4 py-2 text-sm text-gray-900 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 hover:bg-gray-50\"\n              @click=\"movePage(pagination.lastPage)\"\n            >\n              ...{{ pagination.lastPage }}\n            </button>\n\n            <button\n              class=\"relative inline-flex items-center rounded-r-md p-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0 hover:bg-gray-50\"\n              @click=\"movePage(pagination.nextPage)\"\n            >\n              <svg\n                class=\"h-5 w-5\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n          </nav>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex flex-col pb-4\">\n      <div class=\"mt-8 flow-root\">\n        <div class=\"overflow-x-auto\">\n          <div class=\"inline-block min-w-full py-2 align-middle\">\n            <div\n              v-if=\"actionIsInProgress(incidentActions.getAllIncidents)\"\n              class=\"flex h-[50px] items-center justify-center rounded border border-gray-100 bg-gray-50 shadow\"\n            >\n              <ProgressSpinner class=\"h-5 w-5 text-blue-600\" />\n            </div>\n\n            <div\n              v-else\n            >\n              <table class=\"min-w-full divide-y divide-gray-300 rounded border border-gray-100 bg-white shadow\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Level\n                    </th>\n                    <th scope=\"col\" class=\"bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Time & Date\n                    </th>\n                    <th scope=\"col\" class=\"bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Departure\n                    </th>\n                    <th scope=\"col\" class=\"bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Guide Involved\n                    </th>\n                    <th scope=\"col\" colspan=\"2\" class=\"bg-gray-50 px-3 py-3.5\" />\n                  </tr>\n                </thead>\n                <tbody class=\"divide-y divide-gray-200\">\n                  <tr\n                    v-for=\"incident in sortedIncidents\"\n                    :key=\"incident.id\"\n                  >\n                    <td class=\"flex items-center whitespace-nowrap p-3 text-sm font-medium text-gray-900\">\n                      {{ incident.incident_level }}\n                    </td>\n                    <td class=\"whitespace-nowrap p-3 text-sm text-gray-500\">\n                      {{ incident.date_and_time_of_departure }}\n                    </td>\n                    <td class=\"whitespace-nowrap p-3 text-sm text-gray-500\">\n                      {{ incident.name_of_departure }}\n                    </td>\n                    <td class=\"whitespace-nowrap p-3 text-sm text-gray-500\">\n                      {{ incident.staff_member_involved.fullName }}\n                    </td>\n                    <td class=\"relative whitespace-nowrap p-3 text-right text-sm font-medium\">\n                      <RouterLink\n                        v-if=\"userHasPermissionInDepartment(\n                          AppPermissions.MANAGE_INCIDENTS,\n                          user?.departments.find((department) => department.primary)!,\n                        )\"\n                        :to=\"{\n                          name: $Routes.IncidentEdit,\n                          params: { incidentId: incident.id },\n                        }\"\n                        class=\"text-blue-600 hover:text-blue-900\"\n                      >\n                        View\n                      </RouterLink>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </MainContent>\n</template>\n"],"names":["getAllIncidentsFromStore","fetchAndStoreIncidentsIndex","incidentActions","resetIncidentStore","useIncident","actionIsInProgress","useUi","filteredIncidents","computed","sortBy","ref","incidentSortCategories","userHasPermissionInDepartment","user","useAuth","sortedIncidents","incidents","a","b","dateAInMilliseconds","incidentLevelA","IncidentLevel","pagination","movePage","pageNumber","paginatedIncidents","onMounted","onUnmounted"],"mappings":"w7KAaM,KAAA,CACJ,yBAAAA,EACA,4BAAAC,EACA,gBAAAC,EACA,mBAAAC,GACEC,EAAY,EACV,CAAE,mBAAAC,GAAuBC,IAEzBC,EAAoBC,EAAS,IAAMR,EAA0B,CAAA,EAE7DS,EAASC,EAAIC,EAAuB,CAAC,CAAC,EAEtC,CACJ,8BAAAC,EACA,KAAAC,GACEC,EAAQ,EAENC,EAAkBP,EAAS,IAAM,CACrC,MAAMQ,EAAY,CAAC,GAAGT,EAAkB,KAAK,EAEzC,OAAAE,EAAO,MAAM,QAAU,OAClBO,EAAU,KAAK,CAACC,EAAGC,IAAM,CAC9B,MAAMC,EAAsB,IAAI,KAAKF,EAAE,qBAAqB,EAAE,UAE9D,OAD4B,IAAI,KAAKC,EAAE,qBAAqB,EAAE,UACjCC,CAAA,CAC9B,EAEMV,EAAO,MAAM,QAAU,iBACvBO,EAAU,KAAK,CAACC,EAAGC,IAAM,CACxB,MAAAE,EAAiBH,EAAE,iBAAmBI,EAAc,SAAW,EAAI,OAAO,SAASJ,EAAE,cAAc,EAEzG,OADuBC,EAAE,iBAAmBG,EAAc,SAAW,EAAI,OAAO,SAASH,EAAE,cAAc,GACjFE,CAAA,CACzB,EAEMX,EAAO,MAAM,QAAU,iBACvBO,EAAU,KAAK,CAACC,EAAGC,IAAMD,EAAE,sBAAsB,SAAWC,EAAE,sBAAsB,SAAW,GAAK,CAAC,EAGvGF,CAAA,CACR,EAEKM,EAAaZ,EAAI,CACrB,SAAU,EACV,UAAW,EACX,MAAO,EACP,YAAa,EACb,SAAU,EACV,aAAc,EACd,SAAU,CAAA,CACX,EAEKa,EAAW,MAAOC,GAAuB,CACvC,MAAAC,EAAqB,MAAMxB,EAA4BuB,CAAU,EAC5DF,EAAA,MAAM,MAAQG,EAAmB,MACjCH,EAAA,MAAM,YAAcG,EAAmB,YACvCH,EAAA,MAAM,SAAWG,EAAmB,SACpCH,EAAA,MAAM,aAAeG,EAAmB,aACxCH,EAAA,MAAM,SAAWG,EAAmB,SACpCH,EAAA,MAAM,SAAWG,EAAmB,SACpCH,EAAA,MAAM,UAAYG,EAAmB,SAAA,EAElD,OAAAC,EAAU,IAAM,CACdH,EAAS,CAAC,CAAA,CACX,EACDI,EAAY,IAAM,CACGxB,GAAA,CACpB"}