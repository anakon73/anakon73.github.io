{"version":3,"file":"useVehicle-nrY-7Tml.js","sources":["../../src/shared/api/stores/vehicle.ts","../../src/shared/types/api/http-methods.ts","../../src/shared/api/useApiRequest.ts","../../src/shared/api/useVehicle.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { defineStore } from 'pinia'\nimport type { IVehicle } from '@/shared/types/vehicles/IVehicle'\n\nexport const useVehicleStore = defineStore('vehicle', () => {\n  const storeVehicles = ref<IVehicle[]>([])\n\n  function storeSetVehicles(vehicles: IVehicle[]) {\n    storeVehicles.value = vehicles\n  }\n\n  function storeAddVehicleToIndex(i: IVehicle) {\n    storeVehicles.value.push(i)\n  }\n\n  function storeRemoveVehicleFromIndex(i: IVehicle) {\n    const index = storeVehicles.value.findIndex((vehicle) => vehicle.id === i.id)\n    if (index !== -1) {\n      storeVehicles.value.splice(index, 1)\n    }\n  }\n\n  function storeUpdateVehicleInIndex(i: IVehicle) {\n    const index = storeVehicles.value.findIndex((vehicle) => vehicle.id === i.id)\n    storeVehicles.value[index] = i\n  }\n\n  function storeClearAllVehicles() {\n    storeVehicles.value = []\n  }\n\n  return {\n    storeVehicles,\n    storeSetVehicles,\n    storeAddVehicleToIndex,\n    storeUpdateVehicleInIndex,\n    storeClearAllVehicles,\n    storeRemoveVehicleFromIndex,\n  }\n})\n","export enum HttpMethods {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n}\n","import type { AxiosRequestConfig, AxiosResponse, Method } from 'axios'\nimport { useApiClient } from '@/shared/api/useApiClient'\nimport { useUi } from '@/shared/lib/composables/useUi'\n\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { HttpMethods } from '@/shared/types/api/http-methods'\n\nexport const useApiRequest = () => {\n  const { apiClient } = useApiClient()\n\n  const {\n    addToActionsInProgress,\n    removeFromActionsInProgress,\n    processActionError,\n    addToActionsInSuccess,\n  } = useUi()\n\n  /**\n   * Handles returning correct request method when calling apiRequest\n   */\n  const handleApiClientMethod = ({ method, url, data, config }: { method: Method; url: string; data?: {}; config?: AxiosRequestConfig }): Promise<AxiosResponse> => {\n    switch (method) {\n      case HttpMethods.GET:\n        return apiClient.get(url, config)\n\n      case HttpMethods.POST:\n        return apiClient.post(url, data, config)\n\n      case HttpMethods.PUT:\n        return apiClient.put(url, data, config)\n\n      case HttpMethods.PATCH:\n        return apiClient.patch(url, data, config)\n\n      case HttpMethods.DELETE:\n        return apiClient.delete(url, config)\n\n      case HttpMethods.HEAD:\n        return apiClient.head(url, config)\n\n      case HttpMethods.OPTIONS:\n        return apiClient.options(url, config)\n\n      default:\n        throw new Error('API client method does not exist.')\n    }\n  }\n\n  const apiRequest = async <T = any>({\n    method,\n    url,\n    data,\n    config,\n    actions,\n  }: {\n    method: Method\n    url: string\n    data?: {}\n    config?: AxiosRequestConfig\n    actions?: IAction[]\n  }): Promise<AxiosResponse<T>> => {\n    if (actions?.length) {\n      actions.forEach((action) => addToActionsInProgress(action))\n    }\n\n    try {\n      const rsp = await handleApiClientMethod({\n        method,\n        url,\n        data,\n        config,\n      })\n\n      if (rsp) {\n        if (actions?.length) {\n          actions.forEach((action) => removeFromActionsInProgress(action))\n          actions.forEach((action) => addToActionsInSuccess(action))\n        }\n      }\n\n      return rsp\n    }\n    catch (e: any) {\n      if (actions) {\n        actions.forEach((action) => {\n          processActionError(action, e)\n        })\n      }\n\n      return e\n    }\n  }\n\n  return {\n    apiRequest,\n  }\n}\n","import { storeToRefs } from 'pinia'\nimport type { IAction } from '@/shared/types/api/IAction'\nimport { useVehicleStore } from '@/shared/api/stores/vehicle'\nimport type { CreateVehicleDTO, EditVehicleDTO, GetVehicleDTO, GetVehiclesDTO } from '@/shared/types/vehicles/vehicleDTOs'\nimport type { CreateResponse, GetResponse } from '@/shared/types/requests/ResponseTypes'\nimport type { IVehicle } from '@/shared/types/vehicles/IVehicle'\nimport { useApiRequest } from '@/shared/api/useApiRequest'\nimport { HttpMethods } from '@/shared/types/api/http-methods'\n\nexport function useVehicle() {\n  const { apiRequest } = useApiRequest()\n  const { storeVehicles } = storeToRefs(useVehicleStore())\n  const {\n    storeSetVehicles,\n    storeAddVehicleToIndex,\n    storeUpdateVehicleInIndex,\n    storeClearAllVehicles,\n  } = useVehicleStore()\n\n  const vehicleActions = {\n    getVehicleById: {\n      id: 'getVehicleById',\n      successMessage: 'Successfully loaded vehicle.',\n      errorMessage: 'There was an error loading vehicle.',\n    } as IAction,\n    getAllVehicles: {\n      id: 'getAllVehicles',\n      successMessage: 'Successfully loaded vehicles.',\n      errorMessage: 'There was an error loading vehicles.',\n    } as IAction,\n    createVehicle: {\n      id: 'createVehicle',\n      successMessage: 'Successfully created vehicle.',\n      errorMessage: 'There was an error creating vehicle.',\n    } as IAction,\n    editVehicle: {\n      id: 'editVehicle',\n      successMessage: 'Successfully updated the vehicle.',\n      errorMessage: 'There was an error updating vehicle.',\n    } as IAction,\n  }\n\n  const apiGetVehicle = async (getVehicleDTO: GetVehicleDTO): Promise<GetResponse<'vehicle', IVehicle>> => {\n    return await apiRequest({\n      method: HttpMethods.GET,\n      url: `api/vehicle/${getVehicleDTO.id}`,\n      actions: [vehicleActions.getVehicleById],\n    })\n  }\n  const apiGetVehicles = async (\n    getVehiclesDTO: GetVehiclesDTO,\n  ): Promise<GetResponse<'vehicles', IVehicle[]>> => {\n    const searchBy = getVehiclesDTO.selectedDepartment === null ? 'all' : getVehiclesDTO.selectedDepartment.id\n    return await apiRequest({\n      method: HttpMethods.GET,\n      url: 'api/vehicles',\n      actions: [vehicleActions.getAllVehicles],\n      config: {\n        params: {\n          paginate: false,\n          selectedDepartmentId: searchBy,\n          sortBy: getVehiclesDTO.sortBy,\n          orderBy: getVehiclesDTO.orderBy,\n        },\n      },\n    })\n  }\n\n  const apiCreateVehicle = async (createVehicleDTO: CreateVehicleDTO): Promise<CreateResponse<'vehicle', IVehicle>> => {\n    return await apiRequest({\n      method: HttpMethods.POST,\n      url: 'api/vehicle',\n      data: createVehicleDTO,\n      actions: [vehicleActions.createVehicle],\n    })\n  }\n\n  const apiUpdateVehicle = async (editVehicleDTO: EditVehicleDTO): Promise<GetResponse<'vehicle', IVehicle>> => {\n    return await apiRequest({\n      method: HttpMethods.PUT,\n      url: `api/vehicle/${editVehicleDTO.id}`,\n      data: editVehicleDTO,\n      actions: [vehicleActions.editVehicle],\n    })\n  }\n\n  const storeGetVehicles = (): IVehicle[] => {\n    return storeVehicles.value\n  }\n\n  return {\n    vehicleActions,\n    storeSetVehicles,\n    storeAddVehicleToIndex,\n    storeUpdateVehicleInIndex,\n    storeClearAllVehicles,\n    storeGetVehicles,\n    apiGetVehicle,\n    apiGetVehicles,\n    apiCreateVehicle,\n    apiUpdateVehicle,\n  }\n}\n"],"names":["useVehicleStore","defineStore","storeVehicles","ref","storeSetVehicles","vehicles","storeAddVehicleToIndex","i","storeRemoveVehicleFromIndex","index","vehicle","storeUpdateVehicleInIndex","storeClearAllVehicles","HttpMethods","useApiRequest","apiClient","useApiClient","addToActionsInProgress","removeFromActionsInProgress","processActionError","addToActionsInSuccess","useUi","handleApiClientMethod","method","url","data","config","actions","action","rsp","e","useVehicle","apiRequest","storeToRefs","vehicleActions","getVehicleDTO","getVehiclesDTO","searchBy","createVehicleDTO","editVehicleDTO"],"mappings":"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"}